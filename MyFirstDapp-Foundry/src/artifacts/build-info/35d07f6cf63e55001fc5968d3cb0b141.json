{
	"id": "35d07f6cf63e55001fc5968d3cb0b141",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Hulio.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\";\n/**\n * erc20代币合约\n */\ncontract Hulio is ERC20Permit {\n\n    /**\n     * 构造函数\n     */\n    constructor() ERC20(\"Hulio\", \"HU\") ERC20Permit(\"Hulio\") {}\n\n    //erc20 transfer失败\n    error ERC1363TransferFailed(address to, uint256 value);\n    //回调onTransferReceived失败\n    error ERC1363ReceiveFailed(address to);\n\n    /**\n     * mint, 暂时允许所有人挖\n     */\n    function mint() external {\n        _mint(msg.sender, 10 ** 9);\n    }\n\n    /**\n     * transfer and invoke hook (if to is a contract)\n     */\n    function transferAndCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) public returns (bool) {\n        //1. transfer\n        if (!transfer(to, value)) {\n            revert ERC1363TransferFailed(to, value);\n        }\n\n        //2. invoke hook\n        _checkOnTransferReceived(_msgSender(), to, value, data);\n\n        return true;\n    }\n\n    /**\n     * invoke hook\n     */\n    function _checkOnTransferReceived(\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) private {\n        //not a contract address\n        if (to.code.length == 0) {\n            return;\n        }\n\n        //invoke hook\n        try\n            IERC1363Receiver(to).onTransferReceived(\n                _msgSender(),\n                from,\n                value,\n                data\n            )\n        returns (bytes4 retval) {\n            if (retval != IERC1363Receiver.onTransferReceived.selector) {\n                revert ERC1363ReceiveFailed(to);\n            }\n        } catch (bytes memory reason) {\n            revert ERC1363ReceiveFailed(to);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1363Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface for any contract that wants to support {IERC1363-transferAndCall}\n * or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.\n */\ninterface IERC1363Receiver {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0x88a7ca5c.\n     * 0x88a7ca5c === bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))\n     */\n\n    /**\n     * @notice Handle the receipt of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n     * transfer. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n     * @param from address The address which are token transferred from\n     * @param amount uint256 The amount of tokens transferred\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing\n     */\n    function onTransferReceived(\n        address operator,\n        address from,\n        uint256 amount,\n        bytes memory data\n    ) external returns (bytes4);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@openzeppelin/=lib/openzeppelin-contracts/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol": {
				"IERC1363Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onTransferReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support {IERC1363-transferAndCall} or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.",
						"kind": "dev",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"details": "Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
								"params": {
									"amount": "uint256 The amount of tokens transferred",
									"data": "bytes Additional data with no specified format",
									"from": "address The address which are token transferred from",
									"operator": "address The address which called `transferAndCall` or `transferFromAndCall` function"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onTransferReceived(address,address,uint256,bytes)": "88a7ca5c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support {IERC1363-transferAndCall} or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens transferred\",\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294\",\"dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of ERC1363 tokens"
							}
						},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 202,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 208,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 210,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 212,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 214,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 202,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 208,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 210,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 212,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 214,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2053,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2055,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1032,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1032,
								"contract": "lib/openzeppelin-contracts/contracts/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd7a27ac18df37845a98582d9347a10160a5a6efd89a5cab3ec6fd0d59b4806664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd7a27ac18df37845a98582d9347a10160a5a6efd89a5cab3ec6fd0d59b4806664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH27 0x27AC18DF37845A98582D9347A10160A5A6EFD89A5CAB3EC6FD0D59 0xB4 DUP1 PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd7a27ac18df37845a98582d9347a10160a5a6efd89a5cab3ec6fd0d59b4806664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH27 0x27AC18DF37845A98582D9347A10160A5A6EFD89A5CAB3EC6FD0D59 0xB4 DUP1 PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1255:3053:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd7a27ac18df37845a98582d9347a10160a5a6efd89a5cab3ec6fd0d59b4806664736f6c634300081a0033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220adfcf6c7128ab2fd7ba3a8fa4940131d7de0c42052c02f8588ed9f2d514fec3464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220adfcf6c7128ab2fd7ba3a8fa4940131d7de0c42052c02f8588ed9f2d514fec3464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xFC 0xF6 0xC7 SLT DUP11 0xB2 REVERT PUSH28 0xA3A8FA4940131D7DE0C42052C02F8588ED9F2D514FEC3464736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220adfcf6c7128ab2fd7ba3a8fa4940131d7de0c42052c02f8588ed9f2d514fec3464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xFC 0xF6 0xC7 SLT DUP11 0xB2 REVERT PUSH28 0xA3A8FA4940131D7DE0C42052C02F8588ED9F2D514FEC3464736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adfcf6c7128ab2fd7ba3a8fa4940131d7de0c42052c02f8588ed9f2d514fec3464736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122062b5c2188f57ddcb529af9913d9ef77132e00610f8b09451bbbfa98033a15be864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122062b5c2188f57ddcb529af9913d9ef77132e00610f8b09451bbbfa98033a15be864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB5C218 DUP16 JUMPI 0xDD 0xCB MSTORE SWAP11 0xF9 SWAP2 RETURNDATASIZE SWAP15 0xF7 PUSH18 0x32E00610F8B09451BBBFA98033A15BE86473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122062b5c2188f57ddcb529af9913d9ef77132e00610f8b09451bbbfa98033a15be864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB5C218 DUP16 JUMPI 0xDD 0xCB MSTORE SWAP11 0xF9 SWAP2 RETURNDATASIZE SWAP15 0xF7 PUSH18 0x32E00610F8B09451BBBFA98033A15BE86473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062b5c2188f57ddcb529af9913d9ef77132e00610f8b09451bbbfa98033a15be864736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122023ce08158fc7123ac879023f6aac895e113ee84def8be1c29d8f1a0088c0317064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122023ce08158fc7123ac879023f6aac895e113ee84def8be1c29d8f1a0088c0317064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCE ADDMOD ISZERO DUP16 0xC7 SLT GASPRICE 0xC8 PUSH26 0x23F6AAC895E113EE84DEF8BE1C29D8F1A0088C0317064736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122023ce08158fc7123ac879023f6aac895e113ee84def8be1c29d8f1a0088c0317064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCE ADDMOD ISZERO DUP16 0xC7 SLT GASPRICE 0xC8 PUSH26 0x23F6AAC895E113EE84DEF8BE1C29D8F1A0088C0317064736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023ce08158fc7123ac879023f6aac895e113ee84def8be1c29d8f1a0088c0317064736f6c634300081a0033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2053,
								"contract": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2055,
								"contract": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220718281c450e9293b81a7c747fa5471554c1f7a6a99698e4c209a25b8029f781464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220718281c450e9293b81a7c747fa5471554c1f7a6a99698e4c209a25b8029f781464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x8281C450E9293B81A7C747FA5471554C1F7A PUSH11 0x99698E4C209A25B8029F78 EQ PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220718281c450e9293b81a7c747fa5471554c1f7a6a99698e4c209a25b8029f781464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x8281C450E9293B81A7C747FA5471554C1F7A PUSH11 0x99698E4C209A25B8029F78 EQ PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220718281c450e9293b81a7c747fa5471554c1f7a6a99698e4c209a25b8029f781464736f6c634300081a0033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a21cea2a3b0e519e48d108e40159f6fd00f89e4f83f769efd5bcceaf4c49eb664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a21cea2a3b0e519e48d108e40159f6fd00f89e4f83f769efd5bcceaf4c49eb664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x21 0xCE LOG2 LOG3 0xB0 0xE5 NOT 0xE4 DUP14 LT DUP15 BLOCKHASH ISZERO SWAP16 PUSH16 0xD00F89E4F83F769EFD5BCCEAF4C49EB6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a21cea2a3b0e519e48d108e40159f6fd00f89e4f83f769efd5bcceaf4c49eb664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x21 0xCE LOG2 LOG3 0xB0 0xE5 NOT 0xE4 DUP14 LT DUP15 BLOCKHASH ISZERO SWAP16 PUSH16 0xD00F89E4F83F769EFD5BCCEAF4C49EB6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a21cea2a3b0e519e48d108e40159f6fd00f89e4f83f769efd5bcceaf4c49eb664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220535f8f190114c5cda1a4b4090b4e612b32034a995470636f18576ed8c19d65fc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220535f8f190114c5cda1a4b4090b4e612b32034a995470636f18576ed8c19d65fc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH0 DUP16 NOT ADD EQ 0xC5 0xCD LOG1 LOG4 0xB4 MULMOD SIGNEXTEND 0x4E PUSH2 0x2B32 SUB BLOBBASEFEE SWAP10 SLOAD PUSH17 0x636F18576ED8C19D65FC64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220535f8f190114c5cda1a4b4090b4e612b32034a995470636f18576ed8c19d65fc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH0 DUP16 NOT ADD EQ 0xC5 0xCD LOG1 LOG4 0xB4 MULMOD SIGNEXTEND 0x4E PUSH2 0x2B32 SUB BLOBBASEFEE SWAP10 SLOAD PUSH17 0x636F18576ED8C19D65FC64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220535f8f190114c5cda1a4b4090b4e612b32034a995470636f18576ed8c19d65fc64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Hulio.sol": {
				"Hulio": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ERC1363ReceiveFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "ERC1363TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Hulio.sol\":233:1855  contract Hulio is ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"src/Hulio.sol\":306:364  constructor() ERC20(\"Hulio\", \"HU\") ERC20Permit(\"Hulio\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x48756c696f000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1613:1617  name */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x48756c696f000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4855000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_11\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_13\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_14\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_15)\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"src/Hulio.sol\":233:1855  contract Hulio is ERC20Permit {... */\n  jump(tag_18)\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_12:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_21\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_22)\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_19)\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_20:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_24\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_25)\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_26\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_26:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_19:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_15:\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_28\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_22:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_31:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_34\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_25:\n    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_37:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_38:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_39:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_40:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_75:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_77\n  tag_39\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":714:798   */\ntag_76:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_41:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_42:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_43:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_44:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_82\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1429:1468   */\n  tag_83\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_45:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_46:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_47:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_87\n    /* \"#utility.yul\":1818:1852   */\n  tag_88\n    /* \"#utility.yul\":1827:1851   */\n  tag_89\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_48:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_49:\n    /* \"#utility.yul\":2056:2095   */\n  tag_92\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2117:2208   */\n  tag_93\n    /* \"#utility.yul\":2166:2207   */\n  tag_94\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_48\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_50:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_51:\n    /* \"#utility.yul\":2377:2409   */\n  tag_97\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2418:2483   */\n  tag_98\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_49\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_52:\n    /* \"#utility.yul\":2555:2675   */\ntag_100:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_103\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_53:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_106\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_41\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2906:2935   */\n  tag_107\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_42\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_108:\n    /* \"#utility.yul\":3133:3213   */\n  tag_109\n    /* \"#utility.yul\":3189:3211   */\n  tag_110\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_52\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_105:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_54:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_55:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_113\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_54\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_56:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_115\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_117\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_37\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_119\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4038:4094   */\ntag_118:\n    /* \"#utility.yul\":4118:4156   */\n  tag_120\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_40\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4203:4270   */\n  tag_121\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_53\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_123\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_124:\n    /* \"#utility.yul\":5144:5211   */\n  tag_125\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_56\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_122)\n    /* \"#utility.yul\":4365:4983   */\ntag_123:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_126\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_41\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_127:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_131\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_55\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_130:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_122:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5311   */\ntag_57:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5300:5305   */\n  dup2\n    /* \"#utility.yul\":5289:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5435   */\ntag_58:\n    /* \"#utility.yul\":5404:5428   */\n  tag_134\n    /* \"#utility.yul\":5422:5427   */\n  dup2\n    /* \"#utility.yul\":5404:5428   */\n  tag_57\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5399:5402   */\n  dup3\n    /* \"#utility.yul\":5392:5429   */\n  mstore\n    /* \"#utility.yul\":5317:5435   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5441:5559   */\ntag_59:\n    /* \"#utility.yul\":5528:5552   */\n  tag_136\n    /* \"#utility.yul\":5546:5551   */\n  dup2\n    /* \"#utility.yul\":5528:5552   */\n  tag_45\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5523:5526   */\n  dup3\n    /* \"#utility.yul\":5516:5553   */\n  mstore\n    /* \"#utility.yul\":5441:5559   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5565:5691   */\ntag_60:\n    /* \"#utility.yul\":5602:5609   */\n  0x00\n    /* \"#utility.yul\":5642:5684   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5635:5640   */\n  dup3\n    /* \"#utility.yul\":5631:5685   */\n  and\n    /* \"#utility.yul\":5620:5685   */\n  swap1\n  pop\n    /* \"#utility.yul\":5565:5691   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5697:5793   */\ntag_61:\n    /* \"#utility.yul\":5734:5741   */\n  0x00\n    /* \"#utility.yul\":5763:5787   */\n  tag_139\n    /* \"#utility.yul\":5781:5786   */\n  dup3\n    /* \"#utility.yul\":5763:5787   */\n  tag_60\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5752:5787   */\n  swap1\n  pop\n    /* \"#utility.yul\":5697:5793   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5799:5917   */\ntag_62:\n    /* \"#utility.yul\":5886:5910   */\n  tag_141\n    /* \"#utility.yul\":5904:5909   */\n  dup2\n    /* \"#utility.yul\":5886:5910   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5881:5884   */\n  dup3\n    /* \"#utility.yul\":5874:5911   */\n  mstore\n    /* \"#utility.yul\":5799:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6587   */\ntag_29:\n    /* \"#utility.yul\":6128:6132   */\n  0x00\n    /* \"#utility.yul\":6166:6169   */\n  0xa0\n    /* \"#utility.yul\":6155:6164   */\n  dup3\n    /* \"#utility.yul\":6151:6170   */\n  add\n    /* \"#utility.yul\":6143:6170   */\n  swap1\n  pop\n    /* \"#utility.yul\":6180:6251   */\n  tag_143\n    /* \"#utility.yul\":6248:6249   */\n  0x00\n    /* \"#utility.yul\":6237:6246   */\n  dup4\n    /* \"#utility.yul\":6233:6250   */\n  add\n    /* \"#utility.yul\":6224:6230   */\n  dup9\n    /* \"#utility.yul\":6180:6251   */\n  tag_58\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6261:6333   */\n  tag_144\n    /* \"#utility.yul\":6329:6331   */\n  0x20\n    /* \"#utility.yul\":6318:6327   */\n  dup4\n    /* \"#utility.yul\":6314:6332   */\n  add\n    /* \"#utility.yul\":6305:6311   */\n  dup8\n    /* \"#utility.yul\":6261:6333   */\n  tag_58\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6343:6415   */\n  tag_145\n    /* \"#utility.yul\":6411:6413   */\n  0x40\n    /* \"#utility.yul\":6400:6409   */\n  dup4\n    /* \"#utility.yul\":6396:6414   */\n  add\n    /* \"#utility.yul\":6387:6393   */\n  dup7\n    /* \"#utility.yul\":6343:6415   */\n  tag_58\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6425:6497   */\n  tag_146\n    /* \"#utility.yul\":6493:6495   */\n  0x60\n    /* \"#utility.yul\":6482:6491   */\n  dup4\n    /* \"#utility.yul\":6478:6496   */\n  add\n    /* \"#utility.yul\":6469:6475   */\n  dup6\n    /* \"#utility.yul\":6425:6497   */\n  tag_59\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6507:6580   */\n  tag_147\n    /* \"#utility.yul\":6575:6578   */\n  0x80\n    /* \"#utility.yul\":6564:6573   */\n  dup4\n    /* \"#utility.yul\":6560:6579   */\n  add\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6507:6580   */\n  tag_62\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5923:6587   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6593:6762   */\ntag_63:\n    /* \"#utility.yul\":6677:6688   */\n  0x00\n    /* \"#utility.yul\":6711:6717   */\n  dup3\n    /* \"#utility.yul\":6706:6709   */\n  dup3\n    /* \"#utility.yul\":6699:6718   */\n  mstore\n    /* \"#utility.yul\":6751:6755   */\n  0x20\n    /* \"#utility.yul\":6746:6749   */\n  dup3\n    /* \"#utility.yul\":6742:6756   */\n  add\n    /* \"#utility.yul\":6727:6756   */\n  swap1\n  pop\n    /* \"#utility.yul\":6593:6762   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6768:6907   */\ntag_64:\n    /* \"#utility.yul\":6857:6863   */\n  dup3\n    /* \"#utility.yul\":6852:6855   */\n  dup2\n    /* \"#utility.yul\":6847:6850   */\n  dup4\n    /* \"#utility.yul\":6841:6864   */\n  mcopy\n    /* \"#utility.yul\":6898:6899   */\n  0x00\n    /* \"#utility.yul\":6889:6895   */\n  dup4\n    /* \"#utility.yul\":6884:6887   */\n  dup4\n    /* \"#utility.yul\":6880:6896   */\n  add\n    /* \"#utility.yul\":6873:6900   */\n  mstore\n    /* \"#utility.yul\":6768:6907   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6913:7015   */\ntag_65:\n    /* \"#utility.yul\":6954:6960   */\n  0x00\n    /* \"#utility.yul\":7005:7007   */\n  0x1f\n    /* \"#utility.yul\":7001:7008   */\n  not\n    /* \"#utility.yul\":6996:6998   */\n  0x1f\n    /* \"#utility.yul\":6989:6994   */\n  dup4\n    /* \"#utility.yul\":6985:6999   */\n  add\n    /* \"#utility.yul\":6981:7009   */\n  and\n    /* \"#utility.yul\":6971:7009   */\n  swap1\n  pop\n    /* \"#utility.yul\":6913:7015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7021:7398   */\ntag_66:\n    /* \"#utility.yul\":7109:7112   */\n  0x00\n    /* \"#utility.yul\":7137:7176   */\n  tag_152\n    /* \"#utility.yul\":7170:7175   */\n  dup3\n    /* \"#utility.yul\":7137:7176   */\n  tag_37\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7192:7263   */\n  tag_153\n    /* \"#utility.yul\":7256:7262   */\n  dup2\n    /* \"#utility.yul\":7251:7254   */\n  dup6\n    /* \"#utility.yul\":7192:7263   */\n  tag_63\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7185:7263   */\n  swap4\n  pop\n    /* \"#utility.yul\":7272:7337   */\n  tag_154\n    /* \"#utility.yul\":7330:7336   */\n  dup2\n    /* \"#utility.yul\":7325:7328   */\n  dup6\n    /* \"#utility.yul\":7318:7322   */\n  0x20\n    /* \"#utility.yul\":7311:7316   */\n  dup7\n    /* \"#utility.yul\":7307:7323   */\n  add\n    /* \"#utility.yul\":7272:7337   */\n  tag_64\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7362:7391   */\n  tag_155\n    /* \"#utility.yul\":7384:7390   */\n  dup2\n    /* \"#utility.yul\":7362:7391   */\n  tag_65\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7357:7360   */\n  dup5\n    /* \"#utility.yul\":7353:7392   */\n  add\n    /* \"#utility.yul\":7346:7392   */\n  swap2\n  pop\n    /* \"#utility.yul\":7113:7398   */\n  pop\n    /* \"#utility.yul\":7021:7398   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7404:7717   */\ntag_33:\n    /* \"#utility.yul\":7517:7521   */\n  0x00\n    /* \"#utility.yul\":7555:7557   */\n  0x20\n    /* \"#utility.yul\":7544:7553   */\n  dup3\n    /* \"#utility.yul\":7540:7558   */\n  add\n    /* \"#utility.yul\":7532:7558   */\n  swap1\n  pop\n    /* \"#utility.yul\":7604:7613   */\n  dup2\n    /* \"#utility.yul\":7598:7602   */\n  dup2\n    /* \"#utility.yul\":7594:7614   */\n  sub\n    /* \"#utility.yul\":7590:7591   */\n  0x00\n    /* \"#utility.yul\":7579:7588   */\n  dup4\n    /* \"#utility.yul\":7575:7592   */\n  add\n    /* \"#utility.yul\":7568:7615   */\n  mstore\n    /* \"#utility.yul\":7632:7710   */\n  tag_157\n    /* \"#utility.yul\":7705:7709   */\n  dup2\n    /* \"#utility.yul\":7696:7702   */\n  dup5\n    /* \"#utility.yul\":7632:7710   */\n  tag_66\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7624:7710   */\n  swap1\n  pop\n    /* \"#utility.yul\":7404:7717   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7723:7821   */\ntag_67:\n    /* \"#utility.yul\":7774:7780   */\n  0x00\n    /* \"#utility.yul\":7808:7813   */\n  dup2\n    /* \"#utility.yul\":7802:7814   */\n  mload\n    /* \"#utility.yul\":7792:7814   */\n  swap1\n  pop\n    /* \"#utility.yul\":7723:7821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7827:7943   */\ntag_68:\n    /* \"#utility.yul\":7878:7882   */\n  0x00\n    /* \"#utility.yul\":7901:7904   */\n  dup2\n    /* \"#utility.yul\":7893:7904   */\n  swap1\n  pop\n    /* \"#utility.yul\":7931:7935   */\n  0x20\n    /* \"#utility.yul\":7926:7929   */\n  dup3\n    /* \"#utility.yul\":7922:7936   */\n  add\n    /* \"#utility.yul\":7914:7936   */\n  swap1\n  pop\n    /* \"#utility.yul\":7827:7943   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7949:8103   */\ntag_69:\n    /* \"#utility.yul\":7992:8003   */\n  0x00\n    /* \"#utility.yul\":8028:8057   */\n  tag_161\n    /* \"#utility.yul\":8052:8055   */\n  dup3\n    /* \"#utility.yul\":8046:8056   */\n  mload\n    /* \"#utility.yul\":8028:8057   */\n  tag_57\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8091:8096   */\n  dup1\n    /* \"#utility.yul\":8067:8096   */\n  swap2\n  pop\n    /* \"#utility.yul\":8004:8103   */\n  pop\n    /* \"#utility.yul\":7949:8103   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8109:8703   */\ntag_35:\n    /* \"#utility.yul\":8193:8198   */\n  0x00\n    /* \"#utility.yul\":8224:8262   */\n  tag_163\n    /* \"#utility.yul\":8256:8261   */\n  dup3\n    /* \"#utility.yul\":8224:8262   */\n  tag_67\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8287:8292   */\n  dup3\n    /* \"#utility.yul\":8314:8354   */\n  tag_164\n    /* \"#utility.yul\":8348:8353   */\n  dup5\n    /* \"#utility.yul\":8314:8354   */\n  tag_68\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8302:8354   */\n  swap1\n  pop\n    /* \"#utility.yul\":8373:8408   */\n  tag_165\n    /* \"#utility.yul\":8399:8407   */\n  dup2\n    /* \"#utility.yul\":8373:8408   */\n  tag_69\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8364:8408   */\n  swap3\n  pop\n    /* \"#utility.yul\":8432:8434   */\n  0x20\n    /* \"#utility.yul\":8424:8430   */\n  dup3\n    /* \"#utility.yul\":8421:8435   */\n  lt\n    /* \"#utility.yul\":8418:8696   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8503:8672   */\n  tag_167\n    /* \"#utility.yul\":8588:8654   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8558:8564   */\n  dup4\n    /* \"#utility.yul\":8554:8556   */\n  0x20\n    /* \"#utility.yul\":8550:8565   */\n  sub\n    /* \"#utility.yul\":8547:8548   */\n  0x08\n    /* \"#utility.yul\":8543:8566   */\n  mul\n    /* \"#utility.yul\":8503:8672   */\n  tag_43\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8480:8485   */\n  dup4\n    /* \"#utility.yul\":8459:8686   */\n  and\n    /* \"#utility.yul\":8450:8686   */\n  swap3\n  pop\n    /* \"#utility.yul\":8418:8696   */\ntag_166:\n    /* \"#utility.yul\":8199:8703   */\n  pop\n  pop\n    /* \"#utility.yul\":8109:8703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/Hulio.sol\":233:1855  contract Hulio is ERC20Permit {... */\ntag_18:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0576ac738f6eb5dec558d18c8c4e9cf880acab01cda20f603a3d5950554aeaa1\")\n  0x00\n  assignImmutable(\"0xe64fdd85c4abae7e17a3b10cd3c6103a9078ecff4005141468b48a65e9465227\")\n  0x00\n  assignImmutable(\"0xd745e4bbce3c217445e330bc909a038062e0d634734834832d66437076f9dbe0\")\n  0x00\n  assignImmutable(\"0xfa139e0a4d7fbc5ae6f4faedf7906c4e534aedb3537f8e2acf261d5a583cbcdb\")\n  0x00\n  assignImmutable(\"0xabe81aba69caf56d9ad05a099a77be906867489058d7b123f1c5d7f3daf0f7cb\")\n  0x00\n  assignImmutable(\"0xb1d581e758c3ac2789b5f345ebac061bf856141aca0183e5321140fe641707f8\")\n  0x00\n  assignImmutable(\"0xd5d4d8ff606dd724e00b29cb5d74ae94fd0e1e5922b3936ddb7fb7747e1fb956\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Hulio.sol\":233:1855  contract Hulio is ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4000aea0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x4000aea0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Hulio.sol\":593:661  function mint() external {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Hulio.sol\":737:1103  function transferAndCall(... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_92\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_93\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_94\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_95\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Hulio.sol\":593:661  function mint() external {... */\n    tag_32:\n        /* \"src/Hulio.sol\":628:654  _mint(msg.sender, 10 ** 9) */\n      tag_97\n        /* \"src/Hulio.sol\":634:644  msg.sender */\n      caller\n        /* \"src/Hulio.sol\":646:653  10 ** 9 */\n      0x3b9aca00\n        /* \"src/Hulio.sol\":628:633  _mint */\n      tag_98\n        /* \"src/Hulio.sol\":628:654  _mint(msg.sender, 10 ** 9) */\n      jump\t// in\n    tag_97:\n        /* \"src/Hulio.sol\":593:661  function mint() external {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_101\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_93\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_102\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_103\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_104\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_104:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2715:2722  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      tag_108\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2759  _domainSeparatorV4 */\n      tag_109\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      jump\t// in\n    tag_108:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2734:2761  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/Hulio.sol\":737:1103  function transferAndCall(... */\n    tag_53:\n        /* \"src/Hulio.sol\":856:860  bool */\n      0x00\n        /* \"src/Hulio.sol\":899:918  transfer(to, value) */\n      tag_111\n        /* \"src/Hulio.sol\":908:910  to */\n      dup6\n        /* \"src/Hulio.sol\":912:917  value */\n      dup6\n        /* \"src/Hulio.sol\":899:907  transfer */\n      tag_73\n        /* \"src/Hulio.sol\":899:918  transfer(to, value) */\n      jump\t// in\n    tag_111:\n        /* \"src/Hulio.sol\":894:984  if (!transfer(to, value)) {... */\n      tag_112\n      jumpi\n        /* \"src/Hulio.sol\":963:965  to */\n      dup5\n        /* \"src/Hulio.sol\":967:972  value */\n      dup5\n        /* \"src/Hulio.sol\":941:973  ERC1363TransferFailed(to, value) */\n      mload(0x40)\n      0x231b03ae00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Hulio.sol\":894:984  if (!transfer(to, value)) {... */\n    tag_112:\n        /* \"src/Hulio.sol\":1019:1074  _checkOnTransferReceived(_msgSender(), to, value, data) */\n      tag_115\n        /* \"src/Hulio.sol\":1044:1056  _msgSender() */\n      tag_116\n        /* \"src/Hulio.sol\":1044:1054  _msgSender */\n      tag_93\n        /* \"src/Hulio.sol\":1044:1056  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"src/Hulio.sol\":1058:1060  to */\n      dup7\n        /* \"src/Hulio.sol\":1062:1067  value */\n      dup7\n        /* \"src/Hulio.sol\":1069:1073  data */\n      dup7\n      dup7\n        /* \"src/Hulio.sol\":1019:1074  _checkOnTransferReceived(_msgSender(), to, value, data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Hulio.sol\":1019:1043  _checkOnTransferReceived */\n      tag_117\n        /* \"src/Hulio.sol\":1019:1074  _checkOnTransferReceived(_msgSender(), to, value, data) */\n      jump\t// in\n    tag_115:\n        /* \"src/Hulio.sol\":1092:1096  true */\n      0x01\n        /* \"src/Hulio.sol\":1085:1096  return true */\n      swap1\n      pop\n        /* \"src/Hulio.sol\":737:1103  function transferAndCall(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_62:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2497:2504  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      tag_120\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2536:2541  owner */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2535  super.nonces */\n      tag_121\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      jump\t// in\n    tag_120:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2516:2542  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_65:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_123\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_124\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_123:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_125\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_126\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_125:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n    tag_127:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_130:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_86\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_86\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_73:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_138\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_93\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_139\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_139:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_78:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1901:1909  deadline */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1909  block.timestamp > deadline */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1956:1964  deadline */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1932:1965  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n    tag_141:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2004  bytes32 structHash */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1022:1117  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2045:2050  owner */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2052:2059  spender */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2061:2066  value */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      tag_143\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2078:2083  owner */\n      dup13\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2077  _useNonce */\n      tag_144\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      jump\t// in\n    tag_143:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2086:2094  deadline */\n      dup10\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2017:2095  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_145\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2007:2096  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2096  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2119  bytes32 hash */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      tag_147\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2139:2149  structHash */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2138  _hashTypedDataV4 */\n      tag_148\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_147:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2150  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2175  address signer */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      tag_149\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2192:2196  hash */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2198:2199  v */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  r */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  s */\n      dup8\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2191  ECDSA.recover */\n      tag_150\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_149:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2206  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2230:2235  owner */\n      dup10\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2226  signer */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n      tag_151\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2279:2285  signer */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2287:2292  owner */\n      dup11\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2258:2293  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n    tag_151:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      tag_154\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2323:2328  owner */\n      dup11\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2330:2337  spender */\n      dup11\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2339:2344  value */\n      dup11\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2322  _approve */\n      tag_95\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      jump\t// in\n    tag_154:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1869:2352  {... */\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_158\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_159\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_158:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_98:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_161:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_164\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_165\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_164:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_103:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_167\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_82\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_167:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_168\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_169:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_172\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_159\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_172:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_168:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_105:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_174:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_176:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_178\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_165\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_178:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_109:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0xabe81aba69caf56d9ad05a099a77be906867489058d7b123f1c5d7f3daf0f7cb\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0xb1d581e758c3ac2789b5f345ebac061bf856141aca0183e5321140fe641707f8\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_180:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0xd5d4d8ff606dd724e00b29cb5d74ae94fd0e1e5922b3936ddb7fb7747e1fb956\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_179)\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_181:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_183\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_184\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_183:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_179:\n      swap1\n      jump\t// out\n        /* \"src/Hulio.sol\":1144:1853  function _checkOnTransferReceived(... */\n    tag_117:\n        /* \"src/Hulio.sol\":1349:1350  0 */\n      0x00\n        /* \"src/Hulio.sol\":1331:1333  to */\n      dup4\n        /* \"src/Hulio.sol\":1331:1345  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"src/Hulio.sol\":1331:1350  to.code.length == 0 */\n      sub\n        /* \"src/Hulio.sol\":1327:1383  if (to.code.length == 0) {... */\n      iszero\n        /* \"src/Hulio.sol\":1366:1373  return; */\n      tag_185\n        /* \"src/Hulio.sol\":1327:1383  if (to.code.length == 0) {... */\n      jumpi\n        /* \"src/Hulio.sol\":1448:1450  to */\n      dup3\n        /* \"src/Hulio.sol\":1431:1470  IERC1363Receiver(to).onTransferReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a7ca5c\n        /* \"src/Hulio.sol\":1488:1500  _msgSender() */\n      tag_187\n        /* \"src/Hulio.sol\":1488:1498  _msgSender */\n      tag_93\n        /* \"src/Hulio.sol\":1488:1500  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"src/Hulio.sol\":1518:1522  from */\n      dup7\n        /* \"src/Hulio.sol\":1540:1545  value */\n      dup6\n        /* \"src/Hulio.sol\":1563:1567  data */\n      dup6\n        /* \"src/Hulio.sol\":1431:1581  IERC1363Receiver(to).onTransferReceived(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      0x01\n    tag_190:\n        /* \"src/Hulio.sol\":1415:1847  try... */\n      tag_193\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_198\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_197)\n    tag_198:\n      0x60\n      swap2\n      pop\n    tag_197:\n      pop\n        /* \"src/Hulio.sol\":1833:1835  to */\n      dup4\n        /* \"src/Hulio.sol\":1812:1836  ERC1363ReceiveFailed(to) */\n      mload(0x40)\n      0x373c5c7800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Hulio.sol\":1415:1847  try... */\n    tag_193:\n        /* \"src/Hulio.sol\":1642:1686  IERC1363Receiver.onTransferReceived.selector */\n      shl(0xe0, 0x88a7ca5c)\n        /* \"src/Hulio.sol\":1632:1686  retval != IERC1363Receiver.onTransferReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/Hulio.sol\":1632:1638  retval */\n      dup2\n        /* \"src/Hulio.sol\":1632:1686  retval != IERC1363Receiver.onTransferReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/Hulio.sol\":1628:1752  if (retval != IERC1363Receiver.onTransferReceived.selector) {... */\n      tag_201\n      jumpi\n        /* \"src/Hulio.sol\":1734:1736  to */\n      dup4\n        /* \"src/Hulio.sol\":1713:1737  ERC1363ReceiveFailed(to) */\n      mload(0x40)\n      0x373c5c7800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Hulio.sol\":1628:1752  if (retval != IERC1363Receiver.onTransferReceived.selector) {... */\n    tag_201:\n        /* \"src/Hulio.sol\":1590:1762  returns (bytes4 retval) {... */\n      pop\n        /* \"src/Hulio.sol\":1144:1853  function _checkOnTransferReceived(... */\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_121:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":598:605  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":632:637  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":617:638  return _nonces[owner] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_124:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_205\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0xe64fdd85c4abae7e17a3b10cd3c6103a9078ecff4005141468b48a65e9465227\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_206\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_126:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_208\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0x0576ac738f6eb5dec558d18c8c4e9cf880acab01cda20f603a3d5950554aeaa1\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_206\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_144:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1129:1134  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":1114:1137  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_148:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_211\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_212\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_109\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_212:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_213\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_211:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_150:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_215\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_216\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_215:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_218\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_217:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_159:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_220:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_222:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_224:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_165:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_227\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_230)\n    tag_227:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_231:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_230:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_234)\n    tag_233:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_234:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_184:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xfa139e0a4d7fbc5ae6f4faedf7906c4e534aedb3537f8e2acf261d5a583cbcdb\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xd745e4bbce3c217445e330bc909a038062e0d634734834832d66437076f9dbe0\")\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_237\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_206:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_240\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_241\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_242\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_241:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_239)\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_240:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_86\n      jump\t// in\n    tag_244:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_245\n      swap1\n      tag_86\n      jump\t// in\n    tag_245:\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_247\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_246)\n    tag_247:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_248:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_248\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_239:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_213:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_216:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_250)\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_251:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_252\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_250)\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_256:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_250:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_218:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_258\n      jumpi\n      tag_259\n      tag_260\n      jump\t// in\n    tag_259:\n    tag_258:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_260\n      jump\t// in\n    tag_262:\n    tag_261:\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_257\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_265\n      jumpi\n      tag_266\n      tag_260\n      jump\t// in\n    tag_266:\n    tag_265:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_268\n      tag_260\n      jump\t// in\n    tag_268:\n    tag_267:\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_269\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_269:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_271\n      jumpi\n      tag_272\n      tag_260\n      jump\t// in\n    tag_272:\n    tag_271:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_260\n      jump\t// in\n    tag_274:\n    tag_273:\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_275\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_275:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_278\n      jumpi\n      tag_279\n      tag_260\n      jump\t// in\n    tag_279:\n    tag_278:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_260\n      jump\t// in\n    tag_281:\n    tag_280:\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_282\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_282:\n        /* \"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_257:\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_242:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_285\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_286\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_285:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_129\n      jump\t// in\n    tag_288:\n    tag_287:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_289\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_289:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_286:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_291:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_292:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_293:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_294:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_295:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_296:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_346\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_292\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":711:782   */\n      tag_347\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_293\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_348\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_294\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":881:910   */\n      tag_349\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_295\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_351\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_296\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_298:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_299:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_300:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_301:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_357\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_300\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_302:\n        /* \"#utility.yul\":1876:1900   */\n      tag_359\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_301\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_360:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_303:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_362\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_302\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_304:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_305:\n        /* \"#utility.yul\":2232:2256   */\n      tag_365\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_304\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_366:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_306:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_368\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_305\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_371\n      tag_298\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2525:2644   */\n    tag_370:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_372\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_303\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_373\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_306\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_307:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_308:\n        /* \"#utility.yul\":3089:3110   */\n      tag_376\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_307\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_378\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_308\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_309:\n        /* \"#utility.yul\":3426:3450   */\n      tag_380\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_304\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_382\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_309\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_385\n      tag_298\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3801:3920   */\n    tag_384:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_386\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_303\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_387\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_303\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_388\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_306\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_310:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_311:\n        /* \"#utility.yul\":4491:4513   */\n      tag_391\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_310\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_45:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_393\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_311\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4823   */\n    tag_312:\n        /* \"#utility.yul\":4783:4790   */\n      0x00\n        /* \"#utility.yul\":4812:4817   */\n      dup2\n        /* \"#utility.yul\":4801:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4829:4947   */\n    tag_313:\n        /* \"#utility.yul\":4916:4940   */\n      tag_396\n        /* \"#utility.yul\":4934:4939   */\n      dup2\n        /* \"#utility.yul\":4916:4940   */\n      tag_312\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4911:4914   */\n      dup3\n        /* \"#utility.yul\":4904:4941   */\n      mstore\n        /* \"#utility.yul\":4829:4947   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4953:5175   */\n    tag_49:\n        /* \"#utility.yul\":5046:5050   */\n      0x00\n        /* \"#utility.yul\":5084:5086   */\n      0x20\n        /* \"#utility.yul\":5073:5082   */\n      dup3\n        /* \"#utility.yul\":5069:5087   */\n      add\n        /* \"#utility.yul\":5061:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5097:5168   */\n      tag_398\n        /* \"#utility.yul\":5165:5166   */\n      0x00\n        /* \"#utility.yul\":5154:5163   */\n      dup4\n        /* \"#utility.yul\":5150:5167   */\n      add\n        /* \"#utility.yul\":5141:5147   */\n      dup5\n        /* \"#utility.yul\":5097:5168   */\n      tag_313\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4953:5175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5298   */\n    tag_314:\n        /* \"#utility.yul\":5290:5291   */\n      0x00\n        /* \"#utility.yul\":5287:5288   */\n      dup1\n        /* \"#utility.yul\":5280:5292   */\n      revert\n        /* \"#utility.yul\":5304:5421   */\n    tag_315:\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5410:5411   */\n      dup1\n        /* \"#utility.yul\":5403:5415   */\n      revert\n        /* \"#utility.yul\":5427:5544   */\n    tag_316:\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5533:5534   */\n      dup1\n        /* \"#utility.yul\":5526:5538   */\n      revert\n        /* \"#utility.yul\":5563:6115   */\n    tag_317:\n        /* \"#utility.yul\":5620:5628   */\n      0x00\n        /* \"#utility.yul\":5630:5636   */\n      dup1\n        /* \"#utility.yul\":5680:5683   */\n      dup4\n        /* \"#utility.yul\":5673:5677   */\n      0x1f\n        /* \"#utility.yul\":5665:5671   */\n      dup5\n        /* \"#utility.yul\":5661:5678   */\n      add\n        /* \"#utility.yul\":5657:5684   */\n      slt\n        /* \"#utility.yul\":5647:5769   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5688:5767   */\n      tag_404\n      tag_314\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5647:5769   */\n    tag_403:\n        /* \"#utility.yul\":5801:5807   */\n      dup3\n        /* \"#utility.yul\":5788:5808   */\n      calldataload\n        /* \"#utility.yul\":5778:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5831:5849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5823:5829   */\n      dup2\n        /* \"#utility.yul\":5820:5850   */\n      gt\n        /* \"#utility.yul\":5817:5934   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":5853:5932   */\n      tag_406\n      tag_315\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5817:5934   */\n    tag_405:\n        /* \"#utility.yul\":5967:5971   */\n      0x20\n        /* \"#utility.yul\":5959:5965   */\n      dup4\n        /* \"#utility.yul\":5955:5972   */\n      add\n        /* \"#utility.yul\":5943:5972   */\n      swap2\n      pop\n        /* \"#utility.yul\":6021:6024   */\n      dup4\n        /* \"#utility.yul\":6013:6017   */\n      0x01\n        /* \"#utility.yul\":6005:6011   */\n      dup3\n        /* \"#utility.yul\":6001:6018   */\n      mul\n        /* \"#utility.yul\":5991:5999   */\n      dup4\n        /* \"#utility.yul\":5987:6019   */\n      add\n        /* \"#utility.yul\":5984:6025   */\n      gt\n        /* \"#utility.yul\":5981:6109   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6028:6107   */\n      tag_408\n      tag_316\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5981:6109   */\n    tag_407:\n        /* \"#utility.yul\":5563:6115   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6121:6938   */\n    tag_52:\n        /* \"#utility.yul\":6209:6215   */\n      0x00\n        /* \"#utility.yul\":6217:6223   */\n      dup1\n        /* \"#utility.yul\":6225:6231   */\n      0x00\n        /* \"#utility.yul\":6233:6239   */\n      dup1\n        /* \"#utility.yul\":6282:6284   */\n      0x60\n        /* \"#utility.yul\":6270:6279   */\n      dup6\n        /* \"#utility.yul\":6261:6268   */\n      dup8\n        /* \"#utility.yul\":6257:6280   */\n      sub\n        /* \"#utility.yul\":6253:6285   */\n      slt\n        /* \"#utility.yul\":6250:6369   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":6288:6367   */\n      tag_411\n      tag_298\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6250:6369   */\n    tag_410:\n        /* \"#utility.yul\":6408:6409   */\n      0x00\n        /* \"#utility.yul\":6433:6486   */\n      tag_412\n        /* \"#utility.yul\":6478:6485   */\n      dup8\n        /* \"#utility.yul\":6469:6475   */\n      dup3\n        /* \"#utility.yul\":6458:6467   */\n      dup9\n        /* \"#utility.yul\":6454:6476   */\n      add\n        /* \"#utility.yul\":6433:6486   */\n      tag_303\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6423:6486   */\n      swap5\n      pop\n        /* \"#utility.yul\":6379:6496   */\n      pop\n        /* \"#utility.yul\":6535:6537   */\n      0x20\n        /* \"#utility.yul\":6561:6614   */\n      tag_413\n        /* \"#utility.yul\":6606:6613   */\n      dup8\n        /* \"#utility.yul\":6597:6603   */\n      dup3\n        /* \"#utility.yul\":6586:6595   */\n      dup9\n        /* \"#utility.yul\":6582:6604   */\n      add\n        /* \"#utility.yul\":6561:6614   */\n      tag_306\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6551:6614   */\n      swap4\n      pop\n        /* \"#utility.yul\":6506:6624   */\n      pop\n        /* \"#utility.yul\":6691:6693   */\n      0x40\n        /* \"#utility.yul\":6680:6689   */\n      dup6\n        /* \"#utility.yul\":6676:6694   */\n      add\n        /* \"#utility.yul\":6663:6695   */\n      calldataload\n        /* \"#utility.yul\":6722:6740   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6714:6720   */\n      dup2\n        /* \"#utility.yul\":6711:6741   */\n      gt\n        /* \"#utility.yul\":6708:6825   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6744:6823   */\n      tag_415\n      tag_299\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6708:6825   */\n    tag_414:\n        /* \"#utility.yul\":6857:6921   */\n      tag_416\n        /* \"#utility.yul\":6913:6920   */\n      dup8\n        /* \"#utility.yul\":6904:6910   */\n      dup3\n        /* \"#utility.yul\":6893:6902   */\n      dup9\n        /* \"#utility.yul\":6889:6911   */\n      add\n        /* \"#utility.yul\":6857:6921   */\n      tag_317\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6839:6921   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6634:6931   */\n      pop\n        /* \"#utility.yul\":6121:6938   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6944:7273   */\n    tag_57:\n        /* \"#utility.yul\":7003:7009   */\n      0x00\n        /* \"#utility.yul\":7052:7054   */\n      0x20\n        /* \"#utility.yul\":7040:7049   */\n      dup3\n        /* \"#utility.yul\":7031:7038   */\n      dup5\n        /* \"#utility.yul\":7027:7050   */\n      sub\n        /* \"#utility.yul\":7023:7055   */\n      slt\n        /* \"#utility.yul\":7020:7139   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7058:7137   */\n      tag_419\n      tag_298\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7020:7139   */\n    tag_418:\n        /* \"#utility.yul\":7178:7179   */\n      0x00\n        /* \"#utility.yul\":7203:7256   */\n      tag_420\n        /* \"#utility.yul\":7248:7255   */\n      dup5\n        /* \"#utility.yul\":7239:7245   */\n      dup3\n        /* \"#utility.yul\":7228:7237   */\n      dup6\n        /* \"#utility.yul\":7224:7246   */\n      add\n        /* \"#utility.yul\":7203:7256   */\n      tag_303\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7193:7256   */\n      swap2\n      pop\n        /* \"#utility.yul\":7149:7266   */\n      pop\n        /* \"#utility.yul\":6944:7273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7279:7428   */\n    tag_318:\n        /* \"#utility.yul\":7315:7322   */\n      0x00\n        /* \"#utility.yul\":7355:7421   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7348:7353   */\n      dup3\n        /* \"#utility.yul\":7344:7422   */\n      and\n        /* \"#utility.yul\":7333:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7279:7428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7434:7549   */\n    tag_319:\n        /* \"#utility.yul\":7519:7542   */\n      tag_423\n        /* \"#utility.yul\":7536:7541   */\n      dup2\n        /* \"#utility.yul\":7519:7542   */\n      tag_318\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7514:7517   */\n      dup3\n        /* \"#utility.yul\":7507:7543   */\n      mstore\n        /* \"#utility.yul\":7434:7549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7555:7673   */\n    tag_320:\n        /* \"#utility.yul\":7642:7666   */\n      tag_425\n        /* \"#utility.yul\":7660:7665   */\n      dup2\n        /* \"#utility.yul\":7642:7666   */\n      tag_301\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7637:7640   */\n      dup3\n        /* \"#utility.yul\":7630:7667   */\n      mstore\n        /* \"#utility.yul\":7555:7673   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7679:7793   */\n    tag_321:\n        /* \"#utility.yul\":7746:7752   */\n      0x00\n        /* \"#utility.yul\":7780:7785   */\n      dup2\n        /* \"#utility.yul\":7774:7786   */\n      mload\n        /* \"#utility.yul\":7764:7786   */\n      swap1\n      pop\n        /* \"#utility.yul\":7679:7793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7799:7983   */\n    tag_322:\n        /* \"#utility.yul\":7898:7909   */\n      0x00\n        /* \"#utility.yul\":7932:7938   */\n      dup3\n        /* \"#utility.yul\":7927:7930   */\n      dup3\n        /* \"#utility.yul\":7920:7939   */\n      mstore\n        /* \"#utility.yul\":7972:7976   */\n      0x20\n        /* \"#utility.yul\":7967:7970   */\n      dup3\n        /* \"#utility.yul\":7963:7977   */\n      add\n        /* \"#utility.yul\":7948:7977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7989:8121   */\n    tag_323:\n        /* \"#utility.yul\":8056:8060   */\n      0x00\n        /* \"#utility.yul\":8079:8082   */\n      dup2\n        /* \"#utility.yul\":8071:8082   */\n      swap1\n      pop\n        /* \"#utility.yul\":8109:8113   */\n      0x20\n        /* \"#utility.yul\":8104:8107   */\n      dup3\n        /* \"#utility.yul\":8100:8114   */\n      add\n        /* \"#utility.yul\":8092:8114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7989:8121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8127:8235   */\n    tag_324:\n        /* \"#utility.yul\":8204:8228   */\n      tag_430\n        /* \"#utility.yul\":8222:8227   */\n      dup2\n        /* \"#utility.yul\":8204:8228   */\n      tag_304\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8199:8202   */\n      dup3\n        /* \"#utility.yul\":8192:8229   */\n      mstore\n        /* \"#utility.yul\":8127:8235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8241:8420   */\n    tag_325:\n        /* \"#utility.yul\":8310:8320   */\n      0x00\n        /* \"#utility.yul\":8331:8377   */\n      tag_432\n        /* \"#utility.yul\":8373:8376   */\n      dup4\n        /* \"#utility.yul\":8365:8371   */\n      dup4\n        /* \"#utility.yul\":8331:8377   */\n      tag_324\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8409:8413   */\n      0x20\n        /* \"#utility.yul\":8404:8407   */\n      dup4\n        /* \"#utility.yul\":8400:8414   */\n      add\n        /* \"#utility.yul\":8386:8414   */\n      swap1\n      pop\n        /* \"#utility.yul\":8241:8420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8426:8539   */\n    tag_326:\n        /* \"#utility.yul\":8496:8500   */\n      0x00\n        /* \"#utility.yul\":8528:8532   */\n      0x20\n        /* \"#utility.yul\":8523:8526   */\n      dup3\n        /* \"#utility.yul\":8519:8533   */\n      add\n        /* \"#utility.yul\":8511:8533   */\n      swap1\n      pop\n        /* \"#utility.yul\":8426:8539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8575:9307   */\n    tag_327:\n        /* \"#utility.yul\":8694:8697   */\n      0x00\n        /* \"#utility.yul\":8723:8777   */\n      tag_435\n        /* \"#utility.yul\":8771:8776   */\n      dup3\n        /* \"#utility.yul\":8723:8777   */\n      tag_321\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8793:8879   */\n      tag_436\n        /* \"#utility.yul\":8872:8878   */\n      dup2\n        /* \"#utility.yul\":8867:8870   */\n      dup6\n        /* \"#utility.yul\":8793:8879   */\n      tag_322\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8786:8879   */\n      swap4\n      pop\n        /* \"#utility.yul\":8903:8959   */\n      tag_437\n        /* \"#utility.yul\":8953:8958   */\n      dup4\n        /* \"#utility.yul\":8903:8959   */\n      tag_323\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8982:8989   */\n      dup1\n        /* \"#utility.yul\":9013:9014   */\n      0x00\n        /* \"#utility.yul\":8998:9282   */\n    tag_438:\n        /* \"#utility.yul\":9023:9029   */\n      dup4\n        /* \"#utility.yul\":9020:9021   */\n      dup2\n        /* \"#utility.yul\":9017:9030   */\n      lt\n        /* \"#utility.yul\":8998:9282   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":9099:9105   */\n      dup2\n        /* \"#utility.yul\":9093:9106   */\n      mload\n        /* \"#utility.yul\":9126:9189   */\n      tag_441\n        /* \"#utility.yul\":9185:9188   */\n      dup9\n        /* \"#utility.yul\":9170:9183   */\n      dup3\n        /* \"#utility.yul\":9126:9189   */\n      tag_325\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9119:9189   */\n      swap8\n      pop\n        /* \"#utility.yul\":9212:9272   */\n      tag_442\n        /* \"#utility.yul\":9265:9271   */\n      dup4\n        /* \"#utility.yul\":9212:9272   */\n      tag_326\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9202:9272   */\n      swap3\n      pop\n        /* \"#utility.yul\":9058:9282   */\n      pop\n        /* \"#utility.yul\":9045:9046   */\n      0x01\n        /* \"#utility.yul\":9042:9043   */\n      dup2\n        /* \"#utility.yul\":9038:9047   */\n      add\n        /* \"#utility.yul\":9033:9047   */\n      swap1\n      pop\n        /* \"#utility.yul\":8998:9282   */\n      jump(tag_438)\n    tag_440:\n        /* \"#utility.yul\":9002:9016   */\n      pop\n        /* \"#utility.yul\":9298:9301   */\n      dup6\n        /* \"#utility.yul\":9291:9301   */\n      swap4\n      pop\n        /* \"#utility.yul\":8699:9307   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8575:9307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9313:10528   */\n    tag_67:\n        /* \"#utility.yul\":9662:9666   */\n      0x00\n        /* \"#utility.yul\":9700:9703   */\n      0xe0\n        /* \"#utility.yul\":9689:9698   */\n      dup3\n        /* \"#utility.yul\":9685:9704   */\n      add\n        /* \"#utility.yul\":9677:9704   */\n      swap1\n      pop\n        /* \"#utility.yul\":9714:9783   */\n      tag_444\n        /* \"#utility.yul\":9780:9781   */\n      0x00\n        /* \"#utility.yul\":9769:9778   */\n      dup4\n        /* \"#utility.yul\":9765:9782   */\n      add\n        /* \"#utility.yul\":9756:9762   */\n      dup11\n        /* \"#utility.yul\":9714:9783   */\n      tag_319\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9830:9839   */\n      dup2\n        /* \"#utility.yul\":9824:9828   */\n      dup2\n        /* \"#utility.yul\":9820:9840   */\n      sub\n        /* \"#utility.yul\":9815:9817   */\n      0x20\n        /* \"#utility.yul\":9804:9813   */\n      dup4\n        /* \"#utility.yul\":9800:9818   */\n      add\n        /* \"#utility.yul\":9793:9841   */\n      mstore\n        /* \"#utility.yul\":9858:9936   */\n      tag_445\n        /* \"#utility.yul\":9931:9935   */\n      dup2\n        /* \"#utility.yul\":9922:9928   */\n      dup10\n        /* \"#utility.yul\":9858:9936   */\n      tag_296\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9850:9936   */\n      swap1\n      pop\n        /* \"#utility.yul\":9983:9992   */\n      dup2\n        /* \"#utility.yul\":9977:9981   */\n      dup2\n        /* \"#utility.yul\":9973:9993   */\n      sub\n        /* \"#utility.yul\":9968:9970   */\n      0x40\n        /* \"#utility.yul\":9957:9966   */\n      dup4\n        /* \"#utility.yul\":9953:9971   */\n      add\n        /* \"#utility.yul\":9946:9994   */\n      mstore\n        /* \"#utility.yul\":10011:10089   */\n      tag_446\n        /* \"#utility.yul\":10084:10088   */\n      dup2\n        /* \"#utility.yul\":10075:10081   */\n      dup9\n        /* \"#utility.yul\":10011:10089   */\n      tag_296\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10003:10089   */\n      swap1\n      pop\n        /* \"#utility.yul\":10099:10171   */\n      tag_447\n        /* \"#utility.yul\":10167:10169   */\n      0x60\n        /* \"#utility.yul\":10156:10165   */\n      dup4\n        /* \"#utility.yul\":10152:10170   */\n      add\n        /* \"#utility.yul\":10143:10149   */\n      dup8\n        /* \"#utility.yul\":10099:10171   */\n      tag_309\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10181:10254   */\n      tag_448\n        /* \"#utility.yul\":10249:10252   */\n      0x80\n        /* \"#utility.yul\":10238:10247   */\n      dup4\n        /* \"#utility.yul\":10234:10253   */\n      add\n        /* \"#utility.yul\":10225:10231   */\n      dup7\n        /* \"#utility.yul\":10181:10254   */\n      tag_320\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10264:10337   */\n      tag_449\n        /* \"#utility.yul\":10332:10335   */\n      0xa0\n        /* \"#utility.yul\":10321:10330   */\n      dup4\n        /* \"#utility.yul\":10317:10336   */\n      add\n        /* \"#utility.yul\":10308:10314   */\n      dup6\n        /* \"#utility.yul\":10264:10337   */\n      tag_313\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10385:10394   */\n      dup2\n        /* \"#utility.yul\":10379:10383   */\n      dup2\n        /* \"#utility.yul\":10375:10395   */\n      sub\n        /* \"#utility.yul\":10369:10372   */\n      0xc0\n        /* \"#utility.yul\":10358:10367   */\n      dup4\n        /* \"#utility.yul\":10354:10373   */\n      add\n        /* \"#utility.yul\":10347:10396   */\n      mstore\n        /* \"#utility.yul\":10413:10521   */\n      tag_450\n        /* \"#utility.yul\":10516:10520   */\n      dup2\n        /* \"#utility.yul\":10507:10513   */\n      dup5\n        /* \"#utility.yul\":10413:10521   */\n      tag_327\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10405:10521   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:10528   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10534:10652   */\n    tag_328:\n        /* \"#utility.yul\":10605:10627   */\n      tag_452\n        /* \"#utility.yul\":10621:10626   */\n      dup2\n        /* \"#utility.yul\":10605:10627   */\n      tag_310\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10598:10603   */\n      dup2\n        /* \"#utility.yul\":10595:10628   */\n      eq\n        /* \"#utility.yul\":10585:10646   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":10642:10643   */\n      0x00\n        /* \"#utility.yul\":10639:10640   */\n      dup1\n        /* \"#utility.yul\":10632:10644   */\n      revert\n        /* \"#utility.yul\":10585:10646   */\n    tag_453:\n        /* \"#utility.yul\":10534:10652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10658:10793   */\n    tag_329:\n        /* \"#utility.yul\":10702:10707   */\n      0x00\n        /* \"#utility.yul\":10740:10746   */\n      dup2\n        /* \"#utility.yul\":10727:10747   */\n      calldataload\n        /* \"#utility.yul\":10718:10747   */\n      swap1\n      pop\n        /* \"#utility.yul\":10756:10787   */\n      tag_455\n        /* \"#utility.yul\":10781:10786   */\n      dup2\n        /* \"#utility.yul\":10756:10787   */\n      tag_328\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10658:10793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10799:10921   */\n    tag_330:\n        /* \"#utility.yul\":10872:10896   */\n      tag_457\n        /* \"#utility.yul\":10890:10895   */\n      dup2\n        /* \"#utility.yul\":10872:10896   */\n      tag_312\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10865:10870   */\n      dup2\n        /* \"#utility.yul\":10862:10897   */\n      eq\n        /* \"#utility.yul\":10852:10915   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":10911:10912   */\n      0x00\n        /* \"#utility.yul\":10908:10909   */\n      dup1\n        /* \"#utility.yul\":10901:10913   */\n      revert\n        /* \"#utility.yul\":10852:10915   */\n    tag_458:\n        /* \"#utility.yul\":10799:10921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10927:11066   */\n    tag_331:\n        /* \"#utility.yul\":10973:10978   */\n      0x00\n        /* \"#utility.yul\":11011:11017   */\n      dup2\n        /* \"#utility.yul\":10998:11018   */\n      calldataload\n        /* \"#utility.yul\":10989:11018   */\n      swap1\n      pop\n        /* \"#utility.yul\":11027:11060   */\n      tag_460\n        /* \"#utility.yul\":11054:11059   */\n      dup2\n        /* \"#utility.yul\":11027:11060   */\n      tag_330\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10927:11066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11072:12271   */\n    tag_77:\n        /* \"#utility.yul\":11183:11189   */\n      0x00\n        /* \"#utility.yul\":11191:11197   */\n      dup1\n        /* \"#utility.yul\":11199:11205   */\n      0x00\n        /* \"#utility.yul\":11207:11213   */\n      dup1\n        /* \"#utility.yul\":11215:11221   */\n      0x00\n        /* \"#utility.yul\":11223:11229   */\n      dup1\n        /* \"#utility.yul\":11231:11237   */\n      0x00\n        /* \"#utility.yul\":11280:11283   */\n      0xe0\n        /* \"#utility.yul\":11268:11277   */\n      dup9\n        /* \"#utility.yul\":11259:11266   */\n      dup11\n        /* \"#utility.yul\":11255:11278   */\n      sub\n        /* \"#utility.yul\":11251:11284   */\n      slt\n        /* \"#utility.yul\":11248:11368   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":11287:11366   */\n      tag_463\n      tag_298\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11248:11368   */\n    tag_462:\n        /* \"#utility.yul\":11407:11408   */\n      0x00\n        /* \"#utility.yul\":11432:11485   */\n      tag_464\n        /* \"#utility.yul\":11477:11484   */\n      dup11\n        /* \"#utility.yul\":11468:11474   */\n      dup3\n        /* \"#utility.yul\":11457:11466   */\n      dup12\n        /* \"#utility.yul\":11453:11475   */\n      add\n        /* \"#utility.yul\":11432:11485   */\n      tag_303\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11422:11485   */\n      swap8\n      pop\n        /* \"#utility.yul\":11378:11495   */\n      pop\n        /* \"#utility.yul\":11534:11536   */\n      0x20\n        /* \"#utility.yul\":11560:11613   */\n      tag_465\n        /* \"#utility.yul\":11605:11612   */\n      dup11\n        /* \"#utility.yul\":11596:11602   */\n      dup3\n        /* \"#utility.yul\":11585:11594   */\n      dup12\n        /* \"#utility.yul\":11581:11603   */\n      add\n        /* \"#utility.yul\":11560:11613   */\n      tag_303\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11550:11613   */\n      swap7\n      pop\n        /* \"#utility.yul\":11505:11623   */\n      pop\n        /* \"#utility.yul\":11662:11664   */\n      0x40\n        /* \"#utility.yul\":11688:11741   */\n      tag_466\n        /* \"#utility.yul\":11733:11740   */\n      dup11\n        /* \"#utility.yul\":11724:11730   */\n      dup3\n        /* \"#utility.yul\":11713:11722   */\n      dup12\n        /* \"#utility.yul\":11709:11731   */\n      add\n        /* \"#utility.yul\":11688:11741   */\n      tag_306\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11678:11741   */\n      swap6\n      pop\n        /* \"#utility.yul\":11633:11751   */\n      pop\n        /* \"#utility.yul\":11790:11792   */\n      0x60\n        /* \"#utility.yul\":11816:11869   */\n      tag_467\n        /* \"#utility.yul\":11861:11868   */\n      dup11\n        /* \"#utility.yul\":11852:11858   */\n      dup3\n        /* \"#utility.yul\":11841:11850   */\n      dup12\n        /* \"#utility.yul\":11837:11859   */\n      add\n        /* \"#utility.yul\":11816:11869   */\n      tag_306\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11806:11869   */\n      swap5\n      pop\n        /* \"#utility.yul\":11761:11879   */\n      pop\n        /* \"#utility.yul\":11918:11921   */\n      0x80\n        /* \"#utility.yul\":11945:11996   */\n      tag_468\n        /* \"#utility.yul\":11988:11995   */\n      dup11\n        /* \"#utility.yul\":11979:11985   */\n      dup3\n        /* \"#utility.yul\":11968:11977   */\n      dup12\n        /* \"#utility.yul\":11964:11986   */\n      add\n        /* \"#utility.yul\":11945:11996   */\n      tag_329\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11935:11996   */\n      swap4\n      pop\n        /* \"#utility.yul\":11889:12006   */\n      pop\n        /* \"#utility.yul\":12045:12048   */\n      0xa0\n        /* \"#utility.yul\":12072:12125   */\n      tag_469\n        /* \"#utility.yul\":12117:12124   */\n      dup11\n        /* \"#utility.yul\":12108:12114   */\n      dup3\n        /* \"#utility.yul\":12097:12106   */\n      dup12\n        /* \"#utility.yul\":12093:12115   */\n      add\n        /* \"#utility.yul\":12072:12125   */\n      tag_331\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12062:12125   */\n      swap3\n      pop\n        /* \"#utility.yul\":12016:12135   */\n      pop\n        /* \"#utility.yul\":12174:12177   */\n      0xc0\n        /* \"#utility.yul\":12201:12254   */\n      tag_470\n        /* \"#utility.yul\":12246:12253   */\n      dup11\n        /* \"#utility.yul\":12237:12243   */\n      dup3\n        /* \"#utility.yul\":12226:12235   */\n      dup12\n        /* \"#utility.yul\":12222:12244   */\n      add\n        /* \"#utility.yul\":12201:12254   */\n      tag_331\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12191:12254   */\n      swap2\n      pop\n        /* \"#utility.yul\":12145:12264   */\n      pop\n        /* \"#utility.yul\":11072:12271   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12277:12751   */\n    tag_81:\n        /* \"#utility.yul\":12345:12351   */\n      0x00\n        /* \"#utility.yul\":12353:12359   */\n      dup1\n        /* \"#utility.yul\":12402:12404   */\n      0x40\n        /* \"#utility.yul\":12390:12399   */\n      dup4\n        /* \"#utility.yul\":12381:12388   */\n      dup6\n        /* \"#utility.yul\":12377:12400   */\n      sub\n        /* \"#utility.yul\":12373:12405   */\n      slt\n        /* \"#utility.yul\":12370:12489   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":12408:12487   */\n      tag_473\n      tag_298\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12370:12489   */\n    tag_472:\n        /* \"#utility.yul\":12528:12529   */\n      0x00\n        /* \"#utility.yul\":12553:12606   */\n      tag_474\n        /* \"#utility.yul\":12598:12605   */\n      dup6\n        /* \"#utility.yul\":12589:12595   */\n      dup3\n        /* \"#utility.yul\":12578:12587   */\n      dup7\n        /* \"#utility.yul\":12574:12596   */\n      add\n        /* \"#utility.yul\":12553:12606   */\n      tag_303\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12543:12606   */\n      swap3\n      pop\n        /* \"#utility.yul\":12499:12616   */\n      pop\n        /* \"#utility.yul\":12655:12657   */\n      0x20\n        /* \"#utility.yul\":12681:12734   */\n      tag_475\n        /* \"#utility.yul\":12726:12733   */\n      dup6\n        /* \"#utility.yul\":12717:12723   */\n      dup3\n        /* \"#utility.yul\":12706:12715   */\n      dup7\n        /* \"#utility.yul\":12702:12724   */\n      add\n        /* \"#utility.yul\":12681:12734   */\n      tag_303\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12671:12734   */\n      swap2\n      pop\n        /* \"#utility.yul\":12626:12744   */\n      pop\n        /* \"#utility.yul\":12277:12751   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12757:12937   */\n    tag_332:\n        /* \"#utility.yul\":12805:12882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12802:12803   */\n      0x00\n        /* \"#utility.yul\":12795:12883   */\n      mstore\n        /* \"#utility.yul\":12902:12906   */\n      0x22\n        /* \"#utility.yul\":12899:12900   */\n      0x04\n        /* \"#utility.yul\":12892:12907   */\n      mstore\n        /* \"#utility.yul\":12926:12930   */\n      0x24\n        /* \"#utility.yul\":12923:12924   */\n      0x00\n        /* \"#utility.yul\":12916:12931   */\n      revert\n        /* \"#utility.yul\":12943:13263   */\n    tag_86:\n        /* \"#utility.yul\":12987:12993   */\n      0x00\n        /* \"#utility.yul\":13024:13025   */\n      0x02\n        /* \"#utility.yul\":13018:13022   */\n      dup3\n        /* \"#utility.yul\":13014:13026   */\n      div\n        /* \"#utility.yul\":13004:13026   */\n      swap1\n      pop\n        /* \"#utility.yul\":13071:13072   */\n      0x01\n        /* \"#utility.yul\":13065:13069   */\n      dup3\n        /* \"#utility.yul\":13061:13073   */\n      and\n        /* \"#utility.yul\":13092:13110   */\n      dup1\n        /* \"#utility.yul\":13082:13163   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":13148:13152   */\n      0x7f\n        /* \"#utility.yul\":13140:13146   */\n      dup3\n        /* \"#utility.yul\":13136:13153   */\n      and\n        /* \"#utility.yul\":13126:13153   */\n      swap2\n      pop\n        /* \"#utility.yul\":13082:13163   */\n    tag_478:\n        /* \"#utility.yul\":13210:13212   */\n      0x20\n        /* \"#utility.yul\":13202:13208   */\n      dup3\n        /* \"#utility.yul\":13199:13213   */\n      lt\n        /* \"#utility.yul\":13179:13197   */\n      dup2\n        /* \"#utility.yul\":13176:13214   */\n      sub\n        /* \"#utility.yul\":13173:13257   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":13229:13247   */\n      tag_480\n      tag_332\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":13173:13257   */\n    tag_479:\n        /* \"#utility.yul\":12994:13263   */\n      pop\n        /* \"#utility.yul\":12943:13263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13269:13601   */\n    tag_114:\n        /* \"#utility.yul\":13390:13394   */\n      0x00\n        /* \"#utility.yul\":13428:13430   */\n      0x40\n        /* \"#utility.yul\":13417:13426   */\n      dup3\n        /* \"#utility.yul\":13413:13431   */\n      add\n        /* \"#utility.yul\":13405:13431   */\n      swap1\n      pop\n        /* \"#utility.yul\":13441:13512   */\n      tag_482\n        /* \"#utility.yul\":13509:13510   */\n      0x00\n        /* \"#utility.yul\":13498:13507   */\n      dup4\n        /* \"#utility.yul\":13494:13511   */\n      add\n        /* \"#utility.yul\":13485:13491   */\n      dup6\n        /* \"#utility.yul\":13441:13512   */\n      tag_320\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13522:13594   */\n      tag_483\n        /* \"#utility.yul\":13590:13592   */\n      0x20\n        /* \"#utility.yul\":13579:13588   */\n      dup4\n        /* \"#utility.yul\":13575:13593   */\n      add\n        /* \"#utility.yul\":13566:13572   */\n      dup5\n        /* \"#utility.yul\":13522:13594   */\n      tag_309\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13269:13601   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13607:13787   */\n    tag_129:\n        /* \"#utility.yul\":13655:13732   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13645:13733   */\n      mstore\n        /* \"#utility.yul\":13752:13756   */\n      0x41\n        /* \"#utility.yul\":13749:13750   */\n      0x04\n        /* \"#utility.yul\":13742:13757   */\n      mstore\n        /* \"#utility.yul\":13776:13780   */\n      0x24\n        /* \"#utility.yul\":13773:13774   */\n      0x00\n        /* \"#utility.yul\":13766:13781   */\n      revert\n        /* \"#utility.yul\":13793:14568   */\n    tag_146:\n        /* \"#utility.yul\":14026:14030   */\n      0x00\n        /* \"#utility.yul\":14064:14067   */\n      0xc0\n        /* \"#utility.yul\":14053:14062   */\n      dup3\n        /* \"#utility.yul\":14049:14068   */\n      add\n        /* \"#utility.yul\":14041:14068   */\n      swap1\n      pop\n        /* \"#utility.yul\":14078:14149   */\n      tag_486\n        /* \"#utility.yul\":14146:14147   */\n      0x00\n        /* \"#utility.yul\":14135:14144   */\n      dup4\n        /* \"#utility.yul\":14131:14148   */\n      add\n        /* \"#utility.yul\":14122:14128   */\n      dup10\n        /* \"#utility.yul\":14078:14149   */\n      tag_313\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14159:14231   */\n      tag_487\n        /* \"#utility.yul\":14227:14229   */\n      0x20\n        /* \"#utility.yul\":14216:14225   */\n      dup4\n        /* \"#utility.yul\":14212:14230   */\n      add\n        /* \"#utility.yul\":14203:14209   */\n      dup9\n        /* \"#utility.yul\":14159:14231   */\n      tag_320\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14241:14313   */\n      tag_488\n        /* \"#utility.yul\":14309:14311   */\n      0x40\n        /* \"#utility.yul\":14298:14307   */\n      dup4\n        /* \"#utility.yul\":14294:14312   */\n      add\n        /* \"#utility.yul\":14285:14291   */\n      dup8\n        /* \"#utility.yul\":14241:14313   */\n      tag_320\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14323:14395   */\n      tag_489\n        /* \"#utility.yul\":14391:14393   */\n      0x60\n        /* \"#utility.yul\":14380:14389   */\n      dup4\n        /* \"#utility.yul\":14376:14394   */\n      add\n        /* \"#utility.yul\":14367:14373   */\n      dup7\n        /* \"#utility.yul\":14323:14395   */\n      tag_309\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14405:14478   */\n      tag_490\n        /* \"#utility.yul\":14473:14476   */\n      0x80\n        /* \"#utility.yul\":14462:14471   */\n      dup4\n        /* \"#utility.yul\":14458:14477   */\n      add\n        /* \"#utility.yul\":14449:14455   */\n      dup6\n        /* \"#utility.yul\":14405:14478   */\n      tag_309\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14488:14561   */\n      tag_491\n        /* \"#utility.yul\":14556:14559   */\n      0xa0\n        /* \"#utility.yul\":14545:14554   */\n      dup4\n        /* \"#utility.yul\":14541:14560   */\n      add\n        /* \"#utility.yul\":14532:14538   */\n      dup5\n        /* \"#utility.yul\":14488:14561   */\n      tag_309\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13793:14568   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14574:14906   */\n    tag_153:\n        /* \"#utility.yul\":14695:14699   */\n      0x00\n        /* \"#utility.yul\":14733:14735   */\n      0x40\n        /* \"#utility.yul\":14722:14731   */\n      dup3\n        /* \"#utility.yul\":14718:14736   */\n      add\n        /* \"#utility.yul\":14710:14736   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:14817   */\n      tag_493\n        /* \"#utility.yul\":14814:14815   */\n      0x00\n        /* \"#utility.yul\":14803:14812   */\n      dup4\n        /* \"#utility.yul\":14799:14816   */\n      add\n        /* \"#utility.yul\":14790:14796   */\n      dup6\n        /* \"#utility.yul\":14746:14817   */\n      tag_320\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14827:14899   */\n      tag_494\n        /* \"#utility.yul\":14895:14897   */\n      0x20\n        /* \"#utility.yul\":14884:14893   */\n      dup4\n        /* \"#utility.yul\":14880:14898   */\n      add\n        /* \"#utility.yul\":14871:14877   */\n      dup5\n        /* \"#utility.yul\":14827:14899   */\n      tag_320\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":14574:14906   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14912:15134   */\n    tag_163:\n        /* \"#utility.yul\":15005:15009   */\n      0x00\n        /* \"#utility.yul\":15043:15045   */\n      0x20\n        /* \"#utility.yul\":15032:15041   */\n      dup3\n        /* \"#utility.yul\":15028:15046   */\n      add\n        /* \"#utility.yul\":15020:15046   */\n      swap1\n      pop\n        /* \"#utility.yul\":15056:15127   */\n      tag_496\n        /* \"#utility.yul\":15124:15125   */\n      0x00\n        /* \"#utility.yul\":15113:15122   */\n      dup4\n        /* \"#utility.yul\":15109:15126   */\n      add\n        /* \"#utility.yul\":15100:15106   */\n      dup5\n        /* \"#utility.yul\":15056:15127   */\n      tag_320\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14912:15134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15140:15582   */\n    tag_171:\n        /* \"#utility.yul\":15289:15293   */\n      0x00\n        /* \"#utility.yul\":15327:15329   */\n      0x60\n        /* \"#utility.yul\":15316:15325   */\n      dup3\n        /* \"#utility.yul\":15312:15330   */\n      add\n        /* \"#utility.yul\":15304:15330   */\n      swap1\n      pop\n        /* \"#utility.yul\":15340:15411   */\n      tag_498\n        /* \"#utility.yul\":15408:15409   */\n      0x00\n        /* \"#utility.yul\":15397:15406   */\n      dup4\n        /* \"#utility.yul\":15393:15410   */\n      add\n        /* \"#utility.yul\":15384:15390   */\n      dup7\n        /* \"#utility.yul\":15340:15411   */\n      tag_320\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15421:15493   */\n      tag_499\n        /* \"#utility.yul\":15489:15491   */\n      0x20\n        /* \"#utility.yul\":15478:15487   */\n      dup4\n        /* \"#utility.yul\":15474:15492   */\n      add\n        /* \"#utility.yul\":15465:15471   */\n      dup6\n        /* \"#utility.yul\":15421:15493   */\n      tag_309\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":15503:15575   */\n      tag_500\n        /* \"#utility.yul\":15571:15573   */\n      0x40\n        /* \"#utility.yul\":15560:15569   */\n      dup4\n        /* \"#utility.yul\":15556:15574   */\n      add\n        /* \"#utility.yul\":15547:15553   */\n      dup5\n        /* \"#utility.yul\":15503:15575   */\n      tag_309\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15140:15582   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15588:15686   */\n    tag_333:\n        /* \"#utility.yul\":15639:15645   */\n      0x00\n        /* \"#utility.yul\":15673:15678   */\n      dup2\n        /* \"#utility.yul\":15667:15679   */\n      mload\n        /* \"#utility.yul\":15657:15679   */\n      swap1\n      pop\n        /* \"#utility.yul\":15588:15686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15692:15860   */\n    tag_334:\n        /* \"#utility.yul\":15775:15786   */\n      0x00\n        /* \"#utility.yul\":15809:15815   */\n      dup3\n        /* \"#utility.yul\":15804:15807   */\n      dup3\n        /* \"#utility.yul\":15797:15816   */\n      mstore\n        /* \"#utility.yul\":15849:15853   */\n      0x20\n        /* \"#utility.yul\":15844:15847   */\n      dup3\n        /* \"#utility.yul\":15840:15854   */\n      add\n        /* \"#utility.yul\":15825:15854   */\n      swap1\n      pop\n        /* \"#utility.yul\":15692:15860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15866:16239   */\n    tag_335:\n        /* \"#utility.yul\":15952:15955   */\n      0x00\n        /* \"#utility.yul\":15980:16018   */\n      tag_504\n        /* \"#utility.yul\":16012:16017   */\n      dup3\n        /* \"#utility.yul\":15980:16018   */\n      tag_333\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16034:16104   */\n      tag_505\n        /* \"#utility.yul\":16097:16103   */\n      dup2\n        /* \"#utility.yul\":16092:16095   */\n      dup6\n        /* \"#utility.yul\":16034:16104   */\n      tag_334\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16027:16104   */\n      swap4\n      pop\n        /* \"#utility.yul\":16113:16178   */\n      tag_506\n        /* \"#utility.yul\":16171:16177   */\n      dup2\n        /* \"#utility.yul\":16166:16169   */\n      dup6\n        /* \"#utility.yul\":16159:16163   */\n      0x20\n        /* \"#utility.yul\":16152:16157   */\n      dup7\n        /* \"#utility.yul\":16148:16164   */\n      add\n        /* \"#utility.yul\":16113:16178   */\n      tag_294\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":16203:16232   */\n      tag_507\n        /* \"#utility.yul\":16225:16231   */\n      dup2\n        /* \"#utility.yul\":16203:16232   */\n      tag_295\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16198:16201   */\n      dup5\n        /* \"#utility.yul\":16194:16233   */\n      add\n        /* \"#utility.yul\":16187:16233   */\n      swap2\n      pop\n        /* \"#utility.yul\":15956:16239   */\n      pop\n        /* \"#utility.yul\":15866:16239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16245:16885   */\n    tag_189:\n        /* \"#utility.yul\":16440:16444   */\n      0x00\n        /* \"#utility.yul\":16478:16481   */\n      0x80\n        /* \"#utility.yul\":16467:16476   */\n      dup3\n        /* \"#utility.yul\":16463:16482   */\n      add\n        /* \"#utility.yul\":16455:16482   */\n      swap1\n      pop\n        /* \"#utility.yul\":16492:16563   */\n      tag_509\n        /* \"#utility.yul\":16560:16561   */\n      0x00\n        /* \"#utility.yul\":16549:16558   */\n      dup4\n        /* \"#utility.yul\":16545:16562   */\n      add\n        /* \"#utility.yul\":16536:16542   */\n      dup8\n        /* \"#utility.yul\":16492:16563   */\n      tag_320\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16573:16645   */\n      tag_510\n        /* \"#utility.yul\":16641:16643   */\n      0x20\n        /* \"#utility.yul\":16630:16639   */\n      dup4\n        /* \"#utility.yul\":16626:16644   */\n      add\n        /* \"#utility.yul\":16617:16623   */\n      dup7\n        /* \"#utility.yul\":16573:16645   */\n      tag_320\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16655:16727   */\n      tag_511\n        /* \"#utility.yul\":16723:16725   */\n      0x40\n        /* \"#utility.yul\":16712:16721   */\n      dup4\n        /* \"#utility.yul\":16708:16726   */\n      add\n        /* \"#utility.yul\":16699:16705   */\n      dup6\n        /* \"#utility.yul\":16655:16727   */\n      tag_309\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16774:16783   */\n      dup2\n        /* \"#utility.yul\":16768:16772   */\n      dup2\n        /* \"#utility.yul\":16764:16784   */\n      sub\n        /* \"#utility.yul\":16759:16761   */\n      0x60\n        /* \"#utility.yul\":16748:16757   */\n      dup4\n        /* \"#utility.yul\":16744:16762   */\n      add\n        /* \"#utility.yul\":16737:16785   */\n      mstore\n        /* \"#utility.yul\":16802:16878   */\n      tag_512\n        /* \"#utility.yul\":16873:16877   */\n      dup2\n        /* \"#utility.yul\":16864:16870   */\n      dup5\n        /* \"#utility.yul\":16802:16878   */\n      tag_335\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16794:16878   */\n      swap1\n      pop\n        /* \"#utility.yul\":16245:16885   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16891:17040   */\n    tag_336:\n        /* \"#utility.yul\":16927:16934   */\n      0x00\n        /* \"#utility.yul\":16967:17033   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16960:16965   */\n      dup3\n        /* \"#utility.yul\":16956:17034   */\n      and\n        /* \"#utility.yul\":16945:17034   */\n      swap1\n      pop\n        /* \"#utility.yul\":16891:17040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17046:17166   */\n    tag_337:\n        /* \"#utility.yul\":17118:17141   */\n      tag_515\n        /* \"#utility.yul\":17135:17140   */\n      dup2\n        /* \"#utility.yul\":17118:17141   */\n      tag_336\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17111:17116   */\n      dup2\n        /* \"#utility.yul\":17108:17142   */\n      eq\n        /* \"#utility.yul\":17098:17160   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":17156:17157   */\n      0x00\n        /* \"#utility.yul\":17153:17154   */\n      dup1\n        /* \"#utility.yul\":17146:17158   */\n      revert\n        /* \"#utility.yul\":17098:17160   */\n    tag_516:\n        /* \"#utility.yul\":17046:17166   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17172:17313   */\n    tag_338:\n        /* \"#utility.yul\":17228:17233   */\n      0x00\n        /* \"#utility.yul\":17259:17265   */\n      dup2\n        /* \"#utility.yul\":17253:17266   */\n      mload\n        /* \"#utility.yul\":17244:17266   */\n      swap1\n      pop\n        /* \"#utility.yul\":17275:17307   */\n      tag_518\n        /* \"#utility.yul\":17301:17306   */\n      dup2\n        /* \"#utility.yul\":17275:17307   */\n      tag_337\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17172:17313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17319:17668   */\n    tag_192:\n        /* \"#utility.yul\":17388:17394   */\n      0x00\n        /* \"#utility.yul\":17437:17439   */\n      0x20\n        /* \"#utility.yul\":17425:17434   */\n      dup3\n        /* \"#utility.yul\":17416:17423   */\n      dup5\n        /* \"#utility.yul\":17412:17435   */\n      sub\n        /* \"#utility.yul\":17408:17440   */\n      slt\n        /* \"#utility.yul\":17405:17524   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":17443:17522   */\n      tag_521\n      tag_298\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17405:17524   */\n    tag_520:\n        /* \"#utility.yul\":17563:17564   */\n      0x00\n        /* \"#utility.yul\":17588:17651   */\n      tag_522\n        /* \"#utility.yul\":17643:17650   */\n      dup5\n        /* \"#utility.yul\":17634:17640   */\n      dup3\n        /* \"#utility.yul\":17623:17632   */\n      dup6\n        /* \"#utility.yul\":17619:17641   */\n      add\n        /* \"#utility.yul\":17588:17651   */\n      tag_338\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17578:17651   */\n      swap2\n      pop\n        /* \"#utility.yul\":17534:17661   */\n      pop\n        /* \"#utility.yul\":17319:17668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17674:17854   */\n    tag_339:\n        /* \"#utility.yul\":17722:17799   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17719:17720   */\n      0x00\n        /* \"#utility.yul\":17712:17800   */\n      mstore\n        /* \"#utility.yul\":17819:17823   */\n      0x11\n        /* \"#utility.yul\":17816:17817   */\n      0x04\n        /* \"#utility.yul\":17809:17824   */\n      mstore\n        /* \"#utility.yul\":17843:17847   */\n      0x24\n        /* \"#utility.yul\":17840:17841   */\n      0x00\n        /* \"#utility.yul\":17833:17848   */\n      revert\n        /* \"#utility.yul\":17860:18051   */\n    tag_229:\n        /* \"#utility.yul\":17900:17903   */\n      0x00\n        /* \"#utility.yul\":17919:17939   */\n      tag_525\n        /* \"#utility.yul\":17937:17938   */\n      dup3\n        /* \"#utility.yul\":17919:17939   */\n      tag_304\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":17914:17939   */\n      swap2\n      pop\n        /* \"#utility.yul\":17953:17973   */\n      tag_526\n        /* \"#utility.yul\":17971:17972   */\n      dup4\n        /* \"#utility.yul\":17953:17973   */\n      tag_304\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17948:17973   */\n      swap3\n      pop\n        /* \"#utility.yul\":17996:17997   */\n      dup3\n        /* \"#utility.yul\":17993:17994   */\n      dup3\n        /* \"#utility.yul\":17989:17998   */\n      add\n        /* \"#utility.yul\":17982:17998   */\n      swap1\n      pop\n        /* \"#utility.yul\":18017:18020   */\n      dup1\n        /* \"#utility.yul\":18014:18015   */\n      dup3\n        /* \"#utility.yul\":18011:18021   */\n      gt\n        /* \"#utility.yul\":18008:18044   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":18024:18042   */\n      tag_528\n      tag_339\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18008:18044   */\n    tag_527:\n        /* \"#utility.yul\":17860:18051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18057:18721   */\n    tag_238:\n        /* \"#utility.yul\":18262:18266   */\n      0x00\n        /* \"#utility.yul\":18300:18303   */\n      0xa0\n        /* \"#utility.yul\":18289:18298   */\n      dup3\n        /* \"#utility.yul\":18285:18304   */\n      add\n        /* \"#utility.yul\":18277:18304   */\n      swap1\n      pop\n        /* \"#utility.yul\":18314:18385   */\n      tag_530\n        /* \"#utility.yul\":18382:18383   */\n      0x00\n        /* \"#utility.yul\":18371:18380   */\n      dup4\n        /* \"#utility.yul\":18367:18384   */\n      add\n        /* \"#utility.yul\":18358:18364   */\n      dup9\n        /* \"#utility.yul\":18314:18385   */\n      tag_313\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18395:18467   */\n      tag_531\n        /* \"#utility.yul\":18463:18465   */\n      0x20\n        /* \"#utility.yul\":18452:18461   */\n      dup4\n        /* \"#utility.yul\":18448:18466   */\n      add\n        /* \"#utility.yul\":18439:18445   */\n      dup8\n        /* \"#utility.yul\":18395:18467   */\n      tag_313\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18477:18549   */\n      tag_532\n        /* \"#utility.yul\":18545:18547   */\n      0x40\n        /* \"#utility.yul\":18534:18543   */\n      dup4\n        /* \"#utility.yul\":18530:18548   */\n      add\n        /* \"#utility.yul\":18521:18527   */\n      dup7\n        /* \"#utility.yul\":18477:18549   */\n      tag_313\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18559:18631   */\n      tag_533\n        /* \"#utility.yul\":18627:18629   */\n      0x60\n        /* \"#utility.yul\":18616:18625   */\n      dup4\n        /* \"#utility.yul\":18612:18630   */\n      add\n        /* \"#utility.yul\":18603:18609   */\n      dup6\n        /* \"#utility.yul\":18559:18631   */\n      tag_309\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":18641:18714   */\n      tag_534\n        /* \"#utility.yul\":18709:18712   */\n      0x80\n        /* \"#utility.yul\":18698:18707   */\n      dup4\n        /* \"#utility.yul\":18694:18713   */\n      add\n        /* \"#utility.yul\":18685:18691   */\n      dup5\n        /* \"#utility.yul\":18641:18714   */\n      tag_320\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18057:18721   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18727:19272   */\n    tag_253:\n        /* \"#utility.yul\":18900:18904   */\n      0x00\n        /* \"#utility.yul\":18938:18941   */\n      0x80\n        /* \"#utility.yul\":18927:18936   */\n      dup3\n        /* \"#utility.yul\":18923:18942   */\n      add\n        /* \"#utility.yul\":18915:18942   */\n      swap1\n      pop\n        /* \"#utility.yul\":18952:19023   */\n      tag_536\n        /* \"#utility.yul\":19020:19021   */\n      0x00\n        /* \"#utility.yul\":19009:19018   */\n      dup4\n        /* \"#utility.yul\":19005:19022   */\n      add\n        /* \"#utility.yul\":18996:19002   */\n      dup8\n        /* \"#utility.yul\":18952:19023   */\n      tag_313\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19033:19101   */\n      tag_537\n        /* \"#utility.yul\":19097:19099   */\n      0x20\n        /* \"#utility.yul\":19086:19095   */\n      dup4\n        /* \"#utility.yul\":19082:19100   */\n      add\n        /* \"#utility.yul\":19073:19079   */\n      dup7\n        /* \"#utility.yul\":19033:19101   */\n      tag_311\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19111:19183   */\n      tag_538\n        /* \"#utility.yul\":19179:19181   */\n      0x40\n        /* \"#utility.yul\":19168:19177   */\n      dup4\n        /* \"#utility.yul\":19164:19182   */\n      add\n        /* \"#utility.yul\":19155:19161   */\n      dup6\n        /* \"#utility.yul\":19111:19183   */\n      tag_313\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19193:19265   */\n      tag_539\n        /* \"#utility.yul\":19261:19263   */\n      0x60\n        /* \"#utility.yul\":19250:19259   */\n      dup4\n        /* \"#utility.yul\":19246:19264   */\n      add\n        /* \"#utility.yul\":19237:19243   */\n      dup5\n        /* \"#utility.yul\":19193:19265   */\n      tag_313\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18727:19272   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19278:19458   */\n    tag_260:\n        /* \"#utility.yul\":19326:19403   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19323:19324   */\n      0x00\n        /* \"#utility.yul\":19316:19404   */\n      mstore\n        /* \"#utility.yul\":19423:19427   */\n      0x21\n        /* \"#utility.yul\":19420:19421   */\n      0x04\n        /* \"#utility.yul\":19413:19428   */\n      mstore\n        /* \"#utility.yul\":19447:19451   */\n      0x24\n        /* \"#utility.yul\":19444:19445   */\n      0x00\n        /* \"#utility.yul\":19437:19452   */\n      revert\n\n    auxdata: 0xa26469706673582212209ddafa135386abba5ba78338fda4996acca7096094d4cf3202ceb960f9a8c79b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2113": {
									"entryPoint": null,
									"id": 2113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3495": {
									"entryPoint": null,
									"id": 3495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2160": {
									"entryPoint": 521,
									"id": 2160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1390": {
									"entryPoint": 712,
									"id": 1390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1244": {
									"entryPoint": 444,
									"id": 1244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1146": {
									"entryPoint": 611,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 1600,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8706:19",
										"nodeType": "YulBlock",
										"src": "0:8706:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:19",
													"nodeType": "YulBlock",
													"src": "66:40:19",
													"statements": [
														{
															"nativeSrc": "77:22:19",
															"nodeType": "YulAssignment",
															"src": "77:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:19"
																},
																"nativeSrc": "87:12:19",
																"nodeType": "YulFunctionCall",
																"src": "87:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:19",
														"nodeType": "YulTypedName",
														"src": "49:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:19",
														"nodeType": "YulTypedName",
														"src": "59:6:19",
														"type": ""
													}
												],
												"src": "7:99:19"
											},
											{
												"body": {
													"nativeSrc": "140:152:19",
													"nodeType": "YulBlock",
													"src": "140:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:19",
																		"nodeType": "YulLiteral",
																		"src": "157:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:19",
																		"nodeType": "YulLiteral",
																		"src": "160:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:19"
																},
																"nativeSrc": "150:88:19",
																"nodeType": "YulFunctionCall",
																"src": "150:88:19"
															},
															"nativeSrc": "150:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:19",
																		"nodeType": "YulLiteral",
																		"src": "254:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:19",
																		"nodeType": "YulLiteral",
																		"src": "257:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:19"
																},
																"nativeSrc": "247:15:19",
																"nodeType": "YulFunctionCall",
																"src": "247:15:19"
															},
															"nativeSrc": "247:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:19",
																		"nodeType": "YulLiteral",
																		"src": "278:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:19",
																		"nodeType": "YulLiteral",
																		"src": "281:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:19"
																},
																"nativeSrc": "271:15:19",
																"nodeType": "YulFunctionCall",
																"src": "271:15:19"
															},
															"nativeSrc": "271:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:19"
											},
											{
												"body": {
													"nativeSrc": "326:152:19",
													"nodeType": "YulBlock",
													"src": "326:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:19",
																		"nodeType": "YulLiteral",
																		"src": "346:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:19"
																},
																"nativeSrc": "336:88:19",
																"nodeType": "YulFunctionCall",
																"src": "336:88:19"
															},
															"nativeSrc": "336:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:19",
																		"nodeType": "YulLiteral",
																		"src": "440:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:19",
																		"nodeType": "YulLiteral",
																		"src": "443:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:19"
																},
																"nativeSrc": "433:15:19",
																"nodeType": "YulFunctionCall",
																"src": "433:15:19"
															},
															"nativeSrc": "433:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:19",
																		"nodeType": "YulLiteral",
																		"src": "464:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:19",
																		"nodeType": "YulLiteral",
																		"src": "467:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:19"
																},
																"nativeSrc": "457:15:19",
																"nodeType": "YulFunctionCall",
																"src": "457:15:19"
															},
															"nativeSrc": "457:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:19"
											},
											{
												"body": {
													"nativeSrc": "535:269:19",
													"nodeType": "YulBlock",
													"src": "535:269:19",
													"statements": [
														{
															"nativeSrc": "545:22:19",
															"nodeType": "YulAssignment",
															"src": "545:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:19",
																		"nodeType": "YulLiteral",
																		"src": "565:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:19"
																},
																"nativeSrc": "555:12:19",
																"nodeType": "YulFunctionCall",
																"src": "555:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:19"
																}
															]
														},
														{
															"nativeSrc": "576:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:19",
																		"nodeType": "YulLiteral",
																		"src": "612:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:19"
																},
																"nativeSrc": "602:12:19",
																"nodeType": "YulFunctionCall",
																"src": "602:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:19",
																	"nodeType": "YulTypedName",
																	"src": "580:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:19",
																"nodeType": "YulBlock",
																"src": "653:51:19",
																"statements": [
																	{
																		"nativeSrc": "667:27:19",
																		"nodeType": "YulAssignment",
																		"src": "667:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:19",
																					"nodeType": "YulLiteral",
																					"src": "689:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:19"
																			},
																			"nativeSrc": "677:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:19"
																},
																"nativeSrc": "626:26:19",
																"nodeType": "YulFunctionCall",
																"src": "626:26:19"
															},
															"nativeSrc": "623:81:19",
															"nodeType": "YulIf",
															"src": "623:81:19"
														},
														{
															"body": {
																"nativeSrc": "756:42:19",
																"nodeType": "YulBlock",
																"src": "756:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:19"
																			},
																			"nativeSrc": "770:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:19"
																		},
																		"nativeSrc": "770:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:19",
																				"nodeType": "YulLiteral",
																				"src": "751:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:19"
																		},
																		"nativeSrc": "740:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:19"
																},
																"nativeSrc": "717:38:19",
																"nodeType": "YulFunctionCall",
																"src": "717:38:19"
															},
															"nativeSrc": "714:84:19",
															"nodeType": "YulIf",
															"src": "714:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:19",
														"nodeType": "YulTypedName",
														"src": "519:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:19",
														"nodeType": "YulTypedName",
														"src": "528:6:19",
														"type": ""
													}
												],
												"src": "484:320:19"
											},
											{
												"body": {
													"nativeSrc": "864:87:19",
													"nodeType": "YulBlock",
													"src": "864:87:19",
													"statements": [
														{
															"nativeSrc": "874:11:19",
															"nodeType": "YulAssignment",
															"src": "874:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:19",
																"nodeType": "YulIdentifier",
																"src": "882:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:19",
																		"nodeType": "YulLiteral",
																		"src": "902:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:19"
																},
																"nativeSrc": "895:14:19",
																"nodeType": "YulFunctionCall",
																"src": "895:14:19"
															},
															"nativeSrc": "895:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:19"
														},
														{
															"nativeSrc": "918:26:19",
															"nodeType": "YulAssignment",
															"src": "918:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:19",
																		"nodeType": "YulLiteral",
																		"src": "936:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:19",
																		"nodeType": "YulLiteral",
																		"src": "939:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:19"
																},
																"nativeSrc": "926:18:19",
																"nodeType": "YulFunctionCall",
																"src": "926:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:19",
														"nodeType": "YulTypedName",
														"src": "851:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:19",
														"nodeType": "YulTypedName",
														"src": "859:4:19",
														"type": ""
													}
												],
												"src": "810:141:19"
											},
											{
												"body": {
													"nativeSrc": "1001:49:19",
													"nodeType": "YulBlock",
													"src": "1001:49:19",
													"statements": [
														{
															"nativeSrc": "1011:33:19",
															"nodeType": "YulAssignment",
															"src": "1011:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:19"
																		},
																		"nativeSrc": "1025:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:19"
																},
																"nativeSrc": "1021:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:19",
														"nodeType": "YulTypedName",
														"src": "984:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:19",
														"nodeType": "YulTypedName",
														"src": "994:6:19",
														"type": ""
													}
												],
												"src": "957:93:19"
											},
											{
												"body": {
													"nativeSrc": "1109:54:19",
													"nodeType": "YulBlock",
													"src": "1109:54:19",
													"statements": [
														{
															"nativeSrc": "1119:37:19",
															"nodeType": "YulAssignment",
															"src": "1119:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:19"
																},
																"nativeSrc": "1140:16:19",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:19",
														"nodeType": "YulTypedName",
														"src": "1084:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:19",
														"nodeType": "YulTypedName",
														"src": "1090:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:19",
														"nodeType": "YulTypedName",
														"src": "1100:8:19",
														"type": ""
													}
												],
												"src": "1056:107:19"
											},
											{
												"body": {
													"nativeSrc": "1245:317:19",
													"nodeType": "YulBlock",
													"src": "1245:317:19",
													"statements": [
														{
															"nativeSrc": "1255:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:19"
																},
																"nativeSrc": "1272:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:19",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:19",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:19"
																},
																"nativeSrc": "1311:97:19",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:19",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:19",
															"nodeType": "YulAssignment",
															"src": "1417:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:19"
																},
																"nativeSrc": "1429:39:19",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:19"
																}
															]
														},
														{
															"nativeSrc": "1477:30:19",
															"nodeType": "YulAssignment",
															"src": "1477:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:19"
																		},
																		"nativeSrc": "1497:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:19"
																},
																"nativeSrc": "1486:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:19"
																}
															]
														},
														{
															"nativeSrc": "1516:40:19",
															"nodeType": "YulAssignment",
															"src": "1516:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:19"
																		},
																		"nativeSrc": "1536:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:19"
																},
																"nativeSrc": "1526:30:19",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:19",
														"nodeType": "YulTypedName",
														"src": "1206:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:19",
														"nodeType": "YulTypedName",
														"src": "1213:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:19",
														"nodeType": "YulTypedName",
														"src": "1225:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:19",
														"nodeType": "YulTypedName",
														"src": "1238:6:19",
														"type": ""
													}
												],
												"src": "1169:393:19"
											},
											{
												"body": {
													"nativeSrc": "1613:32:19",
													"nodeType": "YulBlock",
													"src": "1613:32:19",
													"statements": [
														{
															"nativeSrc": "1623:16:19",
															"nodeType": "YulAssignment",
															"src": "1623:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:19",
																"nodeType": "YulIdentifier",
																"src": "1634:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:19",
														"nodeType": "YulTypedName",
														"src": "1595:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:19",
														"nodeType": "YulTypedName",
														"src": "1605:7:19",
														"type": ""
													}
												],
												"src": "1568:77:19"
											},
											{
												"body": {
													"nativeSrc": "1683:28:19",
													"nodeType": "YulBlock",
													"src": "1683:28:19",
													"statements": [
														{
															"nativeSrc": "1693:12:19",
															"nodeType": "YulAssignment",
															"src": "1693:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:19",
																"nodeType": "YulIdentifier",
																"src": "1700:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:19",
														"nodeType": "YulTypedName",
														"src": "1669:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:19",
														"nodeType": "YulTypedName",
														"src": "1679:3:19",
														"type": ""
													}
												],
												"src": "1651:60:19"
											},
											{
												"body": {
													"nativeSrc": "1777:82:19",
													"nodeType": "YulBlock",
													"src": "1777:82:19",
													"statements": [
														{
															"nativeSrc": "1787:66:19",
															"nodeType": "YulAssignment",
															"src": "1787:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:19"
																				},
																				"nativeSrc": "1827:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:19"
																		},
																		"nativeSrc": "1818:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:19"
																},
																"nativeSrc": "1800:53:19",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:19",
														"nodeType": "YulTypedName",
														"src": "1757:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:19",
														"nodeType": "YulTypedName",
														"src": "1767:9:19",
														"type": ""
													}
												],
												"src": "1717:142:19"
											},
											{
												"body": {
													"nativeSrc": "1912:28:19",
													"nodeType": "YulBlock",
													"src": "1912:28:19",
													"statements": [
														{
															"nativeSrc": "1922:12:19",
															"nodeType": "YulAssignment",
															"src": "1922:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:19",
																"nodeType": "YulIdentifier",
																"src": "1929:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:19",
														"nodeType": "YulTypedName",
														"src": "1898:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:19",
														"nodeType": "YulTypedName",
														"src": "1908:3:19",
														"type": ""
													}
												],
												"src": "1865:75:19"
											},
											{
												"body": {
													"nativeSrc": "2022:193:19",
													"nodeType": "YulBlock",
													"src": "2022:193:19",
													"statements": [
														{
															"nativeSrc": "2032:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:19"
																},
																"nativeSrc": "2056:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:19",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:19"
																				},
																				"nativeSrc": "2145:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:19"
																				},
																				"nativeSrc": "2166:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:19"
																		},
																		"nativeSrc": "2117:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:19"
																},
																"nativeSrc": "2104:105:19",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:19"
															},
															"nativeSrc": "2104:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:19",
														"nodeType": "YulTypedName",
														"src": "1999:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:19",
														"nodeType": "YulTypedName",
														"src": "2005:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:19",
														"nodeType": "YulTypedName",
														"src": "2013:7:19",
														"type": ""
													}
												],
												"src": "1946:269:19"
											},
											{
												"body": {
													"nativeSrc": "2270:24:19",
													"nodeType": "YulBlock",
													"src": "2270:24:19",
													"statements": [
														{
															"nativeSrc": "2280:8:19",
															"nodeType": "YulAssignment",
															"src": "2280:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:19",
																"nodeType": "YulLiteral",
																"src": "2287:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:19",
														"nodeType": "YulTypedName",
														"src": "2266:3:19",
														"type": ""
													}
												],
												"src": "2221:73:19"
											},
											{
												"body": {
													"nativeSrc": "2353:136:19",
													"nodeType": "YulBlock",
													"src": "2353:136:19",
													"statements": [
														{
															"nativeSrc": "2363:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:19"
																},
																"nativeSrc": "2377:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:19"
																},
																"nativeSrc": "2418:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:19"
															},
															"nativeSrc": "2418:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:19",
														"nodeType": "YulTypedName",
														"src": "2339:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:19",
														"nodeType": "YulTypedName",
														"src": "2345:6:19",
														"type": ""
													}
												],
												"src": "2300:189:19"
											},
											{
												"body": {
													"nativeSrc": "2545:136:19",
													"nodeType": "YulBlock",
													"src": "2545:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:19",
																"nodeType": "YulBlock",
																"src": "2612:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:19"
																			},
																			"nativeSrc": "2626:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:19"
																		},
																		"nativeSrc": "2626:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:19"
																},
																"nativeSrc": "2562:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:19"
															},
															"nativeSrc": "2555:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:19",
																"nodeType": "YulBlock",
																"src": "2577:26:19",
																"statements": [
																	{
																		"nativeSrc": "2579:22:19",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:19"
																			},
																			"nativeSrc": "2588:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:19",
																"nodeType": "YulBlock",
																"src": "2559:2:19",
																"statements": []
															},
															"src": "2555:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:19",
														"nodeType": "YulTypedName",
														"src": "2533:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:19",
														"nodeType": "YulTypedName",
														"src": "2540:3:19",
														"type": ""
													}
												],
												"src": "2495:186:19"
											},
											{
												"body": {
													"nativeSrc": "2766:464:19",
													"nodeType": "YulBlock",
													"src": "2766:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:19",
																"nodeType": "YulBlock",
																"src": "2792:431:19",
																"statements": [
																	{
																		"nativeSrc": "2806:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:19"
																			},
																			"nativeSrc": "2822:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:19",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:19"
																					},
																					"nativeSrc": "2906:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:19"
																			},
																			"nativeSrc": "2892:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:19",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:19",
																			"nodeType": "YulBlock",
																			"src": "3093:27:19",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:19",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:19",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:19"
																			},
																			"nativeSrc": "3074:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:19"
																		},
																		"nativeSrc": "3071:49:19",
																		"nodeType": "YulIf",
																		"src": "3071:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:19"
																							},
																							"nativeSrc": "3189:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:19"
																					},
																					"nativeSrc": "3175:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:19"
																			},
																			"nativeSrc": "3133:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:19"
																		},
																		"nativeSrc": "3133:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:19"
																},
																"nativeSrc": "2780:11:19",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:19"
															},
															"nativeSrc": "2777:446:19",
															"nodeType": "YulIf",
															"src": "2777:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:19",
														"nodeType": "YulTypedName",
														"src": "2742:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:19",
														"nodeType": "YulTypedName",
														"src": "2749:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:19",
														"nodeType": "YulTypedName",
														"src": "2754:10:19",
														"type": ""
													}
												],
												"src": "2687:543:19"
											},
											{
												"body": {
													"nativeSrc": "3299:54:19",
													"nodeType": "YulBlock",
													"src": "3299:54:19",
													"statements": [
														{
															"nativeSrc": "3309:37:19",
															"nodeType": "YulAssignment",
															"src": "3309:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:19"
																},
																"nativeSrc": "3330:16:19",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:19",
														"nodeType": "YulTypedName",
														"src": "3274:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:19",
														"nodeType": "YulTypedName",
														"src": "3280:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:19",
														"nodeType": "YulTypedName",
														"src": "3290:8:19",
														"type": ""
													}
												],
												"src": "3236:117:19"
											},
											{
												"body": {
													"nativeSrc": "3410:118:19",
													"nodeType": "YulBlock",
													"src": "3410:118:19",
													"statements": [
														{
															"nativeSrc": "3420:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:19"
																				},
																				"nativeSrc": "3465:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:19"
																				},
																				"nativeSrc": "3480:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:19"
																		},
																		"nativeSrc": "3436:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:19"
																},
																"nativeSrc": "3432:56:19",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:19",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:19",
															"nodeType": "YulAssignment",
															"src": "3497:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:19"
																},
																"nativeSrc": "3507:15:19",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:19",
														"nodeType": "YulTypedName",
														"src": "3387:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:19",
														"nodeType": "YulTypedName",
														"src": "3393:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:19",
														"nodeType": "YulTypedName",
														"src": "3403:6:19",
														"type": ""
													}
												],
												"src": "3359:169:19"
											},
											{
												"body": {
													"nativeSrc": "3614:214:19",
													"nodeType": "YulBlock",
													"src": "3614:214:19",
													"statements": [
														{
															"nativeSrc": "3747:37:19",
															"nodeType": "YulAssignment",
															"src": "3747:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:19"
																},
																"nativeSrc": "3755:29:19",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:19"
																}
															]
														},
														{
															"nativeSrc": "3793:29:19",
															"nodeType": "YulAssignment",
															"src": "3793:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:19"
																		},
																		"nativeSrc": "3810:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:19"
																},
																"nativeSrc": "3801:21:19",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:19",
														"nodeType": "YulTypedName",
														"src": "3595:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:19",
														"nodeType": "YulTypedName",
														"src": "3601:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:19",
														"nodeType": "YulTypedName",
														"src": "3609:4:19",
														"type": ""
													}
												],
												"src": "3533:295:19"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:19",
													"nodeType": "YulBlock",
													"src": "3925:1303:19",
													"statements": [
														{
															"nativeSrc": "3936:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:19"
																},
																"nativeSrc": "3950:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:19",
																"nodeType": "YulBlock",
																"src": "4072:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:19"
																			},
																			"nativeSrc": "4074:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:19"
																		},
																		"nativeSrc": "4074:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:19",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:19"
																},
																"nativeSrc": "4041:30:19",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:19"
															},
															"nativeSrc": "4038:56:19",
															"nodeType": "YulIf",
															"src": "4038:56:19"
														},
														{
															"nativeSrc": "4104:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:19"
																		},
																		"nativeSrc": "4144:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:19"
																},
																"nativeSrc": "4118:38:19",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:19"
																},
																"nativeSrc": "4203:67:19",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:19"
															},
															"nativeSrc": "4203:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:19"
														},
														{
															"nativeSrc": "4280:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:19",
																"nodeType": "YulLiteral",
																"src": "4297:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:19",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:19",
															"nodeType": "YulAssignment",
															"src": "4308:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:19",
																"nodeType": "YulLiteral",
																"src": "4321:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:19",
																		"nodeType": "YulBlock",
																		"src": "4372:611:19",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:19",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:19"
																							},
																							"nativeSrc": "4413:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:19"
																					},
																					"nativeSrc": "4401:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:19",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:19"
																					},
																					"nativeSrc": "4451:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:19",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:19",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:19",
																					"nodeType": "YulBlock",
																					"src": "4569:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:19"
																												},
																												"nativeSrc": "4608:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:19"
																										},
																										"nativeSrc": "4602:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:19"
																								},
																								"nativeSrc": "4587:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:19"
																							},
																							"nativeSrc": "4587:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:19"
																						},
																						{
																							"nativeSrc": "4646:24:19",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:19",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:19"
																								},
																								"nativeSrc": "4656:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:19",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:19",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:19"
																								},
																								"nativeSrc": "4700:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:19"
																					},
																					"nativeSrc": "4532:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:19"
																				},
																				"nativeSrc": "4524:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:19",
																					"nodeType": "YulBlock",
																					"src": "4547:21:19",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:19",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:19",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:19"
																								},
																								"nativeSrc": "4554:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:19",
																					"nodeType": "YulBlock",
																					"src": "4528:3:19",
																					"statements": []
																				},
																				"src": "4524:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:19",
																					"nodeType": "YulBlock",
																					"src": "4768:156:19",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:19"
																										},
																										"nativeSrc": "4809:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:19"
																								},
																								"nativeSrc": "4803:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:19",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:19",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:19"
																												},
																												"nativeSrc": "4891:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:19"
																										},
																										"nativeSrc": "4861:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:19"
																								},
																								"nativeSrc": "4846:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:19"
																							},
																							"nativeSrc": "4846:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:19"
																					},
																					"nativeSrc": "4748:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:19"
																				},
																				"nativeSrc": "4745:179:19",
																				"nodeType": "YulIf",
																				"src": "4745:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:19",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:19"
																									},
																									"nativeSrc": "4954:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:19",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:19"
																							},
																							"nativeSrc": "4950:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:19"
																					},
																					"nativeSrc": "4937:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:19"
																				},
																				"nativeSrc": "4937:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:19"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:19",
																	"nodeType": "YulCase",
																	"src": "4365:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:19",
																		"nodeType": "YulBlock",
																		"src": "5000:222:19",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:19",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:19",
																					"nodeType": "YulBlock",
																					"src": "5051:67:19",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:19",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:19"
																										},
																										"nativeSrc": "5084:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:19"
																								},
																								"nativeSrc": "5078:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:19"
																				},
																				"nativeSrc": "5041:77:19",
																				"nodeType": "YulIf",
																				"src": "5041:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:19"
																							},
																							"nativeSrc": "5144:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:19"
																					},
																					"nativeSrc": "5131:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:19"
																				},
																				"nativeSrc": "5131:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:19"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:19",
																	"nodeType": "YulCase",
																	"src": "4992:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:19"
																},
																"nativeSrc": "4342:14:19",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:19"
															},
															"nativeSrc": "4335:887:19",
															"nodeType": "YulSwitch",
															"src": "4335:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:19",
														"nodeType": "YulTypedName",
														"src": "3914:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:19",
														"nodeType": "YulTypedName",
														"src": "3920:3:19",
														"type": ""
													}
												],
												"src": "3833:1395:19"
											},
											{
												"body": {
													"nativeSrc": "5279:32:19",
													"nodeType": "YulBlock",
													"src": "5279:32:19",
													"statements": [
														{
															"nativeSrc": "5289:16:19",
															"nodeType": "YulAssignment",
															"src": "5289:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "5300:5:19",
																"nodeType": "YulIdentifier",
																"src": "5300:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5234:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:19",
														"nodeType": "YulTypedName",
														"src": "5261:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:19",
														"nodeType": "YulTypedName",
														"src": "5271:7:19",
														"type": ""
													}
												],
												"src": "5234:77:19"
											},
											{
												"body": {
													"nativeSrc": "5382:53:19",
													"nodeType": "YulBlock",
													"src": "5382:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5399:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5399:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5422:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5422:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5404:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "5404:17:19"
																		},
																		"nativeSrc": "5404:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5392:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:19"
																},
																"nativeSrc": "5392:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5392:37:19"
															},
															"nativeSrc": "5392:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "5392:37:19"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5317:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5370:5:19",
														"nodeType": "YulTypedName",
														"src": "5370:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5377:3:19",
														"nodeType": "YulTypedName",
														"src": "5377:3:19",
														"type": ""
													}
												],
												"src": "5317:118:19"
											},
											{
												"body": {
													"nativeSrc": "5506:53:19",
													"nodeType": "YulBlock",
													"src": "5506:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5523:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5523:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5546:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5546:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5528:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "5528:17:19"
																		},
																		"nativeSrc": "5528:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5516:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:19"
																},
																"nativeSrc": "5516:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5516:37:19"
															},
															"nativeSrc": "5516:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "5516:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5441:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5494:5:19",
														"nodeType": "YulTypedName",
														"src": "5494:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5501:3:19",
														"nodeType": "YulTypedName",
														"src": "5501:3:19",
														"type": ""
													}
												],
												"src": "5441:118:19"
											},
											{
												"body": {
													"nativeSrc": "5610:81:19",
													"nodeType": "YulBlock",
													"src": "5610:81:19",
													"statements": [
														{
															"nativeSrc": "5620:65:19",
															"nodeType": "YulAssignment",
															"src": "5620:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5635:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5635:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5642:42:19",
																		"nodeType": "YulLiteral",
																		"src": "5642:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5631:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:19"
																},
																"nativeSrc": "5631:54:19",
																"nodeType": "YulFunctionCall",
																"src": "5631:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5620:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "5620:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5565:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5592:5:19",
														"nodeType": "YulTypedName",
														"src": "5592:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5602:7:19",
														"nodeType": "YulTypedName",
														"src": "5602:7:19",
														"type": ""
													}
												],
												"src": "5565:126:19"
											},
											{
												"body": {
													"nativeSrc": "5742:51:19",
													"nodeType": "YulBlock",
													"src": "5742:51:19",
													"statements": [
														{
															"nativeSrc": "5752:35:19",
															"nodeType": "YulAssignment",
															"src": "5752:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5781:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5781:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5763:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "5763:17:19"
																},
																"nativeSrc": "5763:24:19",
																"nodeType": "YulFunctionCall",
																"src": "5763:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5752:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "5752:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5697:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5724:5:19",
														"nodeType": "YulTypedName",
														"src": "5724:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5734:7:19",
														"nodeType": "YulTypedName",
														"src": "5734:7:19",
														"type": ""
													}
												],
												"src": "5697:96:19"
											},
											{
												"body": {
													"nativeSrc": "5864:53:19",
													"nodeType": "YulBlock",
													"src": "5864:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5881:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5881:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5904:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5904:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5886:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "5886:17:19"
																		},
																		"nativeSrc": "5886:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5886:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5874:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:19"
																},
																"nativeSrc": "5874:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5874:37:19"
															},
															"nativeSrc": "5874:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "5874:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5799:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5852:5:19",
														"nodeType": "YulTypedName",
														"src": "5852:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5859:3:19",
														"nodeType": "YulTypedName",
														"src": "5859:3:19",
														"type": ""
													}
												],
												"src": "5799:118:19"
											},
											{
												"body": {
													"nativeSrc": "6133:454:19",
													"nodeType": "YulBlock",
													"src": "6133:454:19",
													"statements": [
														{
															"nativeSrc": "6143:27:19",
															"nodeType": "YulAssignment",
															"src": "6143:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6166:3:19",
																		"nodeType": "YulLiteral",
																		"src": "6166:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6151:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6151:3:19"
																},
																"nativeSrc": "6151:19:19",
																"nodeType": "YulFunctionCall",
																"src": "6151:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6143:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6143:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6224:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6224:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6248:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:19"
																		},
																		"nativeSrc": "6233:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6180:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6180:43:19"
																},
																"nativeSrc": "6180:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6180:71:19"
															},
															"nativeSrc": "6180:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6180:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6305:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6305:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6318:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6318:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6329:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6329:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6314:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:19"
																		},
																		"nativeSrc": "6314:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6314:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6261:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6261:43:19"
																},
																"nativeSrc": "6261:72:19",
																"nodeType": "YulFunctionCall",
																"src": "6261:72:19"
															},
															"nativeSrc": "6261:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "6261:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6387:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6387:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6400:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6411:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6411:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6396:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6396:3:19"
																		},
																		"nativeSrc": "6396:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6396:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6343:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6343:43:19"
																},
																"nativeSrc": "6343:72:19",
																"nodeType": "YulFunctionCall",
																"src": "6343:72:19"
															},
															"nativeSrc": "6343:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "6343:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6469:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6469:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6482:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6482:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6493:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6493:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6478:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:19"
																		},
																		"nativeSrc": "6478:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6478:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6425:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6425:43:19"
																},
																"nativeSrc": "6425:72:19",
																"nodeType": "YulFunctionCall",
																"src": "6425:72:19"
															},
															"nativeSrc": "6425:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "6425:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6551:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6551:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6575:3:19",
																				"nodeType": "YulLiteral",
																				"src": "6575:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6560:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:19"
																		},
																		"nativeSrc": "6560:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6507:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6507:43:19"
																},
																"nativeSrc": "6507:73:19",
																"nodeType": "YulFunctionCall",
																"src": "6507:73:19"
															},
															"nativeSrc": "6507:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "6507:73:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5923:664:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6073:9:19",
														"nodeType": "YulTypedName",
														"src": "6073:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6085:6:19",
														"nodeType": "YulTypedName",
														"src": "6085:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6093:6:19",
														"nodeType": "YulTypedName",
														"src": "6093:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6101:6:19",
														"nodeType": "YulTypedName",
														"src": "6101:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6109:6:19",
														"nodeType": "YulTypedName",
														"src": "6109:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6117:6:19",
														"nodeType": "YulTypedName",
														"src": "6117:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6128:4:19",
														"nodeType": "YulTypedName",
														"src": "6128:4:19",
														"type": ""
													}
												],
												"src": "5923:664:19"
											},
											{
												"body": {
													"nativeSrc": "6689:73:19",
													"nodeType": "YulBlock",
													"src": "6689:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6706:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6706:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6711:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6699:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:19"
																},
																"nativeSrc": "6699:19:19",
																"nodeType": "YulFunctionCall",
																"src": "6699:19:19"
															},
															"nativeSrc": "6699:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "6699:19:19"
														},
														{
															"nativeSrc": "6727:29:19",
															"nodeType": "YulAssignment",
															"src": "6727:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6746:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6746:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6751:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6742:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:19"
																},
																"nativeSrc": "6742:14:19",
																"nodeType": "YulFunctionCall",
																"src": "6742:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6727:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "6727:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6593:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6661:3:19",
														"nodeType": "YulTypedName",
														"src": "6661:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6666:6:19",
														"nodeType": "YulTypedName",
														"src": "6666:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6677:11:19",
														"nodeType": "YulTypedName",
														"src": "6677:11:19",
														"type": ""
													}
												],
												"src": "6593:169:19"
											},
											{
												"body": {
													"nativeSrc": "6830:77:19",
													"nodeType": "YulBlock",
													"src": "6830:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6847:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6847:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6852:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6852:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6857:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6841:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6841:5:19"
																},
																"nativeSrc": "6841:23:19",
																"nodeType": "YulFunctionCall",
																"src": "6841:23:19"
															},
															"nativeSrc": "6841:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "6841:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6884:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "6884:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6889:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6889:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6880:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:19"
																		},
																		"nativeSrc": "6880:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6880:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6898:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6898:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6873:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:19"
																},
																"nativeSrc": "6873:27:19",
																"nodeType": "YulFunctionCall",
																"src": "6873:27:19"
															},
															"nativeSrc": "6873:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "6873:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6768:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6812:3:19",
														"nodeType": "YulTypedName",
														"src": "6812:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6817:3:19",
														"nodeType": "YulTypedName",
														"src": "6817:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6822:6:19",
														"nodeType": "YulTypedName",
														"src": "6822:6:19",
														"type": ""
													}
												],
												"src": "6768:139:19"
											},
											{
												"body": {
													"nativeSrc": "6961:54:19",
													"nodeType": "YulBlock",
													"src": "6961:54:19",
													"statements": [
														{
															"nativeSrc": "6971:38:19",
															"nodeType": "YulAssignment",
															"src": "6971:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6989:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6989:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:2:19",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:19"
																		},
																		"nativeSrc": "6985:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7005:2:19",
																				"nodeType": "YulLiteral",
																				"src": "7005:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7001:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:19"
																		},
																		"nativeSrc": "7001:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6981:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6981:3:19"
																},
																"nativeSrc": "6981:28:19",
																"nodeType": "YulFunctionCall",
																"src": "6981:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6971:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6913:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6944:5:19",
														"nodeType": "YulTypedName",
														"src": "6944:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6954:6:19",
														"nodeType": "YulTypedName",
														"src": "6954:6:19",
														"type": ""
													}
												],
												"src": "6913:102:19"
											},
											{
												"body": {
													"nativeSrc": "7113:285:19",
													"nodeType": "YulBlock",
													"src": "7113:285:19",
													"statements": [
														{
															"nativeSrc": "7123:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7123:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7170:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7170:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7137:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "7137:32:19"
																},
																"nativeSrc": "7137:39:19",
																"nodeType": "YulFunctionCall",
																"src": "7137:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7127:6:19",
																	"nodeType": "YulTypedName",
																	"src": "7127:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7185:78:19",
															"nodeType": "YulAssignment",
															"src": "7185:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7251:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7251:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7256:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7256:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7192:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "7192:58:19"
																},
																"nativeSrc": "7192:71:19",
																"nodeType": "YulFunctionCall",
																"src": "7192:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7185:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7311:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7311:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7318:4:19",
																				"nodeType": "YulLiteral",
																				"src": "7318:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7307:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7307:3:19"
																		},
																		"nativeSrc": "7307:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7307:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7325:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7330:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7272:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "7272:34:19"
																},
																"nativeSrc": "7272:65:19",
																"nodeType": "YulFunctionCall",
																"src": "7272:65:19"
															},
															"nativeSrc": "7272:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "7272:65:19"
														},
														{
															"nativeSrc": "7346:46:19",
															"nodeType": "YulAssignment",
															"src": "7346:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7357:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7357:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7384:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7384:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7362:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "7362:21:19"
																		},
																		"nativeSrc": "7362:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7362:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7353:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:19"
																},
																"nativeSrc": "7353:39:19",
																"nodeType": "YulFunctionCall",
																"src": "7353:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7346:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7346:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7021:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7094:5:19",
														"nodeType": "YulTypedName",
														"src": "7094:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7101:3:19",
														"nodeType": "YulTypedName",
														"src": "7101:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7109:3:19",
														"nodeType": "YulTypedName",
														"src": "7109:3:19",
														"type": ""
													}
												],
												"src": "7021:377:19"
											},
											{
												"body": {
													"nativeSrc": "7522:195:19",
													"nodeType": "YulBlock",
													"src": "7522:195:19",
													"statements": [
														{
															"nativeSrc": "7532:26:19",
															"nodeType": "YulAssignment",
															"src": "7532:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7544:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7544:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7555:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7555:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7540:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:19"
																},
																"nativeSrc": "7540:18:19",
																"nodeType": "YulFunctionCall",
																"src": "7540:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7532:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7532:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7579:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7579:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7590:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7575:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7575:3:19"
																		},
																		"nativeSrc": "7575:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7598:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "7598:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7604:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7604:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7594:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7594:3:19"
																		},
																		"nativeSrc": "7594:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7594:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7568:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7568:6:19"
																},
																"nativeSrc": "7568:47:19",
																"nodeType": "YulFunctionCall",
																"src": "7568:47:19"
															},
															"nativeSrc": "7568:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "7568:47:19"
														},
														{
															"nativeSrc": "7624:86:19",
															"nodeType": "YulAssignment",
															"src": "7624:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7696:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7696:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7705:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7705:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7632:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "7632:63:19"
																},
																"nativeSrc": "7632:78:19",
																"nodeType": "YulFunctionCall",
																"src": "7632:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7624:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7624:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7404:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7494:9:19",
														"nodeType": "YulTypedName",
														"src": "7494:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7506:6:19",
														"nodeType": "YulTypedName",
														"src": "7506:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7517:4:19",
														"nodeType": "YulTypedName",
														"src": "7517:4:19",
														"type": ""
													}
												],
												"src": "7404:313:19"
											},
											{
												"body": {
													"nativeSrc": "7781:40:19",
													"nodeType": "YulBlock",
													"src": "7781:40:19",
													"statements": [
														{
															"nativeSrc": "7792:22:19",
															"nodeType": "YulAssignment",
															"src": "7792:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7808:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7808:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7802:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7802:5:19"
																},
																"nativeSrc": "7802:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7802:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7792:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7723:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7764:5:19",
														"nodeType": "YulTypedName",
														"src": "7764:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7774:6:19",
														"nodeType": "YulTypedName",
														"src": "7774:6:19",
														"type": ""
													}
												],
												"src": "7723:98:19"
											},
											{
												"body": {
													"nativeSrc": "7883:60:19",
													"nodeType": "YulBlock",
													"src": "7883:60:19",
													"statements": [
														{
															"nativeSrc": "7893:11:19",
															"nodeType": "YulAssignment",
															"src": "7893:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "7901:3:19",
																"nodeType": "YulIdentifier",
																"src": "7901:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7893:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7893:4:19"
																}
															]
														},
														{
															"nativeSrc": "7914:22:19",
															"nodeType": "YulAssignment",
															"src": "7914:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7926:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7926:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7931:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7931:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7922:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:19"
																},
																"nativeSrc": "7922:14:19",
																"nodeType": "YulFunctionCall",
																"src": "7922:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7914:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7914:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "7827:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7870:3:19",
														"nodeType": "YulTypedName",
														"src": "7870:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7878:4:19",
														"nodeType": "YulTypedName",
														"src": "7878:4:19",
														"type": ""
													}
												],
												"src": "7827:116:19"
											},
											{
												"body": {
													"nativeSrc": "8004:99:19",
													"nodeType": "YulBlock",
													"src": "8004:99:19",
													"statements": [
														{
															"nativeSrc": "8015:42:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8015:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8052:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8052:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8046:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "8046:5:19"
																		},
																		"nativeSrc": "8046:10:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8046:10:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "8028:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "8028:17:19"
																},
																"nativeSrc": "8028:29:19",
																"nodeType": "YulFunctionCall",
																"src": "8028:29:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8019:5:19",
																	"nodeType": "YulTypedName",
																	"src": "8019:5:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8067:29:19",
															"nodeType": "YulAssignment",
															"src": "8067:29:19",
															"value": {
																"name": "value",
																"nativeSrc": "8091:5:19",
																"nodeType": "YulIdentifier",
																"src": "8091:5:19"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8067:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "8067:11:19"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "7949:154:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7984:3:19",
														"nodeType": "YulTypedName",
														"src": "7984:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "7992:11:19",
														"nodeType": "YulTypedName",
														"src": "7992:11:19",
														"type": ""
													}
												],
												"src": "7949:154:19"
											},
											{
												"body": {
													"nativeSrc": "8199:504:19",
													"nodeType": "YulBlock",
													"src": "8199:504:19",
													"statements": [
														{
															"nativeSrc": "8210:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8210:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8256:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8256:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8224:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "8224:31:19"
																},
																"nativeSrc": "8224:38:19",
																"nodeType": "YulFunctionCall",
																"src": "8224:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8214:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8214:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8271:21:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8271:21:19",
															"value": {
																"name": "array",
																"nativeSrc": "8287:5:19",
																"nodeType": "YulIdentifier",
																"src": "8287:5:19"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8275:8:19",
																	"nodeType": "YulTypedName",
																	"src": "8275:8:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8302:52:19",
															"nodeType": "YulAssignment",
															"src": "8302:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8348:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8348:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "8314:33:19",
																	"nodeType": "YulIdentifier",
																	"src": "8314:33:19"
																},
																"nativeSrc": "8314:40:19",
																"nodeType": "YulFunctionCall",
																"src": "8314:40:19"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8302:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "8302:8:19"
																}
															]
														},
														{
															"nativeSrc": "8364:44:19",
															"nodeType": "YulAssignment",
															"src": "8364:44:19",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "8399:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "8399:8:19"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "8373:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "8373:25:19"
																},
																"nativeSrc": "8373:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8373:35:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8364:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8364:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8436:260:19",
																"nodeType": "YulBlock",
																"src": "8436:260:19",
																"statements": [
																	{
																		"nativeSrc": "8450:236:19",
																		"nodeType": "YulAssignment",
																		"src": "8450:236:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "8480:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "8480:5:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8547:1:19",
																									"nodeType": "YulLiteral",
																									"src": "8547:1:19",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8554:2:19",
																											"nodeType": "YulLiteral",
																											"src": "8554:2:19",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "8558:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "8558:6:19"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "8550:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "8550:3:19"
																									},
																									"nativeSrc": "8550:15:19",
																									"nodeType": "YulFunctionCall",
																									"src": "8550:15:19"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "8543:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "8543:3:19"
																							},
																							"nativeSrc": "8543:23:19",
																							"nodeType": "YulFunctionCall",
																							"src": "8543:23:19"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8588:66:19",
																							"nodeType": "YulLiteral",
																							"src": "8588:66:19",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "8503:18:19",
																						"nodeType": "YulIdentifier",
																						"src": "8503:18:19"
																					},
																					"nativeSrc": "8503:169:19",
																					"nodeType": "YulFunctionCall",
																					"src": "8503:169:19"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8459:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8459:3:19"
																			},
																			"nativeSrc": "8459:227:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8459:227:19"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "8450:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8450:5:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8424:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8424:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8432:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8432:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8421:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8421:2:19"
																},
																"nativeSrc": "8421:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8421:14:19"
															},
															"nativeSrc": "8418:278:19",
															"nodeType": "YulIf",
															"src": "8418:278:19"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "8109:594:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8183:5:19",
														"nodeType": "YulTypedName",
														"src": "8183:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8193:5:19",
														"nodeType": "YulTypedName",
														"src": "8193:5:19",
														"type": ""
													}
												],
												"src": "8109:594:19"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48756C696F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48756C696F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4855000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x50B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x50B JUMP JUMPDEST POP POP POP PUSH2 0x120 PUSH1 0x5 DUP4 PUSH2 0x1BC PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x13C PUSH1 0x6 DUP3 PUSH2 0x1BC PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x179 PUSH2 0x209 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x7AA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1D6 DUP4 PUSH2 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x203 JUMP JUMPDEST DUP3 PUSH2 0x1ED DUP4 PUSH2 0x2C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x50B JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x248 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x2AF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x2BB SWAP1 PUSH2 0x744 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x34C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x35F JUMPI PUSH2 0x35E PUSH2 0x308 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3C1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x3CB DUP7 DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x40A PUSH2 0x405 DUP5 PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x428 DUP4 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x43C PUSH2 0x434 DUP3 PUSH2 0x416 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x392 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x450 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x45B DUP2 DUP5 DUP5 PUSH2 0x41F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x47E JUMPI PUSH2 0x473 PUSH0 DUP3 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x461 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x494 DUP2 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x49D DUP5 PUSH2 0x377 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4AC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4C0 PUSH2 0x4B8 DUP6 PUSH2 0x377 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x460 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4E3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4C8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4FB DUP4 DUP4 PUSH2 0x4D4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x514 DUP3 PUSH2 0x2D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH2 0x537 DUP3 SLOAD PUSH2 0x335 JUMP JUMPDEST PUSH2 0x542 DUP3 DUP3 DUP6 PUSH2 0x482 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x573 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x561 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x56B DUP6 DUP3 PUSH2 0x4F0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x581 DUP7 PUSH2 0x365 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x583 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5C5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5C1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4D4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EC DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5FB DUP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x62A DUP3 PUSH2 0x601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63A DUP2 PUSH2 0x620 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x653 PUSH0 DUP4 ADD DUP9 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x660 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x66D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x67A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x687 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x631 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C9 DUP3 PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x6D3 DUP2 DUP6 PUSH2 0x691 JUMP JUMPDEST SWAP4 POP PUSH2 0x6E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x6EC DUP2 PUSH2 0x6AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x70F DUP2 DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP3 MLOAD PUSH2 0x5DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x74E DUP3 PUSH2 0x717 JUMP JUMPDEST DUP3 PUSH2 0x758 DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP1 POP PUSH2 0x763 DUP2 PUSH2 0x730 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x79E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x386 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x20AE PUSH2 0x7FB PUSH0 CODECOPY PUSH0 PUSH2 0xD56 ADD MSTORE PUSH0 PUSH2 0xD1B ADD MSTORE PUSH0 PUSH2 0x124F ADD MSTORE PUSH0 PUSH2 0x122E ADD MSTORE PUSH0 PUSH2 0xA77 ADD MSTORE PUSH0 PUSH2 0xACD ADD MSTORE PUSH0 PUSH2 0xAF6 ADD MSTORE PUSH2 0x20AE PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4000AEA0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x269 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x336 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x362 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x384 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x390 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C1 PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E7 CALLER PUSH4 0x3B9ACA00 PUSH2 0x873 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FC PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x409 DUP6 DUP3 DUP6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x414 DUP6 DUP6 DUP6 PUSH2 0x984 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x431 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x441 DUP6 DUP6 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x484 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x231B03AE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP3 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DA PUSH2 0x48F PUSH2 0x85A JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x535 DUP3 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x54D PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x555 PUSH2 0xD4D JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5F0 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x667 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x667 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x67B PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x688 DUP2 DUP6 DUP6 PUSH2 0x984 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6D8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x706 DUP13 PUSH2 0xD88 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x73E DUP3 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74D DUP3 DUP8 DUP8 DUP8 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CC DUP11 DUP11 DUP11 PUSH2 0x861 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x86E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE PUSH0 DUP4 DUP4 PUSH2 0xFF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP5 DUP5 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x97E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE22 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH2 0xFF1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAEF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB1C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0x120A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB ISZERO PUSH2 0xCC6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88A7CA5C PUSH2 0xB6D PUSH2 0x85A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC3B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 PUSH1 0x40 MLOAD PUSH32 0x373C5C7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x88A7CA5C PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xCC4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x373C5C7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD48 PUSH1 0x5 PUSH32 0x0 PUSH2 0x129F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD83 PUSH1 0x6 PUSH32 0x0 PUSH2 0x129F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDED PUSH2 0xDE7 PUSH2 0xA74 JUMP JUMPDEST DUP4 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xE04 DUP9 DUP9 DUP9 DUP9 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE14 DUP3 DUP3 PUSH2 0x1473 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF02 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFEB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x110F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1156 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FD SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1284 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12BB JUMPI PUSH2 0x12B4 DUP4 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1346 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12F3 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x133E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1315 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x133E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C8 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1469 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13EB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145C JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1523 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1568 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155F SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x157B JUMPI PUSH2 0x157A PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15E1 DUP4 PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x168C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x16E1 DUP2 DUP6 PUSH2 0x169F JUMP JUMPDEST SWAP4 POP PUSH2 0x16F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x171D DUP2 DUP5 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1756 DUP3 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 EQ PUSH2 0x1770 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1799 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP2 EQ PUSH2 0x17A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B4 DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17DD DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17EE DUP6 DUP3 DUP7 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH0 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1877 DUP7 DUP3 DUP8 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1888 DUP7 DUP3 DUP8 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1899 DUP7 DUP3 DUP8 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B8 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x18AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E9 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1902 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1929 JUMPI PUSH2 0x1928 PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1946 JUMPI PUSH2 0x1945 PUSH2 0x190C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198E DUP8 DUP3 DUP9 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x199F DUP8 DUP3 DUP9 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH2 0x19CC DUP8 DUP3 DUP9 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FC DUP5 DUP3 DUP6 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A80 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A91 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1ABD DUP2 DUP6 PUSH2 0x1A58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC8 DUP4 PUSH2 0x1A68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF8 JUMPI DUP2 MLOAD PUSH2 0x1ADF DUP9 DUP3 PUSH2 0x1A86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AEA DUP4 PUSH2 0x1A9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ACB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH0 DUP4 ADD DUP11 PUSH2 0x1A30 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B2A DUP2 DUP10 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B3E DUP2 DUP9 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1B4D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1B5A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1B67 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBA DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD5 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C03 DUP11 DUP3 DUP12 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C14 DUP11 DUP3 DUP12 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C25 DUP11 DUP3 DUP12 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C36 DUP11 DUP3 DUP12 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C47 DUP11 DUP3 DUP12 ADD PUSH2 0x1B9D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C58 DUP11 DUP3 DUP12 ADD PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C69 DUP11 DUP3 DUP12 ADD PUSH2 0x1BC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8D PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9B DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CAC DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1CB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D26 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1D33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D7A PUSH0 DUP4 ADD DUP10 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1D87 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1DA1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1DAE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1DBB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E00 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E19 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1E26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1E33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5F DUP3 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1E69 DUP2 DUP6 PUSH2 0x1E45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1E82 DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EA0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1ECC DUP2 DUP5 PUSH2 0x1E55 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0B DUP2 PUSH2 0x1ED7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F26 DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F4E DUP5 DUP3 DUP6 ADD PUSH2 0x1F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8E DUP3 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F99 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1F57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FCA PUSH0 DUP4 ADD DUP9 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FD7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FE4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FF1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x201B PUSH0 DUP4 ADD DUP8 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2028 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2035 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2042 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDA STATICCALL SGT MSTORE8 DUP7 0xAB 0xBA JUMPDEST 0xA7 DUP4 CODESIZE REVERT LOG4 SWAP10 PUSH11 0xCCA7096094D4CF3202CEB9 PUSH1 0xF9 0xA8 0xC7 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:1622:18:-:0;;;306:58;;;;;;;;;;1574:52:5;;;;;;;;;;;;;;;;;1613:4;3328:431:14;;;;;;;;;;;;;;;;;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:14;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:5;233:1622:18;;2914:340:10;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:11:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:99:19:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:139::-;6857:6;6852:3;6847;6841:23;6898:1;6889:6;6884:3;6880:16;6873:27;6768:139;;;:::o;6913:102::-;6954:6;7005:2;7001:7;6996:2;6989:5;6985:14;6981:28;6971:38;;6913:102;;;:::o;7021:377::-;7109:3;7137:39;7170:5;7137:39;:::i;:::-;7192:71;7256:6;7251:3;7192:71;:::i;:::-;7185:78;;7272:65;7330:6;7325:3;7318:4;7311:5;7307:16;7272:65;:::i;:::-;7362:29;7384:6;7362:29;:::i;:::-;7357:3;7353:39;7346:46;;7113:285;7021:377;;;;:::o;7404:313::-;7517:4;7555:2;7544:9;7540:18;7532:26;;7604:9;7598:4;7594:20;7590:1;7579:9;7575:17;7568:47;7632:78;7705:4;7696:6;7632:78;:::i;:::-;7624:86;;7404:313;;;;:::o;7723:98::-;7774:6;7808:5;7802:12;7792:22;;7723:98;;;:::o;7827:116::-;7878:4;7901:3;7893:11;;7931:4;7926:3;7922:14;7914:22;;7827:116;;;:::o;7949:154::-;7992:11;8028:29;8052:3;8046:10;8028:29;:::i;:::-;8091:5;8067:29;;8004:99;7949:154;;;:::o;8109:594::-;8193:5;8224:38;8256:5;8224:38;:::i;:::-;8287:5;8314:40;8348:5;8314:40;:::i;:::-;8302:52;;8373:35;8399:8;8373:35;:::i;:::-;8364:44;;8432:2;8424:6;8421:14;8418:278;;;8503:169;8588:66;8558:6;8554:2;8550:15;8547:1;8543:23;8503:169;:::i;:::-;8480:5;8459:227;8450:236;;8418:278;8199:504;;8109:594;;;:::o;233:1622:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_925": {
									"entryPoint": 1064,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2230": {
									"entryPoint": 3346,
									"id": 2230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2242": {
									"entryPoint": 3405,
									"id": 2242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_585": {
									"entryPoint": 2145,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_645": {
									"entryPoint": 3618,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2160": {
									"entryPoint": 4618,
									"id": 2160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOnTransferReceived_3610": {
									"entryPoint": 2858,
									"id": 3610,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_2139": {
									"entryPoint": 2676,
									"id": 2139,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2176": {
									"entryPoint": 3547,
									"id": 2176,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_534": {
									"entryPoint": 2163,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1000": {
									"entryPoint": 2138,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_693": {
									"entryPoint": 2290,
									"id": 693,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2015": {
									"entryPoint": 5235,
									"id": 2015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_424": {
									"entryPoint": 2436,
									"id": 424,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_501": {
									"entryPoint": 4081,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1060": {
									"entryPoint": 3464,
									"id": 1060,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_321": {
									"entryPoint": 2008,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_345": {
									"entryPoint": 951,
									"id": 345,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_280": {
									"entryPoint": 1254,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_1204": {
									"entryPoint": 5703,
									"id": 1204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_258": {
									"entryPoint": 1056,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2218": {
									"entryPoint": 1340,
									"id": 2218,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3518": {
									"entryPoint": 985,
									"id": 3518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_240": {
									"entryPoint": 807,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1045": {
									"entryPoint": 3276,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_915": {
									"entryPoint": 1323,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_898": {
									"entryPoint": 1683,
									"id": 898,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1966": {
									"entryPoint": 3572,
									"id": 1966,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_249": {
									"entryPoint": 1505,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1271": {
									"entryPoint": 4767,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1172": {
									"entryPoint": 5589,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2316": {
									"entryPoint": 4940,
									"id": 2316,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_267": {
									"entryPoint": 1001,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferAndCall_3553": {
									"entryPoint": 1078,
									"id": 3553,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@transferFrom_377": {
									"entryPoint": 1010,
									"id": 377,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_304": {
									"entryPoint": 1649,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1930": {
									"entryPoint": 5004,
									"id": 1930,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19461:19",
										"nodeType": "YulBlock",
										"src": "0:19461:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:19",
													"nodeType": "YulBlock",
													"src": "66:40:19",
													"statements": [
														{
															"nativeSrc": "77:22:19",
															"nodeType": "YulAssignment",
															"src": "77:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:19"
																},
																"nativeSrc": "87:12:19",
																"nodeType": "YulFunctionCall",
																"src": "87:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:19",
														"nodeType": "YulTypedName",
														"src": "49:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:19",
														"nodeType": "YulTypedName",
														"src": "59:6:19",
														"type": ""
													}
												],
												"src": "7:99:19"
											},
											{
												"body": {
													"nativeSrc": "208:73:19",
													"nodeType": "YulBlock",
													"src": "208:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:19"
																},
																"nativeSrc": "218:19:19",
																"nodeType": "YulFunctionCall",
																"src": "218:19:19"
															},
															"nativeSrc": "218:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:19"
														},
														{
															"nativeSrc": "246:29:19",
															"nodeType": "YulAssignment",
															"src": "246:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:19",
																		"nodeType": "YulLiteral",
																		"src": "270:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:19"
																},
																"nativeSrc": "261:14:19",
																"nodeType": "YulFunctionCall",
																"src": "261:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:19",
														"nodeType": "YulTypedName",
														"src": "180:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:19",
														"nodeType": "YulTypedName",
														"src": "185:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:19",
														"nodeType": "YulTypedName",
														"src": "196:11:19",
														"type": ""
													}
												],
												"src": "112:169:19"
											},
											{
												"body": {
													"nativeSrc": "349:77:19",
													"nodeType": "YulBlock",
													"src": "349:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:19"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:19"
																},
																"nativeSrc": "360:23:19",
																"nodeType": "YulFunctionCall",
																"src": "360:23:19"
															},
															"nativeSrc": "360:23:19",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:19"
																		},
																		"nativeSrc": "399:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:19",
																		"nodeType": "YulLiteral",
																		"src": "417:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:19"
																},
																"nativeSrc": "392:27:19",
																"nodeType": "YulFunctionCall",
																"src": "392:27:19"
															},
															"nativeSrc": "392:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:19",
														"nodeType": "YulTypedName",
														"src": "331:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:19",
														"nodeType": "YulTypedName",
														"src": "336:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:19",
														"nodeType": "YulTypedName",
														"src": "341:6:19",
														"type": ""
													}
												],
												"src": "287:139:19"
											},
											{
												"body": {
													"nativeSrc": "480:54:19",
													"nodeType": "YulBlock",
													"src": "480:54:19",
													"statements": [
														{
															"nativeSrc": "490:38:19",
															"nodeType": "YulAssignment",
															"src": "490:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:19",
																				"nodeType": "YulLiteral",
																				"src": "515:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:19"
																		},
																		"nativeSrc": "504:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:19",
																				"nodeType": "YulLiteral",
																				"src": "524:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:19"
																		},
																		"nativeSrc": "520:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:19"
																},
																"nativeSrc": "500:28:19",
																"nodeType": "YulFunctionCall",
																"src": "500:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:19",
														"nodeType": "YulTypedName",
														"src": "463:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:19",
														"nodeType": "YulTypedName",
														"src": "473:6:19",
														"type": ""
													}
												],
												"src": "432:102:19"
											},
											{
												"body": {
													"nativeSrc": "632:285:19",
													"nodeType": "YulBlock",
													"src": "632:285:19",
													"statements": [
														{
															"nativeSrc": "642:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:19"
																},
																"nativeSrc": "656:39:19",
																"nodeType": "YulFunctionCall",
																"src": "656:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:19",
																	"nodeType": "YulTypedName",
																	"src": "646:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:19",
															"nodeType": "YulAssignment",
															"src": "704:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:19"
																},
																"nativeSrc": "711:71:19",
																"nodeType": "YulFunctionCall",
																"src": "711:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:19",
																				"nodeType": "YulLiteral",
																				"src": "837:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:19"
																		},
																		"nativeSrc": "826:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:19"
																},
																"nativeSrc": "791:65:19",
																"nodeType": "YulFunctionCall",
																"src": "791:65:19"
															},
															"nativeSrc": "791:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:19"
														},
														{
															"nativeSrc": "865:46:19",
															"nodeType": "YulAssignment",
															"src": "865:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:19"
																		},
																		"nativeSrc": "881:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:19"
																},
																"nativeSrc": "872:39:19",
																"nodeType": "YulFunctionCall",
																"src": "872:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:19",
														"nodeType": "YulTypedName",
														"src": "613:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:19",
														"nodeType": "YulTypedName",
														"src": "620:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:19",
														"nodeType": "YulTypedName",
														"src": "628:3:19",
														"type": ""
													}
												],
												"src": "540:377:19"
											},
											{
												"body": {
													"nativeSrc": "1041:195:19",
													"nodeType": "YulBlock",
													"src": "1041:195:19",
													"statements": [
														{
															"nativeSrc": "1051:26:19",
															"nodeType": "YulAssignment",
															"src": "1051:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:19"
																},
																"nativeSrc": "1059:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:19"
																		},
																		"nativeSrc": "1094:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:19"
																		},
																		"nativeSrc": "1113:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:19"
																},
																"nativeSrc": "1087:47:19",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:19"
															},
															"nativeSrc": "1087:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:19"
														},
														{
															"nativeSrc": "1143:86:19",
															"nodeType": "YulAssignment",
															"src": "1143:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:19"
																},
																"nativeSrc": "1151:78:19",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:19",
														"nodeType": "YulTypedName",
														"src": "1013:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:19",
														"nodeType": "YulTypedName",
														"src": "1025:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:19",
														"nodeType": "YulTypedName",
														"src": "1036:4:19",
														"type": ""
													}
												],
												"src": "923:313:19"
											},
											{
												"body": {
													"nativeSrc": "1282:35:19",
													"nodeType": "YulBlock",
													"src": "1282:35:19",
													"statements": [
														{
															"nativeSrc": "1292:19:19",
															"nodeType": "YulAssignment",
															"src": "1292:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:19"
																},
																"nativeSrc": "1302:9:19",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:19",
														"nodeType": "YulTypedName",
														"src": "1275:6:19",
														"type": ""
													}
												],
												"src": "1242:75:19"
											},
											{
												"body": {
													"nativeSrc": "1412:28:19",
													"nodeType": "YulBlock",
													"src": "1412:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:19"
																},
																"nativeSrc": "1422:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:19"
															},
															"nativeSrc": "1422:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:19"
											},
											{
												"body": {
													"nativeSrc": "1535:28:19",
													"nodeType": "YulBlock",
													"src": "1535:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:19"
																},
																"nativeSrc": "1545:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:19"
															},
															"nativeSrc": "1545:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:19"
											},
											{
												"body": {
													"nativeSrc": "1614:81:19",
													"nodeType": "YulBlock",
													"src": "1614:81:19",
													"statements": [
														{
															"nativeSrc": "1624:65:19",
															"nodeType": "YulAssignment",
															"src": "1624:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:19",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:19"
																},
																"nativeSrc": "1635:54:19",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:19",
														"nodeType": "YulTypedName",
														"src": "1596:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:19",
														"nodeType": "YulTypedName",
														"src": "1606:7:19",
														"type": ""
													}
												],
												"src": "1569:126:19"
											},
											{
												"body": {
													"nativeSrc": "1746:51:19",
													"nodeType": "YulBlock",
													"src": "1746:51:19",
													"statements": [
														{
															"nativeSrc": "1756:35:19",
															"nodeType": "YulAssignment",
															"src": "1756:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:19"
																},
																"nativeSrc": "1767:24:19",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:19",
														"nodeType": "YulTypedName",
														"src": "1728:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:19",
														"nodeType": "YulTypedName",
														"src": "1738:7:19",
														"type": ""
													}
												],
												"src": "1701:96:19"
											},
											{
												"body": {
													"nativeSrc": "1846:79:19",
													"nodeType": "YulBlock",
													"src": "1846:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:19",
																"nodeType": "YulBlock",
																"src": "1903:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:19"
																			},
																			"nativeSrc": "1905:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:19"
																		},
																		"nativeSrc": "1905:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:19"
																				},
																				"nativeSrc": "1876:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:19"
																		},
																		"nativeSrc": "1866:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:19"
																},
																"nativeSrc": "1859:43:19",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:19"
															},
															"nativeSrc": "1856:63:19",
															"nodeType": "YulIf",
															"src": "1856:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:19",
														"nodeType": "YulTypedName",
														"src": "1839:5:19",
														"type": ""
													}
												],
												"src": "1803:122:19"
											},
											{
												"body": {
													"nativeSrc": "1983:87:19",
													"nodeType": "YulBlock",
													"src": "1983:87:19",
													"statements": [
														{
															"nativeSrc": "1993:29:19",
															"nodeType": "YulAssignment",
															"src": "1993:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:19"
																},
																"nativeSrc": "2002:20:19",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:19"
																},
																"nativeSrc": "2031:33:19",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:19"
															},
															"nativeSrc": "2031:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:19",
														"nodeType": "YulTypedName",
														"src": "1961:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:19",
														"nodeType": "YulTypedName",
														"src": "1969:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:19",
														"nodeType": "YulTypedName",
														"src": "1977:5:19",
														"type": ""
													}
												],
												"src": "1931:139:19"
											},
											{
												"body": {
													"nativeSrc": "2121:32:19",
													"nodeType": "YulBlock",
													"src": "2121:32:19",
													"statements": [
														{
															"nativeSrc": "2131:16:19",
															"nodeType": "YulAssignment",
															"src": "2131:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:19",
																"nodeType": "YulIdentifier",
																"src": "2142:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:19",
														"nodeType": "YulTypedName",
														"src": "2103:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:19",
														"nodeType": "YulTypedName",
														"src": "2113:7:19",
														"type": ""
													}
												],
												"src": "2076:77:19"
											},
											{
												"body": {
													"nativeSrc": "2202:79:19",
													"nodeType": "YulBlock",
													"src": "2202:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:19",
																"nodeType": "YulBlock",
																"src": "2259:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:19"
																			},
																			"nativeSrc": "2261:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:19"
																		},
																		"nativeSrc": "2261:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:19"
																				},
																				"nativeSrc": "2232:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:19"
																		},
																		"nativeSrc": "2222:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:19"
																},
																"nativeSrc": "2215:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:19"
															},
															"nativeSrc": "2212:63:19",
															"nodeType": "YulIf",
															"src": "2212:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:19",
														"nodeType": "YulTypedName",
														"src": "2195:5:19",
														"type": ""
													}
												],
												"src": "2159:122:19"
											},
											{
												"body": {
													"nativeSrc": "2339:87:19",
													"nodeType": "YulBlock",
													"src": "2339:87:19",
													"statements": [
														{
															"nativeSrc": "2349:29:19",
															"nodeType": "YulAssignment",
															"src": "2349:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:19"
																},
																"nativeSrc": "2358:20:19",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:19"
																},
																"nativeSrc": "2387:33:19",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:19"
															},
															"nativeSrc": "2387:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:19",
														"nodeType": "YulTypedName",
														"src": "2317:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:19",
														"nodeType": "YulTypedName",
														"src": "2325:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:19",
														"nodeType": "YulTypedName",
														"src": "2333:5:19",
														"type": ""
													}
												],
												"src": "2287:139:19"
											},
											{
												"body": {
													"nativeSrc": "2515:391:19",
													"nodeType": "YulBlock",
													"src": "2515:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:19",
																"nodeType": "YulBlock",
																"src": "2561:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:19"
																			},
																			"nativeSrc": "2563:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:19"
																		},
																		"nativeSrc": "2563:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:19"
																		},
																		"nativeSrc": "2532:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:19"
																},
																"nativeSrc": "2528:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:19"
															},
															"nativeSrc": "2525:119:19",
															"nodeType": "YulIf",
															"src": "2525:119:19"
														},
														{
															"nativeSrc": "2654:117:19",
															"nodeType": "YulBlock",
															"src": "2654:117:19",
															"statements": [
																{
																	"nativeSrc": "2669:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:19",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:19",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:19"
																				},
																				"nativeSrc": "2729:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:19"
																		},
																		"nativeSrc": "2708:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:19",
															"nodeType": "YulBlock",
															"src": "2781:118:19",
															"statements": [
																{
																	"nativeSrc": "2796:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:19",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:19",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:19"
																				},
																				"nativeSrc": "2857:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:19"
																		},
																		"nativeSrc": "2836:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:19",
														"nodeType": "YulTypedName",
														"src": "2477:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:19",
														"nodeType": "YulTypedName",
														"src": "2488:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:19",
														"nodeType": "YulTypedName",
														"src": "2500:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:19",
														"nodeType": "YulTypedName",
														"src": "2508:6:19",
														"type": ""
													}
												],
												"src": "2432:474:19"
											},
											{
												"body": {
													"nativeSrc": "2954:48:19",
													"nodeType": "YulBlock",
													"src": "2954:48:19",
													"statements": [
														{
															"nativeSrc": "2964:32:19",
															"nodeType": "YulAssignment",
															"src": "2964:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:19"
																		},
																		"nativeSrc": "2982:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:19"
																},
																"nativeSrc": "2975:21:19",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:19",
														"nodeType": "YulTypedName",
														"src": "2936:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:19",
														"nodeType": "YulTypedName",
														"src": "2946:7:19",
														"type": ""
													}
												],
												"src": "2912:90:19"
											},
											{
												"body": {
													"nativeSrc": "3067:50:19",
													"nodeType": "YulBlock",
													"src": "3067:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:19"
																		},
																		"nativeSrc": "3089:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:19"
																},
																"nativeSrc": "3077:34:19",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:19"
															},
															"nativeSrc": "3077:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:19",
														"nodeType": "YulTypedName",
														"src": "3055:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:19",
														"nodeType": "YulTypedName",
														"src": "3062:3:19",
														"type": ""
													}
												],
												"src": "3008:109:19"
											},
											{
												"body": {
													"nativeSrc": "3215:118:19",
													"nodeType": "YulBlock",
													"src": "3215:118:19",
													"statements": [
														{
															"nativeSrc": "3225:26:19",
															"nodeType": "YulAssignment",
															"src": "3225:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:19"
																},
																"nativeSrc": "3233:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:19"
																		},
																		"nativeSrc": "3308:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:19"
																},
																"nativeSrc": "3261:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:19"
															},
															"nativeSrc": "3261:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:19",
														"nodeType": "YulTypedName",
														"src": "3187:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:19",
														"nodeType": "YulTypedName",
														"src": "3199:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:19",
														"nodeType": "YulTypedName",
														"src": "3210:4:19",
														"type": ""
													}
												],
												"src": "3123:210:19"
											},
											{
												"body": {
													"nativeSrc": "3404:53:19",
													"nodeType": "YulBlock",
													"src": "3404:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:19"
																		},
																		"nativeSrc": "3426:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:19"
																},
																"nativeSrc": "3414:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:19"
															},
															"nativeSrc": "3414:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:19",
														"nodeType": "YulTypedName",
														"src": "3392:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:19",
														"nodeType": "YulTypedName",
														"src": "3399:3:19",
														"type": ""
													}
												],
												"src": "3339:118:19"
											},
											{
												"body": {
													"nativeSrc": "3561:124:19",
													"nodeType": "YulBlock",
													"src": "3561:124:19",
													"statements": [
														{
															"nativeSrc": "3571:26:19",
															"nodeType": "YulAssignment",
															"src": "3571:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:19"
																},
																"nativeSrc": "3579:18:19",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:19"
																		},
																		"nativeSrc": "3660:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:19"
																},
																"nativeSrc": "3607:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:19"
															},
															"nativeSrc": "3607:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:19",
														"nodeType": "YulTypedName",
														"src": "3533:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:19",
														"nodeType": "YulTypedName",
														"src": "3545:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:19",
														"nodeType": "YulTypedName",
														"src": "3556:4:19",
														"type": ""
													}
												],
												"src": "3463:222:19"
											},
											{
												"body": {
													"nativeSrc": "3791:519:19",
													"nodeType": "YulBlock",
													"src": "3791:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:19",
																"nodeType": "YulBlock",
																"src": "3837:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:19"
																			},
																			"nativeSrc": "3839:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:19"
																		},
																		"nativeSrc": "3839:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:19"
																		},
																		"nativeSrc": "3808:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:19"
																},
																"nativeSrc": "3804:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:19"
															},
															"nativeSrc": "3801:119:19",
															"nodeType": "YulIf",
															"src": "3801:119:19"
														},
														{
															"nativeSrc": "3930:117:19",
															"nodeType": "YulBlock",
															"src": "3930:117:19",
															"statements": [
																{
																	"nativeSrc": "3945:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:19"
																				},
																				"nativeSrc": "4005:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:19"
																		},
																		"nativeSrc": "3984:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:19",
															"nodeType": "YulBlock",
															"src": "4057:118:19",
															"statements": [
																{
																	"nativeSrc": "4072:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:19"
																				},
																				"nativeSrc": "4133:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:19"
																		},
																		"nativeSrc": "4112:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:19",
															"nodeType": "YulBlock",
															"src": "4185:118:19",
															"statements": [
																{
																	"nativeSrc": "4200:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:19"
																				},
																				"nativeSrc": "4261:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:19"
																		},
																		"nativeSrc": "4240:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:19",
														"nodeType": "YulTypedName",
														"src": "3745:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:19",
														"nodeType": "YulTypedName",
														"src": "3756:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:19",
														"nodeType": "YulTypedName",
														"src": "3768:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:19",
														"nodeType": "YulTypedName",
														"src": "3776:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:19",
														"nodeType": "YulTypedName",
														"src": "3784:6:19",
														"type": ""
													}
												],
												"src": "3691:619:19"
											},
											{
												"body": {
													"nativeSrc": "4359:43:19",
													"nodeType": "YulBlock",
													"src": "4359:43:19",
													"statements": [
														{
															"nativeSrc": "4369:27:19",
															"nodeType": "YulAssignment",
															"src": "4369:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:19",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:19",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:19"
																},
																"nativeSrc": "4380:16:19",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:19",
														"nodeType": "YulTypedName",
														"src": "4341:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:19",
														"nodeType": "YulTypedName",
														"src": "4351:7:19",
														"type": ""
													}
												],
												"src": "4316:86:19"
											},
											{
												"body": {
													"nativeSrc": "4469:51:19",
													"nodeType": "YulBlock",
													"src": "4469:51:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:19",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:19"
																		},
																		"nativeSrc": "4491:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:19"
																},
																"nativeSrc": "4479:35:19",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:19"
															},
															"nativeSrc": "4479:35:19",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:19"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:19",
														"nodeType": "YulTypedName",
														"src": "4457:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:19",
														"nodeType": "YulTypedName",
														"src": "4464:3:19",
														"type": ""
													}
												],
												"src": "4408:112:19"
											},
											{
												"body": {
													"nativeSrc": "4620:120:19",
													"nodeType": "YulBlock",
													"src": "4620:120:19",
													"statements": [
														{
															"nativeSrc": "4630:26:19",
															"nodeType": "YulAssignment",
															"src": "4630:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:19"
																},
																"nativeSrc": "4638:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:19"
																		},
																		"nativeSrc": "4715:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:19",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:19"
																},
																"nativeSrc": "4666:67:19",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:19"
															},
															"nativeSrc": "4666:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:19",
														"nodeType": "YulTypedName",
														"src": "4592:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:19",
														"nodeType": "YulTypedName",
														"src": "4604:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:19",
														"nodeType": "YulTypedName",
														"src": "4615:4:19",
														"type": ""
													}
												],
												"src": "4526:214:19"
											},
											{
												"body": {
													"nativeSrc": "4791:32:19",
													"nodeType": "YulBlock",
													"src": "4791:32:19",
													"statements": [
														{
															"nativeSrc": "4801:16:19",
															"nodeType": "YulAssignment",
															"src": "4801:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "4812:5:19",
																"nodeType": "YulIdentifier",
																"src": "4812:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4801:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "4801:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4746:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4773:5:19",
														"nodeType": "YulTypedName",
														"src": "4773:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4783:7:19",
														"nodeType": "YulTypedName",
														"src": "4783:7:19",
														"type": ""
													}
												],
												"src": "4746:77:19"
											},
											{
												"body": {
													"nativeSrc": "4894:53:19",
													"nodeType": "YulBlock",
													"src": "4894:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4911:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4934:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4934:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4916:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "4916:17:19"
																		},
																		"nativeSrc": "4916:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:19"
																},
																"nativeSrc": "4904:37:19",
																"nodeType": "YulFunctionCall",
																"src": "4904:37:19"
															},
															"nativeSrc": "4904:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "4904:37:19"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4829:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4882:5:19",
														"nodeType": "YulTypedName",
														"src": "4882:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4889:3:19",
														"nodeType": "YulTypedName",
														"src": "4889:3:19",
														"type": ""
													}
												],
												"src": "4829:118:19"
											},
											{
												"body": {
													"nativeSrc": "5051:124:19",
													"nodeType": "YulBlock",
													"src": "5051:124:19",
													"statements": [
														{
															"nativeSrc": "5061:26:19",
															"nodeType": "YulAssignment",
															"src": "5061:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5073:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5073:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5084:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5069:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:19"
																},
																"nativeSrc": "5069:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5069:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5061:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5061:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5141:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:19"
																		},
																		"nativeSrc": "5150:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5097:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "5097:43:19"
																},
																"nativeSrc": "5097:71:19",
																"nodeType": "YulFunctionCall",
																"src": "5097:71:19"
															},
															"nativeSrc": "5097:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "5097:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4953:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5023:9:19",
														"nodeType": "YulTypedName",
														"src": "5023:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5035:6:19",
														"nodeType": "YulTypedName",
														"src": "5035:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5046:4:19",
														"nodeType": "YulTypedName",
														"src": "5046:4:19",
														"type": ""
													}
												],
												"src": "4953:222:19"
											},
											{
												"body": {
													"nativeSrc": "5270:28:19",
													"nodeType": "YulBlock",
													"src": "5270:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5287:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5287:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5290:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5290:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5280:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:19"
																},
																"nativeSrc": "5280:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5280:12:19"
															},
															"nativeSrc": "5280:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5280:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5181:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5181:117:19"
											},
											{
												"body": {
													"nativeSrc": "5393:28:19",
													"nodeType": "YulBlock",
													"src": "5393:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5410:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5410:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5413:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5403:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5403:6:19"
																},
																"nativeSrc": "5403:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5403:12:19"
															},
															"nativeSrc": "5403:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5403:12:19"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5304:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5304:117:19"
											},
											{
												"body": {
													"nativeSrc": "5516:28:19",
													"nodeType": "YulBlock",
													"src": "5516:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5533:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5533:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5536:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5536:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5526:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:19"
																},
																"nativeSrc": "5526:12:19",
																"nodeType": "YulFunctionCall",
																"src": "5526:12:19"
															},
															"nativeSrc": "5526:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "5526:12:19"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5427:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5427:117:19"
											},
											{
												"body": {
													"nativeSrc": "5637:478:19",
													"nodeType": "YulBlock",
													"src": "5637:478:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5686:83:19",
																"nodeType": "YulBlock",
																"src": "5686:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5688:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5688:77:19"
																			},
																			"nativeSrc": "5688:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5688:79:19"
																		},
																		"nativeSrc": "5688:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5688:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5665:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5665:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5673:4:19",
																						"nodeType": "YulLiteral",
																						"src": "5673:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5661:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:19"
																				},
																				"nativeSrc": "5661:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5661:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5680:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "5680:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5657:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:19"
																		},
																		"nativeSrc": "5657:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5657:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5650:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:19"
																},
																"nativeSrc": "5650:35:19",
																"nodeType": "YulFunctionCall",
																"src": "5650:35:19"
															},
															"nativeSrc": "5647:122:19",
															"nodeType": "YulIf",
															"src": "5647:122:19"
														},
														{
															"nativeSrc": "5778:30:19",
															"nodeType": "YulAssignment",
															"src": "5778:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5801:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5801:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5788:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "5788:12:19"
																},
																"nativeSrc": "5788:20:19",
																"nodeType": "YulFunctionCall",
																"src": "5788:20:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5778:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5778:6:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5851:83:19",
																"nodeType": "YulBlock",
																"src": "5851:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5853:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5853:77:19"
																			},
																			"nativeSrc": "5853:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5853:79:19"
																		},
																		"nativeSrc": "5853:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5853:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5823:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5823:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5831:18:19",
																		"nodeType": "YulLiteral",
																		"src": "5831:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5820:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5820:2:19"
																},
																"nativeSrc": "5820:30:19",
																"nodeType": "YulFunctionCall",
																"src": "5820:30:19"
															},
															"nativeSrc": "5817:117:19",
															"nodeType": "YulIf",
															"src": "5817:117:19"
														},
														{
															"nativeSrc": "5943:29:19",
															"nodeType": "YulAssignment",
															"src": "5943:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5959:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5959:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5967:4:19",
																		"nodeType": "YulLiteral",
																		"src": "5967:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5955:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:19"
																},
																"nativeSrc": "5955:17:19",
																"nodeType": "YulFunctionCall",
																"src": "5955:17:19"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5943:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "5943:8:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6026:83:19",
																"nodeType": "YulBlock",
																"src": "6026:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6028:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6028:77:19"
																			},
																			"nativeSrc": "6028:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6028:79:19"
																		},
																		"nativeSrc": "6028:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6028:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5991:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "5991:8:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6005:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6005:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6013:4:19",
																						"nodeType": "YulLiteral",
																						"src": "6013:4:19",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6001:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6001:3:19"
																				},
																				"nativeSrc": "6001:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6001:17:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5987:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5987:3:19"
																		},
																		"nativeSrc": "5987:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5987:32:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6021:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "6021:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5984:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "5984:2:19"
																},
																"nativeSrc": "5984:41:19",
																"nodeType": "YulFunctionCall",
																"src": "5984:41:19"
															},
															"nativeSrc": "5981:128:19",
															"nodeType": "YulIf",
															"src": "5981:128:19"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "5563:552:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5604:6:19",
														"nodeType": "YulTypedName",
														"src": "5604:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5612:3:19",
														"nodeType": "YulTypedName",
														"src": "5612:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5620:8:19",
														"nodeType": "YulTypedName",
														"src": "5620:8:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5630:6:19",
														"nodeType": "YulTypedName",
														"src": "5630:6:19",
														"type": ""
													}
												],
												"src": "5563:552:19"
											},
											{
												"body": {
													"nativeSrc": "6240:698:19",
													"nodeType": "YulBlock",
													"src": "6240:698:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6286:83:19",
																"nodeType": "YulBlock",
																"src": "6286:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6288:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6288:77:19"
																			},
																			"nativeSrc": "6288:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:79:19"
																		},
																		"nativeSrc": "6288:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6288:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6261:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6261:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6270:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6270:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6257:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6257:3:19"
																		},
																		"nativeSrc": "6257:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6257:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6253:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6253:3:19"
																},
																"nativeSrc": "6253:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6253:32:19"
															},
															"nativeSrc": "6250:119:19",
															"nodeType": "YulIf",
															"src": "6250:119:19"
														},
														{
															"nativeSrc": "6379:117:19",
															"nodeType": "YulBlock",
															"src": "6379:117:19",
															"statements": [
																{
																	"nativeSrc": "6394:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6394:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6408:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6408:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6398:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6398:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6423:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6423:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6458:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6458:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6469:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6469:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6454:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6454:3:19"
																				},
																				"nativeSrc": "6454:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6454:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6478:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6478:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6433:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6433:20:19"
																		},
																		"nativeSrc": "6433:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6423:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6423:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6506:118:19",
															"nodeType": "YulBlock",
															"src": "6506:118:19",
															"statements": [
																{
																	"nativeSrc": "6521:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6521:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6535:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6525:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6525:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6551:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6551:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6586:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6586:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6597:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6597:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6582:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6582:3:19"
																				},
																				"nativeSrc": "6582:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6582:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6606:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6606:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6561:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6561:20:19"
																		},
																		"nativeSrc": "6561:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6551:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6551:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6634:297:19",
															"nodeType": "YulBlock",
															"src": "6634:297:19",
															"statements": [
																{
																	"nativeSrc": "6649:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6649:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6680:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6680:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6691:2:19",
																						"nodeType": "YulLiteral",
																						"src": "6691:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6676:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6676:3:19"
																				},
																				"nativeSrc": "6676:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6676:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6663:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "6663:12:19"
																		},
																		"nativeSrc": "6663:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6663:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6653:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6653:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6742:83:19",
																		"nodeType": "YulBlock",
																		"src": "6742:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6744:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "6744:77:19"
																					},
																					"nativeSrc": "6744:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "6744:79:19"
																				},
																				"nativeSrc": "6744:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "6744:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6714:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6714:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6722:18:19",
																				"nodeType": "YulLiteral",
																				"src": "6722:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6711:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6711:2:19"
																		},
																		"nativeSrc": "6711:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6711:30:19"
																	},
																	"nativeSrc": "6708:117:19",
																	"nodeType": "YulIf",
																	"src": "6708:117:19"
																},
																{
																	"nativeSrc": "6839:82:19",
																	"nodeType": "YulAssignment",
																	"src": "6839:82:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6893:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6893:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6904:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6904:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6889:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6889:3:19"
																				},
																				"nativeSrc": "6889:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6889:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6913:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6913:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "6857:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "6857:31:19"
																		},
																		"nativeSrc": "6857:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6857:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6839:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6839:6:19"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "6847:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6847:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "6121:817:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6186:9:19",
														"nodeType": "YulTypedName",
														"src": "6186:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6197:7:19",
														"nodeType": "YulTypedName",
														"src": "6197:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6209:6:19",
														"nodeType": "YulTypedName",
														"src": "6209:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6217:6:19",
														"nodeType": "YulTypedName",
														"src": "6217:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6225:6:19",
														"nodeType": "YulTypedName",
														"src": "6225:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6233:6:19",
														"nodeType": "YulTypedName",
														"src": "6233:6:19",
														"type": ""
													}
												],
												"src": "6121:817:19"
											},
											{
												"body": {
													"nativeSrc": "7010:263:19",
													"nodeType": "YulBlock",
													"src": "7010:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7056:83:19",
																"nodeType": "YulBlock",
																"src": "7056:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7058:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "7058:77:19"
																			},
																			"nativeSrc": "7058:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7058:79:19"
																		},
																		"nativeSrc": "7058:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7058:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7031:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7031:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7040:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7040:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7027:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:19"
																		},
																		"nativeSrc": "7027:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7027:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7052:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7052:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7023:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:19"
																},
																"nativeSrc": "7023:32:19",
																"nodeType": "YulFunctionCall",
																"src": "7023:32:19"
															},
															"nativeSrc": "7020:119:19",
															"nodeType": "YulIf",
															"src": "7020:119:19"
														},
														{
															"nativeSrc": "7149:117:19",
															"nodeType": "YulBlock",
															"src": "7149:117:19",
															"statements": [
																{
																	"nativeSrc": "7164:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7164:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7178:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7178:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7168:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7168:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7193:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7193:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7228:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7228:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7239:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7239:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7224:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7224:3:19"
																				},
																				"nativeSrc": "7224:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7224:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7248:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7248:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7203:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7203:20:19"
																		},
																		"nativeSrc": "7203:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7203:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7193:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7193:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6944:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6980:9:19",
														"nodeType": "YulTypedName",
														"src": "6980:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6991:7:19",
														"nodeType": "YulTypedName",
														"src": "6991:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7003:6:19",
														"nodeType": "YulTypedName",
														"src": "7003:6:19",
														"type": ""
													}
												],
												"src": "6944:329:19"
											},
											{
												"body": {
													"nativeSrc": "7323:105:19",
													"nodeType": "YulBlock",
													"src": "7323:105:19",
													"statements": [
														{
															"nativeSrc": "7333:89:19",
															"nodeType": "YulAssignment",
															"src": "7333:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7348:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7348:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7355:66:19",
																		"nodeType": "YulLiteral",
																		"src": "7355:66:19",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7344:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7344:3:19"
																},
																"nativeSrc": "7344:78:19",
																"nodeType": "YulFunctionCall",
																"src": "7344:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7333:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "7333:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "7279:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7305:5:19",
														"nodeType": "YulTypedName",
														"src": "7305:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7315:7:19",
														"nodeType": "YulTypedName",
														"src": "7315:7:19",
														"type": ""
													}
												],
												"src": "7279:149:19"
											},
											{
												"body": {
													"nativeSrc": "7497:52:19",
													"nodeType": "YulBlock",
													"src": "7497:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7514:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7514:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7536:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7536:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "7519:16:19",
																			"nodeType": "YulIdentifier",
																			"src": "7519:16:19"
																		},
																		"nativeSrc": "7519:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7519:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7507:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:19"
																},
																"nativeSrc": "7507:36:19",
																"nodeType": "YulFunctionCall",
																"src": "7507:36:19"
															},
															"nativeSrc": "7507:36:19",
															"nodeType": "YulExpressionStatement",
															"src": "7507:36:19"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "7434:115:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7485:5:19",
														"nodeType": "YulTypedName",
														"src": "7485:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7492:3:19",
														"nodeType": "YulTypedName",
														"src": "7492:3:19",
														"type": ""
													}
												],
												"src": "7434:115:19"
											},
											{
												"body": {
													"nativeSrc": "7620:53:19",
													"nodeType": "YulBlock",
													"src": "7620:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7637:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7660:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7660:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7642:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "7642:17:19"
																		},
																		"nativeSrc": "7642:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7642:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7630:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:19"
																},
																"nativeSrc": "7630:37:19",
																"nodeType": "YulFunctionCall",
																"src": "7630:37:19"
															},
															"nativeSrc": "7630:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "7630:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7555:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7608:5:19",
														"nodeType": "YulTypedName",
														"src": "7608:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7615:3:19",
														"nodeType": "YulTypedName",
														"src": "7615:3:19",
														"type": ""
													}
												],
												"src": "7555:118:19"
											},
											{
												"body": {
													"nativeSrc": "7753:40:19",
													"nodeType": "YulBlock",
													"src": "7753:40:19",
													"statements": [
														{
															"nativeSrc": "7764:22:19",
															"nodeType": "YulAssignment",
															"src": "7764:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7780:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7780:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7774:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7774:5:19"
																},
																"nativeSrc": "7774:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7774:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7764:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7764:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7679:114:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7736:5:19",
														"nodeType": "YulTypedName",
														"src": "7736:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7746:6:19",
														"nodeType": "YulTypedName",
														"src": "7746:6:19",
														"type": ""
													}
												],
												"src": "7679:114:19"
											},
											{
												"body": {
													"nativeSrc": "7910:73:19",
													"nodeType": "YulBlock",
													"src": "7910:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7927:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7927:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7932:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7920:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7920:6:19"
																},
																"nativeSrc": "7920:19:19",
																"nodeType": "YulFunctionCall",
																"src": "7920:19:19"
															},
															"nativeSrc": "7920:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "7920:19:19"
														},
														{
															"nativeSrc": "7948:29:19",
															"nodeType": "YulAssignment",
															"src": "7948:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7967:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7967:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7972:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7972:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7963:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7963:3:19"
																},
																"nativeSrc": "7963:14:19",
																"nodeType": "YulFunctionCall",
																"src": "7963:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7948:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "7948:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7799:184:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7882:3:19",
														"nodeType": "YulTypedName",
														"src": "7882:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7887:6:19",
														"nodeType": "YulTypedName",
														"src": "7887:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7898:11:19",
														"nodeType": "YulTypedName",
														"src": "7898:11:19",
														"type": ""
													}
												],
												"src": "7799:184:19"
											},
											{
												"body": {
													"nativeSrc": "8061:60:19",
													"nodeType": "YulBlock",
													"src": "8061:60:19",
													"statements": [
														{
															"nativeSrc": "8071:11:19",
															"nodeType": "YulAssignment",
															"src": "8071:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "8079:3:19",
																"nodeType": "YulIdentifier",
																"src": "8079:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8071:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8071:4:19"
																}
															]
														},
														{
															"nativeSrc": "8092:22:19",
															"nodeType": "YulAssignment",
															"src": "8092:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8104:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8104:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8109:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8109:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8100:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8100:3:19"
																},
																"nativeSrc": "8100:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8100:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8092:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8092:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7989:132:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8048:3:19",
														"nodeType": "YulTypedName",
														"src": "8048:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8056:4:19",
														"nodeType": "YulTypedName",
														"src": "8056:4:19",
														"type": ""
													}
												],
												"src": "7989:132:19"
											},
											{
												"body": {
													"nativeSrc": "8182:53:19",
													"nodeType": "YulBlock",
													"src": "8182:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8199:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8199:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8222:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "8222:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8204:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "8204:17:19"
																		},
																		"nativeSrc": "8204:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8192:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:19"
																},
																"nativeSrc": "8192:37:19",
																"nodeType": "YulFunctionCall",
																"src": "8192:37:19"
															},
															"nativeSrc": "8192:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "8192:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "8127:108:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8170:5:19",
														"nodeType": "YulTypedName",
														"src": "8170:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8177:3:19",
														"nodeType": "YulTypedName",
														"src": "8177:3:19",
														"type": ""
													}
												],
												"src": "8127:108:19"
											},
											{
												"body": {
													"nativeSrc": "8321:99:19",
													"nodeType": "YulBlock",
													"src": "8321:99:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8365:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8365:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8373:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8373:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "8331:33:19",
																	"nodeType": "YulIdentifier",
																	"src": "8331:33:19"
																},
																"nativeSrc": "8331:46:19",
																"nodeType": "YulFunctionCall",
																"src": "8331:46:19"
															},
															"nativeSrc": "8331:46:19",
															"nodeType": "YulExpressionStatement",
															"src": "8331:46:19"
														},
														{
															"nativeSrc": "8386:28:19",
															"nodeType": "YulAssignment",
															"src": "8386:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8404:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8404:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8409:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8409:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8400:3:19"
																},
																"nativeSrc": "8400:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8400:14:19"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8386:10:19",
																	"nodeType": "YulIdentifier",
																	"src": "8386:10:19"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "8241:179:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8294:6:19",
														"nodeType": "YulTypedName",
														"src": "8294:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8302:3:19",
														"nodeType": "YulTypedName",
														"src": "8302:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8310:10:19",
														"nodeType": "YulTypedName",
														"src": "8310:10:19",
														"type": ""
													}
												],
												"src": "8241:179:19"
											},
											{
												"body": {
													"nativeSrc": "8501:38:19",
													"nodeType": "YulBlock",
													"src": "8501:38:19",
													"statements": [
														{
															"nativeSrc": "8511:22:19",
															"nodeType": "YulAssignment",
															"src": "8511:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8523:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8523:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8528:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8528:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8519:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8519:3:19"
																},
																"nativeSrc": "8519:14:19",
																"nodeType": "YulFunctionCall",
																"src": "8519:14:19"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8511:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8511:4:19"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8426:113:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8488:3:19",
														"nodeType": "YulTypedName",
														"src": "8488:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8496:4:19",
														"nodeType": "YulTypedName",
														"src": "8496:4:19",
														"type": ""
													}
												],
												"src": "8426:113:19"
											},
											{
												"body": {
													"nativeSrc": "8699:608:19",
													"nodeType": "YulBlock",
													"src": "8699:608:19",
													"statements": [
														{
															"nativeSrc": "8709:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8709:68:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8771:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8771:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8723:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "8723:47:19"
																},
																"nativeSrc": "8723:54:19",
																"nodeType": "YulFunctionCall",
																"src": "8723:54:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8713:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8713:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8786:93:19",
															"nodeType": "YulAssignment",
															"src": "8786:93:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8867:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8867:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8872:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8872:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8793:73:19",
																	"nodeType": "YulIdentifier",
																	"src": "8793:73:19"
																},
																"nativeSrc": "8793:86:19",
																"nodeType": "YulFunctionCall",
																"src": "8793:86:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8786:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8786:3:19"
																}
															]
														},
														{
															"nativeSrc": "8888:71:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8888:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8953:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8953:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8903:49:19",
																	"nodeType": "YulIdentifier",
																	"src": "8903:49:19"
																},
																"nativeSrc": "8903:56:19",
																"nodeType": "YulFunctionCall",
																"src": "8903:56:19"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8892:7:19",
																	"nodeType": "YulTypedName",
																	"src": "8892:7:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8968:21:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8968:21:19",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8982:7:19",
																"nodeType": "YulIdentifier",
																"src": "8982:7:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8972:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8972:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9058:224:19",
																"nodeType": "YulBlock",
																"src": "9058:224:19",
																"statements": [
																	{
																		"nativeSrc": "9072:34:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9072:34:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9099:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "9099:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9093:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9093:5:19"
																			},
																			"nativeSrc": "9093:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9093:13:19"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9076:13:19",
																				"nodeType": "YulTypedName",
																				"src": "9076:13:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9119:70:19",
																		"nodeType": "YulAssignment",
																		"src": "9119:70:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9170:13:19",
																					"nodeType": "YulIdentifier",
																					"src": "9170:13:19"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9185:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9185:3:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "9126:43:19",
																				"nodeType": "YulIdentifier",
																				"src": "9126:43:19"
																			},
																			"nativeSrc": "9126:63:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9126:63:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9119:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "9119:3:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9202:70:19",
																		"nodeType": "YulAssignment",
																		"src": "9202:70:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9265:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "9265:6:19"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "9212:52:19",
																				"nodeType": "YulIdentifier",
																				"src": "9212:52:19"
																			},
																			"nativeSrc": "9212:60:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9212:60:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9202:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9202:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9020:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "9020:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9023:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9023:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9017:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9017:2:19"
																},
																"nativeSrc": "9017:13:19",
																"nodeType": "YulFunctionCall",
																"src": "9017:13:19"
															},
															"nativeSrc": "8998:284:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9031:18:19",
																"nodeType": "YulBlock",
																"src": "9031:18:19",
																"statements": [
																	{
																		"nativeSrc": "9033:14:19",
																		"nodeType": "YulAssignment",
																		"src": "9033:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9042:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "9042:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9045:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9045:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9038:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "9038:3:19"
																			},
																			"nativeSrc": "9038:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9038:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9033:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "9033:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9002:14:19",
																"nodeType": "YulBlock",
																"src": "9002:14:19",
																"statements": [
																	{
																		"nativeSrc": "9004:10:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9004:10:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9013:1:19",
																			"nodeType": "YulLiteral",
																			"src": "9013:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9008:1:19",
																				"nodeType": "YulTypedName",
																				"src": "9008:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8998:284:19"
														},
														{
															"nativeSrc": "9291:10:19",
															"nodeType": "YulAssignment",
															"src": "9291:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "9298:3:19",
																"nodeType": "YulIdentifier",
																"src": "9298:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9291:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9291:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8575:732:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8678:5:19",
														"nodeType": "YulTypedName",
														"src": "8678:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8685:3:19",
														"nodeType": "YulTypedName",
														"src": "8685:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8694:3:19",
														"nodeType": "YulTypedName",
														"src": "8694:3:19",
														"type": ""
													}
												],
												"src": "8575:732:19"
											},
											{
												"body": {
													"nativeSrc": "9667:861:19",
													"nodeType": "YulBlock",
													"src": "9667:861:19",
													"statements": [
														{
															"nativeSrc": "9677:27:19",
															"nodeType": "YulAssignment",
															"src": "9677:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9689:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9689:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9700:3:19",
																		"nodeType": "YulLiteral",
																		"src": "9700:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9685:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9685:3:19"
																},
																"nativeSrc": "9685:19:19",
																"nodeType": "YulFunctionCall",
																"src": "9685:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9677:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9677:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9756:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9756:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9769:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9769:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9780:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9780:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9765:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9765:3:19"
																		},
																		"nativeSrc": "9765:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9765:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "9714:41:19",
																	"nodeType": "YulIdentifier",
																	"src": "9714:41:19"
																},
																"nativeSrc": "9714:69:19",
																"nodeType": "YulFunctionCall",
																"src": "9714:69:19"
															},
															"nativeSrc": "9714:69:19",
															"nodeType": "YulExpressionStatement",
															"src": "9714:69:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9804:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9804:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9815:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9815:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9800:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:19"
																		},
																		"nativeSrc": "9800:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9824:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "9824:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9830:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9830:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9820:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9820:3:19"
																		},
																		"nativeSrc": "9820:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9820:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9793:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:19"
																},
																"nativeSrc": "9793:48:19",
																"nodeType": "YulFunctionCall",
																"src": "9793:48:19"
															},
															"nativeSrc": "9793:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "9793:48:19"
														},
														{
															"nativeSrc": "9850:86:19",
															"nodeType": "YulAssignment",
															"src": "9850:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9922:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9922:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9931:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9931:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9858:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "9858:63:19"
																},
																"nativeSrc": "9858:78:19",
																"nodeType": "YulFunctionCall",
																"src": "9858:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9850:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9850:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9957:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9957:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9968:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9968:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9953:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9953:3:19"
																		},
																		"nativeSrc": "9953:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9953:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9977:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "9977:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9983:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9973:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9973:3:19"
																		},
																		"nativeSrc": "9973:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9973:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9946:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:19"
																},
																"nativeSrc": "9946:48:19",
																"nodeType": "YulFunctionCall",
																"src": "9946:48:19"
															},
															"nativeSrc": "9946:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "9946:48:19"
														},
														{
															"nativeSrc": "10003:86:19",
															"nodeType": "YulAssignment",
															"src": "10003:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10075:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10075:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10084:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10084:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10011:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "10011:63:19"
																},
																"nativeSrc": "10011:78:19",
																"nodeType": "YulFunctionCall",
																"src": "10011:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10003:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10003:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10143:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10143:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10156:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10156:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10167:2:19",
																				"nodeType": "YulLiteral",
																				"src": "10167:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10152:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:19"
																		},
																		"nativeSrc": "10152:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10152:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10099:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10099:43:19"
																},
																"nativeSrc": "10099:72:19",
																"nodeType": "YulFunctionCall",
																"src": "10099:72:19"
															},
															"nativeSrc": "10099:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "10099:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10225:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10238:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10249:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10249:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10234:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:19"
																		},
																		"nativeSrc": "10234:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10234:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10181:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10181:43:19"
																},
																"nativeSrc": "10181:73:19",
																"nodeType": "YulFunctionCall",
																"src": "10181:73:19"
															},
															"nativeSrc": "10181:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "10181:73:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10308:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10308:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10332:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:19"
																		},
																		"nativeSrc": "10317:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10264:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "10264:43:19"
																},
																"nativeSrc": "10264:73:19",
																"nodeType": "YulFunctionCall",
																"src": "10264:73:19"
															},
															"nativeSrc": "10264:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "10264:73:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10358:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10358:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10369:3:19",
																				"nodeType": "YulLiteral",
																				"src": "10369:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10354:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10354:3:19"
																		},
																		"nativeSrc": "10354:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10354:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10379:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "10379:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10385:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10385:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10375:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10375:3:19"
																		},
																		"nativeSrc": "10375:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10375:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10347:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:19"
																},
																"nativeSrc": "10347:49:19",
																"nodeType": "YulFunctionCall",
																"src": "10347:49:19"
															},
															"nativeSrc": "10347:49:19",
															"nodeType": "YulExpressionStatement",
															"src": "10347:49:19"
														},
														{
															"nativeSrc": "10405:116:19",
															"nodeType": "YulAssignment",
															"src": "10405:116:19",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "10507:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10507:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10516:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10516:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10413:93:19",
																	"nodeType": "YulIdentifier",
																	"src": "10413:93:19"
																},
																"nativeSrc": "10413:108:19",
																"nodeType": "YulFunctionCall",
																"src": "10413:108:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10405:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10405:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9313:1215:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9591:9:19",
														"nodeType": "YulTypedName",
														"src": "9591:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9603:6:19",
														"nodeType": "YulTypedName",
														"src": "9603:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9611:6:19",
														"nodeType": "YulTypedName",
														"src": "9611:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9619:6:19",
														"nodeType": "YulTypedName",
														"src": "9619:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9627:6:19",
														"nodeType": "YulTypedName",
														"src": "9627:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9635:6:19",
														"nodeType": "YulTypedName",
														"src": "9635:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9643:6:19",
														"nodeType": "YulTypedName",
														"src": "9643:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9651:6:19",
														"nodeType": "YulTypedName",
														"src": "9651:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9662:4:19",
														"nodeType": "YulTypedName",
														"src": "9662:4:19",
														"type": ""
													}
												],
												"src": "9313:1215:19"
											},
											{
												"body": {
													"nativeSrc": "10575:77:19",
													"nodeType": "YulBlock",
													"src": "10575:77:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10630:16:19",
																"nodeType": "YulBlock",
																"src": "10630:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10639:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10639:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10642:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10642:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10632:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10632:6:19"
																			},
																			"nativeSrc": "10632:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10632:12:19"
																		},
																		"nativeSrc": "10632:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10632:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10598:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "10598:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10621:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "10621:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "10605:15:19",
																					"nodeType": "YulIdentifier",
																					"src": "10605:15:19"
																				},
																				"nativeSrc": "10605:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10605:22:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10595:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "10595:2:19"
																		},
																		"nativeSrc": "10595:33:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10595:33:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10588:6:19"
																},
																"nativeSrc": "10588:41:19",
																"nodeType": "YulFunctionCall",
																"src": "10588:41:19"
															},
															"nativeSrc": "10585:61:19",
															"nodeType": "YulIf",
															"src": "10585:61:19"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "10534:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10568:5:19",
														"nodeType": "YulTypedName",
														"src": "10568:5:19",
														"type": ""
													}
												],
												"src": "10534:118:19"
											},
											{
												"body": {
													"nativeSrc": "10708:85:19",
													"nodeType": "YulBlock",
													"src": "10708:85:19",
													"statements": [
														{
															"nativeSrc": "10718:29:19",
															"nodeType": "YulAssignment",
															"src": "10718:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10740:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10740:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10727:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "10727:12:19"
																},
																"nativeSrc": "10727:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10727:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10718:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10718:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10781:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10781:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "10756:24:19",
																	"nodeType": "YulIdentifier",
																	"src": "10756:24:19"
																},
																"nativeSrc": "10756:31:19",
																"nodeType": "YulFunctionCall",
																"src": "10756:31:19"
															},
															"nativeSrc": "10756:31:19",
															"nodeType": "YulExpressionStatement",
															"src": "10756:31:19"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "10658:135:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10686:6:19",
														"nodeType": "YulTypedName",
														"src": "10686:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10694:3:19",
														"nodeType": "YulTypedName",
														"src": "10694:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10702:5:19",
														"nodeType": "YulTypedName",
														"src": "10702:5:19",
														"type": ""
													}
												],
												"src": "10658:135:19"
											},
											{
												"body": {
													"nativeSrc": "10842:79:19",
													"nodeType": "YulBlock",
													"src": "10842:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10899:16:19",
																"nodeType": "YulBlock",
																"src": "10899:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10908:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10908:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10911:1:19",
																					"nodeType": "YulLiteral",
																					"src": "10911:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10901:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10901:6:19"
																			},
																			"nativeSrc": "10901:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10901:12:19"
																		},
																		"nativeSrc": "10901:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10901:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10865:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "10865:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10890:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "10890:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "10872:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "10872:17:19"
																				},
																				"nativeSrc": "10872:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10872:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10862:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "10862:2:19"
																		},
																		"nativeSrc": "10862:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10862:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10855:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10855:6:19"
																},
																"nativeSrc": "10855:43:19",
																"nodeType": "YulFunctionCall",
																"src": "10855:43:19"
															},
															"nativeSrc": "10852:63:19",
															"nodeType": "YulIf",
															"src": "10852:63:19"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "10799:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10835:5:19",
														"nodeType": "YulTypedName",
														"src": "10835:5:19",
														"type": ""
													}
												],
												"src": "10799:122:19"
											},
											{
												"body": {
													"nativeSrc": "10979:87:19",
													"nodeType": "YulBlock",
													"src": "10979:87:19",
													"statements": [
														{
															"nativeSrc": "10989:29:19",
															"nodeType": "YulAssignment",
															"src": "10989:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11011:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11011:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10998:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "10998:12:19"
																},
																"nativeSrc": "10998:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10998:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10989:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10989:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11054:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11054:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "11027:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "11027:26:19"
																},
																"nativeSrc": "11027:33:19",
																"nodeType": "YulFunctionCall",
																"src": "11027:33:19"
															},
															"nativeSrc": "11027:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "11027:33:19"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "10927:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10957:6:19",
														"nodeType": "YulTypedName",
														"src": "10957:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10965:3:19",
														"nodeType": "YulTypedName",
														"src": "10965:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10973:5:19",
														"nodeType": "YulTypedName",
														"src": "10973:5:19",
														"type": ""
													}
												],
												"src": "10927:139:19"
											},
											{
												"body": {
													"nativeSrc": "11238:1033:19",
													"nodeType": "YulBlock",
													"src": "11238:1033:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11285:83:19",
																"nodeType": "YulBlock",
																"src": "11285:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11287:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11287:77:19"
																			},
																			"nativeSrc": "11287:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11287:79:19"
																		},
																		"nativeSrc": "11287:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11287:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11259:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11259:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11268:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11268:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11255:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:19"
																		},
																		"nativeSrc": "11255:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11280:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11280:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11251:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:19"
																},
																"nativeSrc": "11251:33:19",
																"nodeType": "YulFunctionCall",
																"src": "11251:33:19"
															},
															"nativeSrc": "11248:120:19",
															"nodeType": "YulIf",
															"src": "11248:120:19"
														},
														{
															"nativeSrc": "11378:117:19",
															"nodeType": "YulBlock",
															"src": "11378:117:19",
															"statements": [
																{
																	"nativeSrc": "11393:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11393:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11407:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11407:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11397:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11397:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11422:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11422:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11457:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11457:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11468:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11468:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11453:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11453:3:19"
																				},
																				"nativeSrc": "11453:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11453:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11477:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11477:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11432:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11432:20:19"
																		},
																		"nativeSrc": "11432:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11432:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11422:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11422:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11505:118:19",
															"nodeType": "YulBlock",
															"src": "11505:118:19",
															"statements": [
																{
																	"nativeSrc": "11520:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11520:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11534:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11524:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11524:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11550:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11550:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11585:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11585:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11596:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11596:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11581:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11581:3:19"
																				},
																				"nativeSrc": "11581:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11581:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11605:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11605:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11560:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11560:20:19"
																		},
																		"nativeSrc": "11560:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11560:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11550:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11550:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11633:118:19",
															"nodeType": "YulBlock",
															"src": "11633:118:19",
															"statements": [
																{
																	"nativeSrc": "11648:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11648:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11662:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11662:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11652:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11652:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11678:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11678:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11713:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11713:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11724:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11724:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11709:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11709:3:19"
																				},
																				"nativeSrc": "11709:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11709:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11733:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11733:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11688:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11688:20:19"
																		},
																		"nativeSrc": "11688:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11688:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11678:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11678:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11761:118:19",
															"nodeType": "YulBlock",
															"src": "11761:118:19",
															"statements": [
																{
																	"nativeSrc": "11776:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11776:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11790:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11790:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11780:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11780:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11806:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11806:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11841:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11841:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11852:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11852:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11837:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11837:3:19"
																				},
																				"nativeSrc": "11837:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11837:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11861:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11861:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11816:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11816:20:19"
																		},
																		"nativeSrc": "11816:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11816:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11806:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11806:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11889:117:19",
															"nodeType": "YulBlock",
															"src": "11889:117:19",
															"statements": [
																{
																	"nativeSrc": "11904:17:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11904:17:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11918:3:19",
																		"nodeType": "YulLiteral",
																		"src": "11918:3:19",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11908:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11908:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11935:61:19",
																	"nodeType": "YulAssignment",
																	"src": "11935:61:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11968:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11968:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11979:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11979:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11964:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11964:3:19"
																				},
																				"nativeSrc": "11964:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11964:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11988:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11988:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "11945:18:19",
																			"nodeType": "YulIdentifier",
																			"src": "11945:18:19"
																		},
																		"nativeSrc": "11945:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11945:51:19"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11935:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11935:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12016:119:19",
															"nodeType": "YulBlock",
															"src": "12016:119:19",
															"statements": [
																{
																	"nativeSrc": "12031:17:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12031:17:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12045:3:19",
																		"nodeType": "YulLiteral",
																		"src": "12045:3:19",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12035:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12035:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12062:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12062:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12097:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12097:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12108:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12108:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12093:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12093:3:19"
																				},
																				"nativeSrc": "12093:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12093:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12117:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12117:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "12072:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12072:20:19"
																		},
																		"nativeSrc": "12072:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12072:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "12062:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12062:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12145:119:19",
															"nodeType": "YulBlock",
															"src": "12145:119:19",
															"statements": [
																{
																	"nativeSrc": "12160:17:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12160:17:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12174:3:19",
																		"nodeType": "YulLiteral",
																		"src": "12174:3:19",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12164:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12164:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12191:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12191:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12226:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12226:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12237:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12237:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12222:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12222:3:19"
																				},
																				"nativeSrc": "12222:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12222:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12246:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12246:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "12201:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12201:20:19"
																		},
																		"nativeSrc": "12201:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12201:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "12191:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12191:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "11072:1199:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11160:9:19",
														"nodeType": "YulTypedName",
														"src": "11160:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11171:7:19",
														"nodeType": "YulTypedName",
														"src": "11171:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11183:6:19",
														"nodeType": "YulTypedName",
														"src": "11183:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11191:6:19",
														"nodeType": "YulTypedName",
														"src": "11191:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11199:6:19",
														"nodeType": "YulTypedName",
														"src": "11199:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11207:6:19",
														"nodeType": "YulTypedName",
														"src": "11207:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11215:6:19",
														"nodeType": "YulTypedName",
														"src": "11215:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11223:6:19",
														"nodeType": "YulTypedName",
														"src": "11223:6:19",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "11231:6:19",
														"nodeType": "YulTypedName",
														"src": "11231:6:19",
														"type": ""
													}
												],
												"src": "11072:1199:19"
											},
											{
												"body": {
													"nativeSrc": "12360:391:19",
													"nodeType": "YulBlock",
													"src": "12360:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "12406:83:19",
																"nodeType": "YulBlock",
																"src": "12406:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12408:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "12408:77:19"
																			},
																			"nativeSrc": "12408:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12408:79:19"
																		},
																		"nativeSrc": "12408:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12408:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12381:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12381:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12390:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12390:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12377:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12377:3:19"
																		},
																		"nativeSrc": "12377:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12377:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12402:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12402:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12373:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12373:3:19"
																},
																"nativeSrc": "12373:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12373:32:19"
															},
															"nativeSrc": "12370:119:19",
															"nodeType": "YulIf",
															"src": "12370:119:19"
														},
														{
															"nativeSrc": "12499:117:19",
															"nodeType": "YulBlock",
															"src": "12499:117:19",
															"statements": [
																{
																	"nativeSrc": "12514:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12514:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12528:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12528:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12518:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12518:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12543:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12543:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12578:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12578:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12589:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12589:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12574:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12574:3:19"
																				},
																				"nativeSrc": "12574:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12574:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12598:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12598:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12553:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12553:20:19"
																		},
																		"nativeSrc": "12553:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12553:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12543:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12543:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12626:118:19",
															"nodeType": "YulBlock",
															"src": "12626:118:19",
															"statements": [
																{
																	"nativeSrc": "12641:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12641:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12655:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12655:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12645:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12645:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12671:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12671:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12706:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12706:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12717:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12717:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12702:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12702:3:19"
																				},
																				"nativeSrc": "12702:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12702:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12726:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12726:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12681:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12681:20:19"
																		},
																		"nativeSrc": "12681:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12681:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12671:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12671:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12277:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12322:9:19",
														"nodeType": "YulTypedName",
														"src": "12322:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12333:7:19",
														"nodeType": "YulTypedName",
														"src": "12333:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12345:6:19",
														"nodeType": "YulTypedName",
														"src": "12345:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12353:6:19",
														"nodeType": "YulTypedName",
														"src": "12353:6:19",
														"type": ""
													}
												],
												"src": "12277:474:19"
											},
											{
												"body": {
													"nativeSrc": "12785:152:19",
													"nodeType": "YulBlock",
													"src": "12785:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12802:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12802:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12805:77:19",
																		"nodeType": "YulLiteral",
																		"src": "12805:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12795:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:19"
																},
																"nativeSrc": "12795:88:19",
																"nodeType": "YulFunctionCall",
																"src": "12795:88:19"
															},
															"nativeSrc": "12795:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "12795:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12899:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12899:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12902:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12902:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12892:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:19"
																},
																"nativeSrc": "12892:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12892:15:19"
															},
															"nativeSrc": "12892:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12892:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12923:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12923:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12926:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12926:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12916:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12916:6:19"
																},
																"nativeSrc": "12916:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12916:15:19"
															},
															"nativeSrc": "12916:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12916:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12757:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "12757:180:19"
											},
											{
												"body": {
													"nativeSrc": "12994:269:19",
													"nodeType": "YulBlock",
													"src": "12994:269:19",
													"statements": [
														{
															"nativeSrc": "13004:22:19",
															"nodeType": "YulAssignment",
															"src": "13004:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13018:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13018:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13024:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13024:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13014:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13014:3:19"
																},
																"nativeSrc": "13014:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13014:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13004:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:19"
																}
															]
														},
														{
															"nativeSrc": "13035:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "13035:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13065:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13065:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13071:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13071:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13061:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:19"
																},
																"nativeSrc": "13061:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13061:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13039:18:19",
																	"nodeType": "YulTypedName",
																	"src": "13039:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13112:51:19",
																"nodeType": "YulBlock",
																"src": "13112:51:19",
																"statements": [
																	{
																		"nativeSrc": "13126:27:19",
																		"nodeType": "YulAssignment",
																		"src": "13126:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13140:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "13140:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13148:4:19",
																					"nodeType": "YulLiteral",
																					"src": "13148:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13136:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "13136:3:19"
																			},
																			"nativeSrc": "13136:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13136:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13126:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13126:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13092:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "13092:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13085:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:19"
																},
																"nativeSrc": "13085:26:19",
																"nodeType": "YulFunctionCall",
																"src": "13085:26:19"
															},
															"nativeSrc": "13082:81:19",
															"nodeType": "YulIf",
															"src": "13082:81:19"
														},
														{
															"body": {
																"nativeSrc": "13215:42:19",
																"nodeType": "YulBlock",
																"src": "13215:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13229:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "13229:16:19"
																			},
																			"nativeSrc": "13229:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13229:18:19"
																		},
																		"nativeSrc": "13229:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13229:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13179:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "13179:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13202:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13202:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13210:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13210:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13199:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "13199:2:19"
																		},
																		"nativeSrc": "13199:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13199:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13176:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13176:2:19"
																},
																"nativeSrc": "13176:38:19",
																"nodeType": "YulFunctionCall",
																"src": "13176:38:19"
															},
															"nativeSrc": "13173:84:19",
															"nodeType": "YulIf",
															"src": "13173:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12943:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12978:4:19",
														"nodeType": "YulTypedName",
														"src": "12978:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12987:6:19",
														"nodeType": "YulTypedName",
														"src": "12987:6:19",
														"type": ""
													}
												],
												"src": "12943:320:19"
											},
											{
												"body": {
													"nativeSrc": "13395:206:19",
													"nodeType": "YulBlock",
													"src": "13395:206:19",
													"statements": [
														{
															"nativeSrc": "13405:26:19",
															"nodeType": "YulAssignment",
															"src": "13405:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13417:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13417:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13428:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13413:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13413:3:19"
																},
																"nativeSrc": "13413:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13413:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13405:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13405:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13485:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13485:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13498:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13498:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13509:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13509:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13494:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13494:3:19"
																		},
																		"nativeSrc": "13494:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13494:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13441:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13441:43:19"
																},
																"nativeSrc": "13441:71:19",
																"nodeType": "YulFunctionCall",
																"src": "13441:71:19"
															},
															"nativeSrc": "13441:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "13441:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13566:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13566:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13579:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13579:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13590:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13590:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13575:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13575:3:19"
																		},
																		"nativeSrc": "13575:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13575:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13522:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13522:43:19"
																},
																"nativeSrc": "13522:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13522:72:19"
															},
															"nativeSrc": "13522:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13522:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13269:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13359:9:19",
														"nodeType": "YulTypedName",
														"src": "13359:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13371:6:19",
														"nodeType": "YulTypedName",
														"src": "13371:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13379:6:19",
														"nodeType": "YulTypedName",
														"src": "13379:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13390:4:19",
														"nodeType": "YulTypedName",
														"src": "13390:4:19",
														"type": ""
													}
												],
												"src": "13269:332:19"
											},
											{
												"body": {
													"nativeSrc": "13635:152:19",
													"nodeType": "YulBlock",
													"src": "13635:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13652:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13652:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13655:77:19",
																		"nodeType": "YulLiteral",
																		"src": "13655:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13645:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13645:6:19"
																},
																"nativeSrc": "13645:88:19",
																"nodeType": "YulFunctionCall",
																"src": "13645:88:19"
															},
															"nativeSrc": "13645:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "13645:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13749:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13749:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13752:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13752:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13742:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13742:6:19"
																},
																"nativeSrc": "13742:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13742:15:19"
															},
															"nativeSrc": "13742:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13742:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13773:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13773:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13776:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13776:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13766:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13766:6:19"
																},
																"nativeSrc": "13766:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13766:15:19"
															},
															"nativeSrc": "13766:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13766:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "13607:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "13607:180:19"
											},
											{
												"body": {
													"nativeSrc": "14031:537:19",
													"nodeType": "YulBlock",
													"src": "14031:537:19",
													"statements": [
														{
															"nativeSrc": "14041:27:19",
															"nodeType": "YulAssignment",
															"src": "14041:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14053:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14053:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14064:3:19",
																		"nodeType": "YulLiteral",
																		"src": "14064:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14049:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14049:3:19"
																},
																"nativeSrc": "14049:19:19",
																"nodeType": "YulFunctionCall",
																"src": "14049:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14041:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14041:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14122:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14122:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14135:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14135:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14146:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14146:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14131:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14131:3:19"
																		},
																		"nativeSrc": "14131:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14131:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14078:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14078:43:19"
																},
																"nativeSrc": "14078:71:19",
																"nodeType": "YulFunctionCall",
																"src": "14078:71:19"
															},
															"nativeSrc": "14078:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "14078:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14203:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14203:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14216:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14216:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14227:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14227:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14212:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14212:3:19"
																		},
																		"nativeSrc": "14212:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14212:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14159:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14159:43:19"
																},
																"nativeSrc": "14159:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14159:72:19"
															},
															"nativeSrc": "14159:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14159:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14285:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14285:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14298:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14298:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14309:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14309:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14294:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14294:3:19"
																		},
																		"nativeSrc": "14294:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14294:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14241:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14241:43:19"
																},
																"nativeSrc": "14241:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14241:72:19"
															},
															"nativeSrc": "14241:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14241:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14367:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14367:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14380:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14380:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14391:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14391:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14376:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14376:3:19"
																		},
																		"nativeSrc": "14376:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14376:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14323:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14323:43:19"
																},
																"nativeSrc": "14323:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14323:72:19"
															},
															"nativeSrc": "14323:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14323:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14449:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14449:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14462:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14462:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14473:3:19",
																				"nodeType": "YulLiteral",
																				"src": "14473:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14458:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14458:3:19"
																		},
																		"nativeSrc": "14458:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14458:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14405:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14405:43:19"
																},
																"nativeSrc": "14405:73:19",
																"nodeType": "YulFunctionCall",
																"src": "14405:73:19"
															},
															"nativeSrc": "14405:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "14405:73:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "14532:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14532:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14545:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14545:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14556:3:19",
																				"nodeType": "YulLiteral",
																				"src": "14556:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14541:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14541:3:19"
																		},
																		"nativeSrc": "14541:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14541:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14488:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14488:43:19"
																},
																"nativeSrc": "14488:73:19",
																"nodeType": "YulFunctionCall",
																"src": "14488:73:19"
															},
															"nativeSrc": "14488:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "14488:73:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13793:775:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13963:9:19",
														"nodeType": "YulTypedName",
														"src": "13963:9:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13975:6:19",
														"nodeType": "YulTypedName",
														"src": "13975:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13983:6:19",
														"nodeType": "YulTypedName",
														"src": "13983:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13991:6:19",
														"nodeType": "YulTypedName",
														"src": "13991:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13999:6:19",
														"nodeType": "YulTypedName",
														"src": "13999:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14007:6:19",
														"nodeType": "YulTypedName",
														"src": "14007:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14015:6:19",
														"nodeType": "YulTypedName",
														"src": "14015:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14026:4:19",
														"nodeType": "YulTypedName",
														"src": "14026:4:19",
														"type": ""
													}
												],
												"src": "13793:775:19"
											},
											{
												"body": {
													"nativeSrc": "14700:206:19",
													"nodeType": "YulBlock",
													"src": "14700:206:19",
													"statements": [
														{
															"nativeSrc": "14710:26:19",
															"nodeType": "YulAssignment",
															"src": "14710:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14722:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14722:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14733:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14733:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14718:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14718:3:19"
																},
																"nativeSrc": "14718:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14718:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14710:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14710:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14790:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14790:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14803:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14814:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14814:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14799:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14799:3:19"
																		},
																		"nativeSrc": "14799:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14799:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14746:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14746:43:19"
																},
																"nativeSrc": "14746:71:19",
																"nodeType": "YulFunctionCall",
																"src": "14746:71:19"
															},
															"nativeSrc": "14746:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "14746:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14871:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14871:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14884:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14884:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14895:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14895:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14880:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:19"
																		},
																		"nativeSrc": "14880:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14880:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14827:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14827:43:19"
																},
																"nativeSrc": "14827:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14827:72:19"
															},
															"nativeSrc": "14827:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14827:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "14574:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14664:9:19",
														"nodeType": "YulTypedName",
														"src": "14664:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14676:6:19",
														"nodeType": "YulTypedName",
														"src": "14676:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14684:6:19",
														"nodeType": "YulTypedName",
														"src": "14684:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14695:4:19",
														"nodeType": "YulTypedName",
														"src": "14695:4:19",
														"type": ""
													}
												],
												"src": "14574:332:19"
											},
											{
												"body": {
													"nativeSrc": "15010:124:19",
													"nodeType": "YulBlock",
													"src": "15010:124:19",
													"statements": [
														{
															"nativeSrc": "15020:26:19",
															"nodeType": "YulAssignment",
															"src": "15020:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15032:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15032:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15043:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15043:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15028:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15028:3:19"
																},
																"nativeSrc": "15028:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15028:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15020:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15020:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15100:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15100:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15113:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15113:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15124:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15124:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15109:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15109:3:19"
																		},
																		"nativeSrc": "15109:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15109:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15056:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15056:43:19"
																},
																"nativeSrc": "15056:71:19",
																"nodeType": "YulFunctionCall",
																"src": "15056:71:19"
															},
															"nativeSrc": "15056:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "15056:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14912:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14982:9:19",
														"nodeType": "YulTypedName",
														"src": "14982:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14994:6:19",
														"nodeType": "YulTypedName",
														"src": "14994:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15005:4:19",
														"nodeType": "YulTypedName",
														"src": "15005:4:19",
														"type": ""
													}
												],
												"src": "14912:222:19"
											},
											{
												"body": {
													"nativeSrc": "15294:288:19",
													"nodeType": "YulBlock",
													"src": "15294:288:19",
													"statements": [
														{
															"nativeSrc": "15304:26:19",
															"nodeType": "YulAssignment",
															"src": "15304:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15316:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15316:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15327:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15327:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15312:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15312:3:19"
																},
																"nativeSrc": "15312:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15312:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15304:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15304:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15384:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15384:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15397:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15397:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15408:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15408:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15393:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15393:3:19"
																		},
																		"nativeSrc": "15393:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15393:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15340:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15340:43:19"
																},
																"nativeSrc": "15340:71:19",
																"nodeType": "YulFunctionCall",
																"src": "15340:71:19"
															},
															"nativeSrc": "15340:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "15340:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15465:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15465:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15478:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15478:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15489:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15489:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15474:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15474:3:19"
																		},
																		"nativeSrc": "15474:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15474:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15421:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15421:43:19"
																},
																"nativeSrc": "15421:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15421:72:19"
															},
															"nativeSrc": "15421:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15421:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15547:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15547:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15560:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15560:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15571:2:19",
																				"nodeType": "YulLiteral",
																				"src": "15571:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15556:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15556:3:19"
																		},
																		"nativeSrc": "15556:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15556:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15503:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "15503:43:19"
																},
																"nativeSrc": "15503:72:19",
																"nodeType": "YulFunctionCall",
																"src": "15503:72:19"
															},
															"nativeSrc": "15503:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "15503:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15140:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15250:9:19",
														"nodeType": "YulTypedName",
														"src": "15250:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15262:6:19",
														"nodeType": "YulTypedName",
														"src": "15262:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15270:6:19",
														"nodeType": "YulTypedName",
														"src": "15270:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15278:6:19",
														"nodeType": "YulTypedName",
														"src": "15278:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15289:4:19",
														"nodeType": "YulTypedName",
														"src": "15289:4:19",
														"type": ""
													}
												],
												"src": "15140:442:19"
											},
											{
												"body": {
													"nativeSrc": "15646:40:19",
													"nodeType": "YulBlock",
													"src": "15646:40:19",
													"statements": [
														{
															"nativeSrc": "15657:22:19",
															"nodeType": "YulAssignment",
															"src": "15657:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15673:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15673:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15667:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15667:5:19"
																},
																"nativeSrc": "15667:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15667:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15657:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15657:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "15588:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15629:5:19",
														"nodeType": "YulTypedName",
														"src": "15629:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15639:6:19",
														"nodeType": "YulTypedName",
														"src": "15639:6:19",
														"type": ""
													}
												],
												"src": "15588:98:19"
											},
											{
												"body": {
													"nativeSrc": "15787:73:19",
													"nodeType": "YulBlock",
													"src": "15787:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15804:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15804:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15809:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15809:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15797:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15797:6:19"
																},
																"nativeSrc": "15797:19:19",
																"nodeType": "YulFunctionCall",
																"src": "15797:19:19"
															},
															"nativeSrc": "15797:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "15797:19:19"
														},
														{
															"nativeSrc": "15825:29:19",
															"nodeType": "YulAssignment",
															"src": "15825:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15844:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15844:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15849:4:19",
																		"nodeType": "YulLiteral",
																		"src": "15849:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15840:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15840:3:19"
																},
																"nativeSrc": "15840:14:19",
																"nodeType": "YulFunctionCall",
																"src": "15840:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15825:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "15825:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15692:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15759:3:19",
														"nodeType": "YulTypedName",
														"src": "15759:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15764:6:19",
														"nodeType": "YulTypedName",
														"src": "15764:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15775:11:19",
														"nodeType": "YulTypedName",
														"src": "15775:11:19",
														"type": ""
													}
												],
												"src": "15692:168:19"
											},
											{
												"body": {
													"nativeSrc": "15956:283:19",
													"nodeType": "YulBlock",
													"src": "15956:283:19",
													"statements": [
														{
															"nativeSrc": "15966:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "15966:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16012:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16012:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "15980:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "15980:31:19"
																},
																"nativeSrc": "15980:38:19",
																"nodeType": "YulFunctionCall",
																"src": "15980:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15970:6:19",
																	"nodeType": "YulTypedName",
																	"src": "15970:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16027:77:19",
															"nodeType": "YulAssignment",
															"src": "16027:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16092:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16092:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16097:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16097:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16034:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "16034:57:19"
																},
																"nativeSrc": "16034:70:19",
																"nodeType": "YulFunctionCall",
																"src": "16034:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16027:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16027:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16152:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "16152:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16159:4:19",
																				"nodeType": "YulLiteral",
																				"src": "16159:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16148:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16148:3:19"
																		},
																		"nativeSrc": "16148:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16148:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16166:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16166:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16171:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16171:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16113:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "16113:34:19"
																},
																"nativeSrc": "16113:65:19",
																"nodeType": "YulFunctionCall",
																"src": "16113:65:19"
															},
															"nativeSrc": "16113:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "16113:65:19"
														},
														{
															"nativeSrc": "16187:46:19",
															"nodeType": "YulAssignment",
															"src": "16187:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16198:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16198:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16225:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16225:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16203:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "16203:21:19"
																		},
																		"nativeSrc": "16203:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16203:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16194:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16194:3:19"
																},
																"nativeSrc": "16194:39:19",
																"nodeType": "YulFunctionCall",
																"src": "16194:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16187:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16187:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15866:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15937:5:19",
														"nodeType": "YulTypedName",
														"src": "15937:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15944:3:19",
														"nodeType": "YulTypedName",
														"src": "15944:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15952:3:19",
														"nodeType": "YulTypedName",
														"src": "15952:3:19",
														"type": ""
													}
												],
												"src": "15866:373:19"
											},
											{
												"body": {
													"nativeSrc": "16445:440:19",
													"nodeType": "YulBlock",
													"src": "16445:440:19",
													"statements": [
														{
															"nativeSrc": "16455:27:19",
															"nodeType": "YulAssignment",
															"src": "16455:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16467:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16467:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16478:3:19",
																		"nodeType": "YulLiteral",
																		"src": "16478:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16463:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16463:3:19"
																},
																"nativeSrc": "16463:19:19",
																"nodeType": "YulFunctionCall",
																"src": "16463:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16455:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16455:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16536:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16536:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16549:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16549:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16560:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16560:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16545:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16545:3:19"
																		},
																		"nativeSrc": "16545:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16545:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16492:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16492:43:19"
																},
																"nativeSrc": "16492:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16492:71:19"
															},
															"nativeSrc": "16492:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16492:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16617:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16617:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16630:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16630:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16641:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16641:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16626:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16626:3:19"
																		},
																		"nativeSrc": "16626:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16626:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16573:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16573:43:19"
																},
																"nativeSrc": "16573:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16573:72:19"
															},
															"nativeSrc": "16573:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16573:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16699:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16699:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16712:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16712:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16723:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16723:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16708:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16708:3:19"
																		},
																		"nativeSrc": "16708:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16708:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16655:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16655:43:19"
																},
																"nativeSrc": "16655:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16655:72:19"
															},
															"nativeSrc": "16655:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16655:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16748:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16748:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16759:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16759:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16744:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16744:3:19"
																		},
																		"nativeSrc": "16744:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16744:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16768:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16768:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16774:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16774:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16764:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16764:3:19"
																		},
																		"nativeSrc": "16764:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16764:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16737:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16737:6:19"
																},
																"nativeSrc": "16737:48:19",
																"nodeType": "YulFunctionCall",
																"src": "16737:48:19"
															},
															"nativeSrc": "16737:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "16737:48:19"
														},
														{
															"nativeSrc": "16794:84:19",
															"nodeType": "YulAssignment",
															"src": "16794:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16864:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16864:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16873:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16873:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16802:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "16802:61:19"
																},
																"nativeSrc": "16802:76:19",
																"nodeType": "YulFunctionCall",
																"src": "16802:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16794:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16794:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "16245:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16393:9:19",
														"nodeType": "YulTypedName",
														"src": "16393:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16405:6:19",
														"nodeType": "YulTypedName",
														"src": "16405:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16413:6:19",
														"nodeType": "YulTypedName",
														"src": "16413:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16421:6:19",
														"nodeType": "YulTypedName",
														"src": "16421:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16429:6:19",
														"nodeType": "YulTypedName",
														"src": "16429:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16440:4:19",
														"nodeType": "YulTypedName",
														"src": "16440:4:19",
														"type": ""
													}
												],
												"src": "16245:640:19"
											},
											{
												"body": {
													"nativeSrc": "16935:105:19",
													"nodeType": "YulBlock",
													"src": "16935:105:19",
													"statements": [
														{
															"nativeSrc": "16945:89:19",
															"nodeType": "YulAssignment",
															"src": "16945:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16960:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16960:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16967:66:19",
																		"nodeType": "YulLiteral",
																		"src": "16967:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16956:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16956:3:19"
																},
																"nativeSrc": "16956:78:19",
																"nodeType": "YulFunctionCall",
																"src": "16956:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16945:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "16945:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "16891:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16917:5:19",
														"nodeType": "YulTypedName",
														"src": "16917:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16927:7:19",
														"nodeType": "YulTypedName",
														"src": "16927:7:19",
														"type": ""
													}
												],
												"src": "16891:149:19"
											},
											{
												"body": {
													"nativeSrc": "17088:78:19",
													"nodeType": "YulBlock",
													"src": "17088:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "17144:16:19",
																"nodeType": "YulBlock",
																"src": "17144:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17153:1:19",
																					"nodeType": "YulLiteral",
																					"src": "17153:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17156:1:19",
																					"nodeType": "YulLiteral",
																					"src": "17156:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17146:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "17146:6:19"
																			},
																			"nativeSrc": "17146:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17146:12:19"
																		},
																		"nativeSrc": "17146:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "17146:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17111:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "17111:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17135:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "17135:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "17118:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "17118:16:19"
																				},
																				"nativeSrc": "17118:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17118:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17108:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "17108:2:19"
																		},
																		"nativeSrc": "17108:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17108:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17101:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17101:6:19"
																},
																"nativeSrc": "17101:42:19",
																"nodeType": "YulFunctionCall",
																"src": "17101:42:19"
															},
															"nativeSrc": "17098:62:19",
															"nodeType": "YulIf",
															"src": "17098:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "17046:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17081:5:19",
														"nodeType": "YulTypedName",
														"src": "17081:5:19",
														"type": ""
													}
												],
												"src": "17046:120:19"
											},
											{
												"body": {
													"nativeSrc": "17234:79:19",
													"nodeType": "YulBlock",
													"src": "17234:79:19",
													"statements": [
														{
															"nativeSrc": "17244:22:19",
															"nodeType": "YulAssignment",
															"src": "17244:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17259:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17259:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17253:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17253:5:19"
																},
																"nativeSrc": "17253:13:19",
																"nodeType": "YulFunctionCall",
																"src": "17253:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17244:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17244:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17301:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "17301:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "17275:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "17275:25:19"
																},
																"nativeSrc": "17275:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17275:32:19"
															},
															"nativeSrc": "17275:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "17275:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "17172:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17212:6:19",
														"nodeType": "YulTypedName",
														"src": "17212:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17220:3:19",
														"nodeType": "YulTypedName",
														"src": "17220:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17228:5:19",
														"nodeType": "YulTypedName",
														"src": "17228:5:19",
														"type": ""
													}
												],
												"src": "17172:141:19"
											},
											{
												"body": {
													"nativeSrc": "17395:273:19",
													"nodeType": "YulBlock",
													"src": "17395:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "17441:83:19",
																"nodeType": "YulBlock",
																"src": "17441:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17443:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "17443:77:19"
																			},
																			"nativeSrc": "17443:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17443:79:19"
																		},
																		"nativeSrc": "17443:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "17443:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17416:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17416:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17425:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17425:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17412:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17412:3:19"
																		},
																		"nativeSrc": "17412:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17412:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17437:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17437:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17408:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17408:3:19"
																},
																"nativeSrc": "17408:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17408:32:19"
															},
															"nativeSrc": "17405:119:19",
															"nodeType": "YulIf",
															"src": "17405:119:19"
														},
														{
															"nativeSrc": "17534:127:19",
															"nodeType": "YulBlock",
															"src": "17534:127:19",
															"statements": [
																{
																	"nativeSrc": "17549:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17549:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17563:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17563:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17553:6:19",
																			"nodeType": "YulTypedName",
																			"src": "17553:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17578:73:19",
																	"nodeType": "YulAssignment",
																	"src": "17578:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17623:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "17623:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17634:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17634:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17619:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "17619:3:19"
																				},
																				"nativeSrc": "17619:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17619:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17643:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17643:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "17588:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "17588:30:19"
																		},
																		"nativeSrc": "17588:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17588:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17578:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "17578:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "17319:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17365:9:19",
														"nodeType": "YulTypedName",
														"src": "17365:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17376:7:19",
														"nodeType": "YulTypedName",
														"src": "17376:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17388:6:19",
														"nodeType": "YulTypedName",
														"src": "17388:6:19",
														"type": ""
													}
												],
												"src": "17319:349:19"
											},
											{
												"body": {
													"nativeSrc": "17702:152:19",
													"nodeType": "YulBlock",
													"src": "17702:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17719:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17719:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17722:77:19",
																		"nodeType": "YulLiteral",
																		"src": "17722:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17712:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17712:6:19"
																},
																"nativeSrc": "17712:88:19",
																"nodeType": "YulFunctionCall",
																"src": "17712:88:19"
															},
															"nativeSrc": "17712:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "17712:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17816:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17816:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17819:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17819:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17809:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17809:6:19"
																},
																"nativeSrc": "17809:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17809:15:19"
															},
															"nativeSrc": "17809:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17809:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17840:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17840:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17843:4:19",
																		"nodeType": "YulLiteral",
																		"src": "17843:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17833:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17833:6:19"
																},
																"nativeSrc": "17833:15:19",
																"nodeType": "YulFunctionCall",
																"src": "17833:15:19"
															},
															"nativeSrc": "17833:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "17833:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17674:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "17674:180:19"
											},
											{
												"body": {
													"nativeSrc": "17904:147:19",
													"nodeType": "YulBlock",
													"src": "17904:147:19",
													"statements": [
														{
															"nativeSrc": "17914:25:19",
															"nodeType": "YulAssignment",
															"src": "17914:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17937:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "17937:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17919:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "17919:17:19"
																},
																"nativeSrc": "17919:20:19",
																"nodeType": "YulFunctionCall",
																"src": "17919:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17914:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "17914:1:19"
																}
															]
														},
														{
															"nativeSrc": "17948:25:19",
															"nodeType": "YulAssignment",
															"src": "17948:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17971:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "17971:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17953:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "17953:17:19"
																},
																"nativeSrc": "17953:20:19",
																"nodeType": "YulFunctionCall",
																"src": "17953:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17948:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "17948:1:19"
																}
															]
														},
														{
															"nativeSrc": "17982:16:19",
															"nodeType": "YulAssignment",
															"src": "17982:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17993:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "17993:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17996:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "17996:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17989:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17989:3:19"
																},
																"nativeSrc": "17989:9:19",
																"nodeType": "YulFunctionCall",
																"src": "17989:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17982:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17982:3:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18022:22:19",
																"nodeType": "YulBlock",
																"src": "18022:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18024:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "18024:16:19"
																			},
																			"nativeSrc": "18024:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18024:18:19"
																		},
																		"nativeSrc": "18024:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18024:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18014:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "18014:1:19"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18017:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18017:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18011:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "18011:2:19"
																},
																"nativeSrc": "18011:10:19",
																"nodeType": "YulFunctionCall",
																"src": "18011:10:19"
															},
															"nativeSrc": "18008:36:19",
															"nodeType": "YulIf",
															"src": "18008:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17860:191:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17891:1:19",
														"nodeType": "YulTypedName",
														"src": "17891:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17894:1:19",
														"nodeType": "YulTypedName",
														"src": "17894:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17900:3:19",
														"nodeType": "YulTypedName",
														"src": "17900:3:19",
														"type": ""
													}
												],
												"src": "17860:191:19"
											},
											{
												"body": {
													"nativeSrc": "18267:454:19",
													"nodeType": "YulBlock",
													"src": "18267:454:19",
													"statements": [
														{
															"nativeSrc": "18277:27:19",
															"nodeType": "YulAssignment",
															"src": "18277:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18289:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18289:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18300:3:19",
																		"nodeType": "YulLiteral",
																		"src": "18300:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18285:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18285:3:19"
																},
																"nativeSrc": "18285:19:19",
																"nodeType": "YulFunctionCall",
																"src": "18285:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18277:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18277:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18358:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18358:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18371:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18371:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18382:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18382:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18367:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18367:3:19"
																		},
																		"nativeSrc": "18367:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18367:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18314:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18314:43:19"
																},
																"nativeSrc": "18314:71:19",
																"nodeType": "YulFunctionCall",
																"src": "18314:71:19"
															},
															"nativeSrc": "18314:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "18314:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18439:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18439:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18452:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18452:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18463:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18463:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18448:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18448:3:19"
																		},
																		"nativeSrc": "18448:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18448:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18395:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18395:43:19"
																},
																"nativeSrc": "18395:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18395:72:19"
															},
															"nativeSrc": "18395:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18395:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18521:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18521:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18534:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18534:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18545:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18545:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18530:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18530:3:19"
																		},
																		"nativeSrc": "18530:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18530:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18477:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18477:43:19"
																},
																"nativeSrc": "18477:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18477:72:19"
															},
															"nativeSrc": "18477:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18477:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18603:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18603:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18616:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18616:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18627:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18627:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18612:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18612:3:19"
																		},
																		"nativeSrc": "18612:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18612:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18559:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18559:43:19"
																},
																"nativeSrc": "18559:72:19",
																"nodeType": "YulFunctionCall",
																"src": "18559:72:19"
															},
															"nativeSrc": "18559:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "18559:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "18685:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18685:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18698:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18698:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18709:3:19",
																				"nodeType": "YulLiteral",
																				"src": "18709:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18694:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18694:3:19"
																		},
																		"nativeSrc": "18694:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18694:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18641:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18641:43:19"
																},
																"nativeSrc": "18641:73:19",
																"nodeType": "YulFunctionCall",
																"src": "18641:73:19"
															},
															"nativeSrc": "18641:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "18641:73:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "18057:664:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18207:9:19",
														"nodeType": "YulTypedName",
														"src": "18207:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18219:6:19",
														"nodeType": "YulTypedName",
														"src": "18219:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18227:6:19",
														"nodeType": "YulTypedName",
														"src": "18227:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18235:6:19",
														"nodeType": "YulTypedName",
														"src": "18235:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18243:6:19",
														"nodeType": "YulTypedName",
														"src": "18243:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18251:6:19",
														"nodeType": "YulTypedName",
														"src": "18251:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18262:4:19",
														"nodeType": "YulTypedName",
														"src": "18262:4:19",
														"type": ""
													}
												],
												"src": "18057:664:19"
											},
											{
												"body": {
													"nativeSrc": "18905:367:19",
													"nodeType": "YulBlock",
													"src": "18905:367:19",
													"statements": [
														{
															"nativeSrc": "18915:27:19",
															"nodeType": "YulAssignment",
															"src": "18915:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18927:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18927:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18938:3:19",
																		"nodeType": "YulLiteral",
																		"src": "18938:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18923:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18923:3:19"
																},
																"nativeSrc": "18923:19:19",
																"nodeType": "YulFunctionCall",
																"src": "18923:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18915:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18915:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18996:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18996:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19009:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19009:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19020:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19020:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19005:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19005:3:19"
																		},
																		"nativeSrc": "19005:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19005:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18952:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "18952:43:19"
																},
																"nativeSrc": "18952:71:19",
																"nodeType": "YulFunctionCall",
																"src": "18952:71:19"
															},
															"nativeSrc": "18952:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "18952:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19073:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19073:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19086:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19086:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19097:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19097:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19082:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19082:3:19"
																		},
																		"nativeSrc": "19082:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19082:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "19033:39:19",
																	"nodeType": "YulIdentifier",
																	"src": "19033:39:19"
																},
																"nativeSrc": "19033:68:19",
																"nodeType": "YulFunctionCall",
																"src": "19033:68:19"
															},
															"nativeSrc": "19033:68:19",
															"nodeType": "YulExpressionStatement",
															"src": "19033:68:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19155:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19155:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19168:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19168:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19179:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19179:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19164:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19164:3:19"
																		},
																		"nativeSrc": "19164:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19164:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19111:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19111:43:19"
																},
																"nativeSrc": "19111:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19111:72:19"
															},
															"nativeSrc": "19111:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19111:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19237:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "19237:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19250:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19250:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19261:2:19",
																				"nodeType": "YulLiteral",
																				"src": "19261:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19246:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19246:3:19"
																		},
																		"nativeSrc": "19246:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19246:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19193:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19193:43:19"
																},
																"nativeSrc": "19193:72:19",
																"nodeType": "YulFunctionCall",
																"src": "19193:72:19"
															},
															"nativeSrc": "19193:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "19193:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "18727:545:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18853:9:19",
														"nodeType": "YulTypedName",
														"src": "18853:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18865:6:19",
														"nodeType": "YulTypedName",
														"src": "18865:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18873:6:19",
														"nodeType": "YulTypedName",
														"src": "18873:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18881:6:19",
														"nodeType": "YulTypedName",
														"src": "18881:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18889:6:19",
														"nodeType": "YulTypedName",
														"src": "18889:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18900:4:19",
														"nodeType": "YulTypedName",
														"src": "18900:4:19",
														"type": ""
													}
												],
												"src": "18727:545:19"
											},
											{
												"body": {
													"nativeSrc": "19306:152:19",
													"nodeType": "YulBlock",
													"src": "19306:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19323:1:19",
																		"nodeType": "YulLiteral",
																		"src": "19323:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19326:77:19",
																		"nodeType": "YulLiteral",
																		"src": "19326:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19316:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19316:6:19"
																},
																"nativeSrc": "19316:88:19",
																"nodeType": "YulFunctionCall",
																"src": "19316:88:19"
															},
															"nativeSrc": "19316:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "19316:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19420:1:19",
																		"nodeType": "YulLiteral",
																		"src": "19420:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19423:4:19",
																		"nodeType": "YulLiteral",
																		"src": "19423:4:19",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19413:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19413:6:19"
																},
																"nativeSrc": "19413:15:19",
																"nodeType": "YulFunctionCall",
																"src": "19413:15:19"
															},
															"nativeSrc": "19413:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "19413:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19444:1:19",
																		"nodeType": "YulLiteral",
																		"src": "19444:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19447:4:19",
																		"nodeType": "YulLiteral",
																		"src": "19447:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19437:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19437:6:19"
																},
																"nativeSrc": "19437:15:19",
																"nodeType": "YulFunctionCall",
																"src": "19437:15:19"
															},
															"nativeSrc": "19437:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "19437:15:19"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19278:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "19278:180:19"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2037": [
									{
										"length": 32,
										"start": 2806
									}
								],
								"2039": [
									{
										"length": 32,
										"start": 2765
									}
								],
								"2041": [
									{
										"length": 32,
										"start": 2679
									}
								],
								"2043": [
									{
										"length": 32,
										"start": 4654
									}
								],
								"2045": [
									{
										"length": 32,
										"start": 4687
									}
								],
								"2048": [
									{
										"length": 32,
										"start": 3355
									}
								],
								"2051": [
									{
										"length": 32,
										"start": 3414
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80634000aea01161009557806395d89b411161006457806395d89b411461028d578063a9059cbb146102ab578063d505accf146102db578063dd62ed3e146102f7576100f3565b80634000aea0146101d957806370a08231146102095780637ecebe001461023957806384b0196e14610269576100f3565b806318160ddd116100d157806318160ddd1461014f57806323b872dd1461016d578063313ce5671461019d5780633644e515146101bb576100f3565b806306fdde03146100f7578063095ea7b3146101155780631249c58b14610145575b5f80fd5b6100ff610327565b60405161010c9190611705565b60405180910390f35b61012f600480360381019061012a91906117ba565b6103b7565b60405161013c9190611812565b60405180910390f35b61014d6103d9565b005b6101576103e9565b604051610164919061183a565b60405180910390f35b61018760048036038101906101829190611853565b6103f2565b6040516101949190611812565b60405180910390f35b6101a5610420565b6040516101b291906118be565b60405180910390f35b6101c3610428565b6040516101d091906118ef565b60405180910390f35b6101f360048036038101906101ee9190611969565b610436565b6040516102009190611812565b60405180910390f35b610223600480360381019061021e91906119da565b6104e6565b604051610230919061183a565b60405180910390f35b610253600480360381019061024e91906119da565b61052b565b604051610260919061183a565b60405180910390f35b61027161053c565b6040516102849796959493929190611b05565b60405180910390f35b6102956105e1565b6040516102a29190611705565b60405180910390f35b6102c560048036038101906102c091906117ba565b610671565b6040516102d29190611812565b60405180910390f35b6102f560048036038101906102f09190611bdb565b610693565b005b610311600480360381019061030c9190611c78565b6107d8565b60405161031e919061183a565b60405180910390f35b60606003805461033690611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461036290611ce3565b80156103ad5780601f10610384576101008083540402835291602001916103ad565b820191905f5260205f20905b81548152906001019060200180831161039057829003601f168201915b5050505050905090565b5f806103c161085a565b90506103ce818585610861565b600191505092915050565b6103e733633b9aca00610873565b565b5f600254905090565b5f806103fc61085a565b90506104098582856108f2565b610414858585610984565b60019150509392505050565b5f6012905090565b5f610431610a74565b905090565b5f6104418585610671565b6104845784846040517f231b03ae00000000000000000000000000000000000000000000000000000000815260040161047b929190611d13565b60405180910390fd5b6104da61048f61085a565b868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610b2a565b60019050949350505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61053582610ccc565b9050919050565b5f6060805f805f606061054d610d12565b610555610d4d565b46305f801b5f67ffffffffffffffff81111561057457610573611d3a565b5b6040519080825280602002602001820160405280156105a25781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546105f090611ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461061c90611ce3565b80156106675780601f1061063e57610100808354040283529160200191610667565b820191905f5260205f20905b81548152906001019060200180831161064a57829003601f168201915b5050505050905090565b5f8061067b61085a565b9050610688818585610984565b600191505092915050565b834211156106d857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016106cf919061183a565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107068c610d88565b8960405160200161071c96959493929190611d67565b6040516020818303038152906040528051906020012090505f61073e82610ddb565b90505f61074d82878787610df4565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107c157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016107b8929190611dc6565b60405180910390fd5b6107cc8a8a8a610861565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61086e8383836001610e22565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e3575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108da9190611ded565b60405180910390fd5b6108ee5f8383610ff1565b5050565b5f6108fd84846107d8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461097e578181101561096f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161096693929190611e06565b60405180910390fd5b61097d84848484035f610e22565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109eb9190611ded565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a64575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a5b9190611ded565b60405180910390fd5b610a6f838383610ff1565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610aef57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b1c577f00000000000000000000000000000000000000000000000000000000000000009050610b27565b610b2461120a565b90505b90565b5f8373ffffffffffffffffffffffffffffffffffffffff163b0315610cc6578273ffffffffffffffffffffffffffffffffffffffff166388a7ca5c610b6d61085a565b8685856040518563ffffffff1660e01b8152600401610b8f9493929190611e8d565b6020604051808303815f875af1925050508015610bca57506040513d601f19601f82011682018060405250810190610bc79190611f2c565b60015b610c3b573d805f8114610bf8576040519150601f19603f3d011682016040523d82523d5f602084013e610bfd565b606091505b50836040517f373c5c78000000000000000000000000000000000000000000000000000000008152600401610c329190611ded565b60405180910390fd5b6388a7ca5c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610cc457836040517f373c5c78000000000000000000000000000000000000000000000000000000008152600401610cbb9190611ded565b60405180910390fd5b505b50505050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610d4860057f000000000000000000000000000000000000000000000000000000000000000061129f90919063ffffffff16565b905090565b6060610d8360067f000000000000000000000000000000000000000000000000000000000000000061129f90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610ded610de7610a74565b8361134c565b9050919050565b5f805f80610e048888888861138c565b925092509250610e148282611473565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e92575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e899190611ded565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f02575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef99190611ded565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610feb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fe2919061183a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611041578060025f8282546110359190611f84565b9250508190555061110f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110ca578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110c193929190611e06565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611156578060025f82825403925050819055506111a0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111fd919061183a565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611284959493929190611fb7565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146112bb576112b4836115d5565b9050611346565b8180546112c790611ce3565b80601f01602080910402602001604051908101604052809291908181526020018280546112f390611ce3565b801561133e5780601f106113155761010080835404028352916020019161133e565b820191905f5260205f20905b81548152906001019060200180831161132157829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156113c8575f600385925092509250611469565b5f6001888888886040515f81526020016040526040516113eb9493929190612008565b6020604051602081039080840390855afa15801561140b573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361145c575f60015f801b93509350935050611469565b805f805f1b935093509350505b9450945094915050565b5f60038111156114865761148561204b565b5b8260038111156114995761149861204b565b5b03156115d157600160038111156114b3576114b261204b565b5b8260038111156114c6576114c561204b565b5b036114fd576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156115115761151061204b565b5b8260038111156115245761152361204b565b5b0361156857805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161155f919061183a565b60405180910390fd5b60038081111561157b5761157a61204b565b5b82600381111561158e5761158d61204b565b5b036115d057806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115c791906118ef565b60405180910390fd5b5b5050565b60605f6115e183611647565b90505f602067ffffffffffffffff8111156115ff576115fe611d3a565b5b6040519080825280601f01601f1916602001820160405280156116315781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f81111561168c576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116d782611695565b6116e1818561169f565b93506116f18185602086016116af565b6116fa816116bd565b840191505092915050565b5f6020820190508181035f83015261171d81846116cd565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117568261172d565b9050919050565b6117668161174c565b8114611770575f80fd5b50565b5f813590506117818161175d565b92915050565b5f819050919050565b61179981611787565b81146117a3575f80fd5b50565b5f813590506117b481611790565b92915050565b5f80604083850312156117d0576117cf611725565b5b5f6117dd85828601611773565b92505060206117ee858286016117a6565b9150509250929050565b5f8115159050919050565b61180c816117f8565b82525050565b5f6020820190506118255f830184611803565b92915050565b61183481611787565b82525050565b5f60208201905061184d5f83018461182b565b92915050565b5f805f6060848603121561186a57611869611725565b5b5f61187786828701611773565b935050602061188886828701611773565b9250506040611899868287016117a6565b9150509250925092565b5f60ff82169050919050565b6118b8816118a3565b82525050565b5f6020820190506118d15f8301846118af565b92915050565b5f819050919050565b6118e9816118d7565b82525050565b5f6020820190506119025f8301846118e0565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261192957611928611908565b5b8235905067ffffffffffffffff8111156119465761194561190c565b5b60208301915083600182028301111561196257611961611910565b5b9250929050565b5f805f806060858703121561198157611980611725565b5b5f61198e87828801611773565b945050602061199f878288016117a6565b935050604085013567ffffffffffffffff8111156119c0576119bf611729565b5b6119cc87828801611914565b925092505092959194509250565b5f602082840312156119ef576119ee611725565b5b5f6119fc84828501611773565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611a3981611a05565b82525050565b611a488161174c565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611a8081611787565b82525050565b5f611a918383611a77565b60208301905092915050565b5f602082019050919050565b5f611ab382611a4e565b611abd8185611a58565b9350611ac883611a68565b805f5b83811015611af8578151611adf8882611a86565b9750611aea83611a9d565b925050600181019050611acb565b5085935050505092915050565b5f60e082019050611b185f83018a611a30565b8181036020830152611b2a81896116cd565b90508181036040830152611b3e81886116cd565b9050611b4d606083018761182b565b611b5a6080830186611a3f565b611b6760a08301856118e0565b81810360c0830152611b798184611aa9565b905098975050505050505050565b611b90816118a3565b8114611b9a575f80fd5b50565b5f81359050611bab81611b87565b92915050565b611bba816118d7565b8114611bc4575f80fd5b50565b5f81359050611bd581611bb1565b92915050565b5f805f805f805f60e0888a031215611bf657611bf5611725565b5b5f611c038a828b01611773565b9750506020611c148a828b01611773565b9650506040611c258a828b016117a6565b9550506060611c368a828b016117a6565b9450506080611c478a828b01611b9d565b93505060a0611c588a828b01611bc7565b92505060c0611c698a828b01611bc7565b91505092959891949750929550565b5f8060408385031215611c8e57611c8d611725565b5b5f611c9b85828601611773565b9250506020611cac85828601611773565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611cfa57607f821691505b602082108103611d0d57611d0c611cb6565b5b50919050565b5f604082019050611d265f830185611a3f565b611d33602083018461182b565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611d7a5f8301896118e0565b611d876020830188611a3f565b611d946040830187611a3f565b611da1606083018661182b565b611dae608083018561182b565b611dbb60a083018461182b565b979650505050505050565b5f604082019050611dd95f830185611a3f565b611de66020830184611a3f565b9392505050565b5f602082019050611e005f830184611a3f565b92915050565b5f606082019050611e195f830186611a3f565b611e26602083018561182b565b611e33604083018461182b565b949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f611e5f82611e3b565b611e698185611e45565b9350611e798185602086016116af565b611e82816116bd565b840191505092915050565b5f608082019050611ea05f830187611a3f565b611ead6020830186611a3f565b611eba604083018561182b565b8181036060830152611ecc8184611e55565b905095945050505050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f0b81611ed7565b8114611f15575f80fd5b50565b5f81519050611f2681611f02565b92915050565b5f60208284031215611f4157611f40611725565b5b5f611f4e84828501611f18565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f8e82611787565b9150611f9983611787565b9250828201905080821115611fb157611fb0611f57565b5b92915050565b5f60a082019050611fca5f8301886118e0565b611fd760208301876118e0565b611fe460408301866118e0565b611ff1606083018561182b565b611ffe6080830184611a3f565b9695505050505050565b5f60808201905061201b5f8301876118e0565b61202860208301866118af565b61203560408301856118e0565b61204260608301846118e0565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea26469706673582212209ddafa135386abba5ba78338fda4996acca7096094d4cf3202ceb960f9a8c79b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4000AEA0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x269 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1BB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x336 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x362 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x384 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x390 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C1 PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E7 CALLER PUSH4 0x3B9ACA00 PUSH2 0x873 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FC PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x409 DUP6 DUP3 DUP6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x414 DUP6 DUP6 DUP6 PUSH2 0x984 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x431 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x441 DUP6 DUP6 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x484 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x231B03AE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP3 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DA PUSH2 0x48F PUSH2 0x85A JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x535 DUP3 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x54D PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x555 PUSH2 0xD4D JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5F0 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x667 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x63E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x667 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x67B PUSH2 0x85A JUMP JUMPDEST SWAP1 POP PUSH2 0x688 DUP2 DUP6 DUP6 PUSH2 0x984 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6D8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x706 DUP13 PUSH2 0xD88 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x73E DUP3 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74D DUP3 DUP8 DUP8 DUP8 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CC DUP11 DUP11 DUP11 PUSH2 0x861 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x86E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE PUSH0 DUP4 DUP4 PUSH2 0xFF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP5 DUP5 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x97E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE22 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH2 0xFF1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAEF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB1C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0x120A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB ISZERO PUSH2 0xCC6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88A7CA5C PUSH2 0xB6D PUSH2 0x85A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC3B JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 PUSH1 0x40 MLOAD PUSH32 0x373C5C7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x88A7CA5C PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xCC4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x373C5C7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD48 PUSH1 0x5 PUSH32 0x0 PUSH2 0x129F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD83 PUSH1 0x6 PUSH32 0x0 PUSH2 0x129F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDED PUSH2 0xDE7 PUSH2 0xA74 JUMP JUMPDEST DUP4 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xE04 DUP9 DUP9 DUP9 DUP9 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE14 DUP3 DUP3 PUSH2 0x1473 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF02 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFEB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1041 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1035 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x110F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10CA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1156 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FD SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1284 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12BB JUMPI PUSH2 0x12B4 DUP4 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1346 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12F3 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x133E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1315 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x133E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C8 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1469 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13EB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145C JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1523 PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1568 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155F SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x157B JUMPI PUSH2 0x157A PUSH2 0x204B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x204B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15E1 DUP4 PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x168C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x16E1 DUP2 DUP6 PUSH2 0x169F JUMP JUMPDEST SWAP4 POP PUSH2 0x16F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x171D DUP2 DUP5 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1756 DUP3 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 EQ PUSH2 0x1770 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1799 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP2 EQ PUSH2 0x17A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B4 DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17DD DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17EE DUP6 DUP3 DUP7 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1825 PUSH0 DUP4 ADD DUP5 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1877 DUP7 DUP3 DUP8 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1888 DUP7 DUP3 DUP8 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1899 DUP7 DUP3 DUP8 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B8 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x18AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E9 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1902 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1929 JUMPI PUSH2 0x1928 PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1946 JUMPI PUSH2 0x1945 PUSH2 0x190C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198E DUP8 DUP3 DUP9 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x199F DUP8 DUP3 DUP9 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH2 0x19CC DUP8 DUP3 DUP9 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FC DUP5 DUP3 DUP6 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A80 DUP2 PUSH2 0x1787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A91 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1ABD DUP2 DUP6 PUSH2 0x1A58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC8 DUP4 PUSH2 0x1A68 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF8 JUMPI DUP2 MLOAD PUSH2 0x1ADF DUP9 DUP3 PUSH2 0x1A86 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AEA DUP4 PUSH2 0x1A9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ACB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH0 DUP4 ADD DUP11 PUSH2 0x1A30 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B2A DUP2 DUP10 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B3E DUP2 DUP9 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1B4D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1B5A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1B67 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAB DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBA DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD5 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C03 DUP11 DUP3 DUP12 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C14 DUP11 DUP3 DUP12 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C25 DUP11 DUP3 DUP12 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C36 DUP11 DUP3 DUP12 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C47 DUP11 DUP3 DUP12 ADD PUSH2 0x1B9D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C58 DUP11 DUP3 DUP12 ADD PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C69 DUP11 DUP3 DUP12 ADD PUSH2 0x1BC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C8E JUMPI PUSH2 0x1C8D PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9B DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CAC DUP6 DUP3 DUP7 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1CB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D26 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1D33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D7A PUSH0 DUP4 ADD DUP10 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1D87 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1DA1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1DAE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1DBB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E00 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E19 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1E26 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1E33 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5F DUP3 PUSH2 0x1E3B JUMP JUMPDEST PUSH2 0x1E69 DUP2 DUP6 PUSH2 0x1E45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1E82 DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EA0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1ECC DUP2 DUP5 PUSH2 0x1E55 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0B DUP2 PUSH2 0x1ED7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F26 DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F4E DUP5 DUP3 DUP6 ADD PUSH2 0x1F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F8E DUP3 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F99 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1F57 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FCA PUSH0 DUP4 ADD DUP9 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FD7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FE4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x1FF1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1FFE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x201B PUSH0 DUP4 ADD DUP8 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2028 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2035 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2042 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDA STATICCALL SGT MSTORE8 DUP7 0xAB 0xBA JUMPDEST 0xA7 DUP4 CODESIZE REVERT LOG4 SWAP10 PUSH11 0xCCA7096094D4CF3202CEB9 PUSH1 0xF9 0xA8 0xC7 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:1622:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;593:68:18;;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:366:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;593:68:18:-;628:26;634:10;646:7;628:5;:26::i;:::-;593:68::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:5:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;737:366:18:-;856:4;899:19;908:2;912:5;899:8;:19::i;:::-;894:90;;963:2;967:5;941:32;;;;;;;;;;;;:::i;:::-;;;;;;;;894:90;1019:55;1044:12;:10;:12::i;:::-;1058:2;1062:5;1069:4;;1019:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;:55::i;:::-;1092:4;1085:11;;737:366;;;;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:5:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:14:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:5:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:14:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1144:709:18:-;1349:1;1331:2;:14;;;:19;1327:56;1366:7;1327:56;1448:2;1431:39;;;1488:12;:10;:12::i;:::-;1518:4;1540:5;1563:4;1431:150;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1415:432;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:2;1812:24;;;;;;;;;;;:::i;:::-;;;;;;;;1415:432;1642:44;;;1632:54;;;:6;:54;;;;1628:124;;1734:2;1713:24;;;;;;;;;;;:::i;:::-;;;;;;;;1628:124;1590:172;1144:709;;;;;:::o;538:107:9:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:14:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:9:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:14:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:13:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:10:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:15:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:13:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:19:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:77::-;4783:7;4812:5;4801:16;;4746:77;;;:::o;4829:118::-;4916:24;4934:5;4916:24;:::i;:::-;4911:3;4904:37;4829:118;;:::o;4953:222::-;5046:4;5084:2;5073:9;5069:18;5061:26;;5097:71;5165:1;5154:9;5150:17;5141:6;5097:71;:::i;:::-;4953:222;;;;:::o;5181:117::-;5290:1;5287;5280:12;5304:117;5413:1;5410;5403:12;5427:117;5536:1;5533;5526:12;5563:552;5620:8;5630:6;5680:3;5673:4;5665:6;5661:17;5657:27;5647:122;;5688:79;;:::i;:::-;5647:122;5801:6;5788:20;5778:30;;5831:18;5823:6;5820:30;5817:117;;;5853:79;;:::i;:::-;5817:117;5967:4;5959:6;5955:17;5943:29;;6021:3;6013:4;6005:6;6001:17;5991:8;5987:32;5984:41;5981:128;;;6028:79;;:::i;:::-;5981:128;5563:552;;;;;:::o;6121:817::-;6209:6;6217;6225;6233;6282:2;6270:9;6261:7;6257:23;6253:32;6250:119;;;6288:79;;:::i;:::-;6250:119;6408:1;6433:53;6478:7;6469:6;6458:9;6454:22;6433:53;:::i;:::-;6423:63;;6379:117;6535:2;6561:53;6606:7;6597:6;6586:9;6582:22;6561:53;:::i;:::-;6551:63;;6506:118;6691:2;6680:9;6676:18;6663:32;6722:18;6714:6;6711:30;6708:117;;;6744:79;;:::i;:::-;6708:117;6857:64;6913:7;6904:6;6893:9;6889:22;6857:64;:::i;:::-;6839:82;;;;6634:297;6121:817;;;;;;;:::o;6944:329::-;7003:6;7052:2;7040:9;7031:7;7027:23;7023:32;7020:119;;;7058:79;;:::i;:::-;7020:119;7178:1;7203:53;7248:7;7239:6;7228:9;7224:22;7203:53;:::i;:::-;7193:63;;7149:117;6944:329;;;;:::o;7279:149::-;7315:7;7355:66;7348:5;7344:78;7333:89;;7279:149;;;:::o;7434:115::-;7519:23;7536:5;7519:23;:::i;:::-;7514:3;7507:36;7434:115;;:::o;7555:118::-;7642:24;7660:5;7642:24;:::i;:::-;7637:3;7630:37;7555:118;;:::o;7679:114::-;7746:6;7780:5;7774:12;7764:22;;7679:114;;;:::o;7799:184::-;7898:11;7932:6;7927:3;7920:19;7972:4;7967:3;7963:14;7948:29;;7799:184;;;;:::o;7989:132::-;8056:4;8079:3;8071:11;;8109:4;8104:3;8100:14;8092:22;;7989:132;;;:::o;8127:108::-;8204:24;8222:5;8204:24;:::i;:::-;8199:3;8192:37;8127:108;;:::o;8241:179::-;8310:10;8331:46;8373:3;8365:6;8331:46;:::i;:::-;8409:4;8404:3;8400:14;8386:28;;8241:179;;;;:::o;8426:113::-;8496:4;8528;8523:3;8519:14;8511:22;;8426:113;;;:::o;8575:732::-;8694:3;8723:54;8771:5;8723:54;:::i;:::-;8793:86;8872:6;8867:3;8793:86;:::i;:::-;8786:93;;8903:56;8953:5;8903:56;:::i;:::-;8982:7;9013:1;8998:284;9023:6;9020:1;9017:13;8998:284;;;9099:6;9093:13;9126:63;9185:3;9170:13;9126:63;:::i;:::-;9119:70;;9212:60;9265:6;9212:60;:::i;:::-;9202:70;;9058:224;9045:1;9042;9038:9;9033:14;;8998:284;;;9002:14;9298:3;9291:10;;8699:608;;;8575:732;;;;:::o;9313:1215::-;9662:4;9700:3;9689:9;9685:19;9677:27;;9714:69;9780:1;9769:9;9765:17;9756:6;9714:69;:::i;:::-;9830:9;9824:4;9820:20;9815:2;9804:9;9800:18;9793:48;9858:78;9931:4;9922:6;9858:78;:::i;:::-;9850:86;;9983:9;9977:4;9973:20;9968:2;9957:9;9953:18;9946:48;10011:78;10084:4;10075:6;10011:78;:::i;:::-;10003:86;;10099:72;10167:2;10156:9;10152:18;10143:6;10099:72;:::i;:::-;10181:73;10249:3;10238:9;10234:19;10225:6;10181:73;:::i;:::-;10264;10332:3;10321:9;10317:19;10308:6;10264:73;:::i;:::-;10385:9;10379:4;10375:20;10369:3;10358:9;10354:19;10347:49;10413:108;10516:4;10507:6;10413:108;:::i;:::-;10405:116;;9313:1215;;;;;;;;;;:::o;10534:118::-;10605:22;10621:5;10605:22;:::i;:::-;10598:5;10595:33;10585:61;;10642:1;10639;10632:12;10585:61;10534:118;:::o;10658:135::-;10702:5;10740:6;10727:20;10718:29;;10756:31;10781:5;10756:31;:::i;:::-;10658:135;;;;:::o;10799:122::-;10872:24;10890:5;10872:24;:::i;:::-;10865:5;10862:35;10852:63;;10911:1;10908;10901:12;10852:63;10799:122;:::o;10927:139::-;10973:5;11011:6;10998:20;10989:29;;11027:33;11054:5;11027:33;:::i;:::-;10927:139;;;;:::o;11072:1199::-;11183:6;11191;11199;11207;11215;11223;11231;11280:3;11268:9;11259:7;11255:23;11251:33;11248:120;;;11287:79;;:::i;:::-;11248:120;11407:1;11432:53;11477:7;11468:6;11457:9;11453:22;11432:53;:::i;:::-;11422:63;;11378:117;11534:2;11560:53;11605:7;11596:6;11585:9;11581:22;11560:53;:::i;:::-;11550:63;;11505:118;11662:2;11688:53;11733:7;11724:6;11713:9;11709:22;11688:53;:::i;:::-;11678:63;;11633:118;11790:2;11816:53;11861:7;11852:6;11841:9;11837:22;11816:53;:::i;:::-;11806:63;;11761:118;11918:3;11945:51;11988:7;11979:6;11968:9;11964:22;11945:51;:::i;:::-;11935:61;;11889:117;12045:3;12072:53;12117:7;12108:6;12097:9;12093:22;12072:53;:::i;:::-;12062:63;;12016:119;12174:3;12201:53;12246:7;12237:6;12226:9;12222:22;12201:53;:::i;:::-;12191:63;;12145:119;11072:1199;;;;;;;;;;:::o;12277:474::-;12345:6;12353;12402:2;12390:9;12381:7;12377:23;12373:32;12370:119;;;12408:79;;:::i;:::-;12370:119;12528:1;12553:53;12598:7;12589:6;12578:9;12574:22;12553:53;:::i;:::-;12543:63;;12499:117;12655:2;12681:53;12726:7;12717:6;12706:9;12702:22;12681:53;:::i;:::-;12671:63;;12626:118;12277:474;;;;;:::o;12757:180::-;12805:77;12802:1;12795:88;12902:4;12899:1;12892:15;12926:4;12923:1;12916:15;12943:320;12987:6;13024:1;13018:4;13014:12;13004:22;;13071:1;13065:4;13061:12;13092:18;13082:81;;13148:4;13140:6;13136:17;13126:27;;13082:81;13210:2;13202:6;13199:14;13179:18;13176:38;13173:84;;13229:18;;:::i;:::-;13173:84;12994:269;12943:320;;;:::o;13269:332::-;13390:4;13428:2;13417:9;13413:18;13405:26;;13441:71;13509:1;13498:9;13494:17;13485:6;13441:71;:::i;:::-;13522:72;13590:2;13579:9;13575:18;13566:6;13522:72;:::i;:::-;13269:332;;;;;:::o;13607:180::-;13655:77;13652:1;13645:88;13752:4;13749:1;13742:15;13776:4;13773:1;13766:15;13793:775;14026:4;14064:3;14053:9;14049:19;14041:27;;14078:71;14146:1;14135:9;14131:17;14122:6;14078:71;:::i;:::-;14159:72;14227:2;14216:9;14212:18;14203:6;14159:72;:::i;:::-;14241;14309:2;14298:9;14294:18;14285:6;14241:72;:::i;:::-;14323;14391:2;14380:9;14376:18;14367:6;14323:72;:::i;:::-;14405:73;14473:3;14462:9;14458:19;14449:6;14405:73;:::i;:::-;14488;14556:3;14545:9;14541:19;14532:6;14488:73;:::i;:::-;13793:775;;;;;;;;;:::o;14574:332::-;14695:4;14733:2;14722:9;14718:18;14710:26;;14746:71;14814:1;14803:9;14799:17;14790:6;14746:71;:::i;:::-;14827:72;14895:2;14884:9;14880:18;14871:6;14827:72;:::i;:::-;14574:332;;;;;:::o;14912:222::-;15005:4;15043:2;15032:9;15028:18;15020:26;;15056:71;15124:1;15113:9;15109:17;15100:6;15056:71;:::i;:::-;14912:222;;;;:::o;15140:442::-;15289:4;15327:2;15316:9;15312:18;15304:26;;15340:71;15408:1;15397:9;15393:17;15384:6;15340:71;:::i;:::-;15421:72;15489:2;15478:9;15474:18;15465:6;15421:72;:::i;:::-;15503;15571:2;15560:9;15556:18;15547:6;15503:72;:::i;:::-;15140:442;;;;;;:::o;15588:98::-;15639:6;15673:5;15667:12;15657:22;;15588:98;;;:::o;15692:168::-;15775:11;15809:6;15804:3;15797:19;15849:4;15844:3;15840:14;15825:29;;15692:168;;;;:::o;15866:373::-;15952:3;15980:38;16012:5;15980:38;:::i;:::-;16034:70;16097:6;16092:3;16034:70;:::i;:::-;16027:77;;16113:65;16171:6;16166:3;16159:4;16152:5;16148:16;16113:65;:::i;:::-;16203:29;16225:6;16203:29;:::i;:::-;16198:3;16194:39;16187:46;;15956:283;15866:373;;;;:::o;16245:640::-;16440:4;16478:3;16467:9;16463:19;16455:27;;16492:71;16560:1;16549:9;16545:17;16536:6;16492:71;:::i;:::-;16573:72;16641:2;16630:9;16626:18;16617:6;16573:72;:::i;:::-;16655;16723:2;16712:9;16708:18;16699:6;16655:72;:::i;:::-;16774:9;16768:4;16764:20;16759:2;16748:9;16744:18;16737:48;16802:76;16873:4;16864:6;16802:76;:::i;:::-;16794:84;;16245:640;;;;;;;:::o;16891:149::-;16927:7;16967:66;16960:5;16956:78;16945:89;;16891:149;;;:::o;17046:120::-;17118:23;17135:5;17118:23;:::i;:::-;17111:5;17108:34;17098:62;;17156:1;17153;17146:12;17098:62;17046:120;:::o;17172:141::-;17228:5;17259:6;17253:13;17244:22;;17275:32;17301:5;17275:32;:::i;:::-;17172:141;;;;:::o;17319:349::-;17388:6;17437:2;17425:9;17416:7;17412:23;17408:32;17405:119;;;17443:79;;:::i;:::-;17405:119;17563:1;17588:63;17643:7;17634:6;17623:9;17619:22;17588:63;:::i;:::-;17578:73;;17534:127;17319:349;;;;:::o;17674:180::-;17722:77;17719:1;17712:88;17819:4;17816:1;17809:15;17843:4;17840:1;17833:15;17860:191;17900:3;17919:20;17937:1;17919:20;:::i;:::-;17914:25;;17953:20;17971:1;17953:20;:::i;:::-;17948:25;;17996:1;17993;17989:9;17982:16;;18017:3;18014:1;18011:10;18008:36;;;18024:18;;:::i;:::-;18008:36;17860:191;;;;:::o;18057:664::-;18262:4;18300:3;18289:9;18285:19;18277:27;;18314:71;18382:1;18371:9;18367:17;18358:6;18314:71;:::i;:::-;18395:72;18463:2;18452:9;18448:18;18439:6;18395:72;:::i;:::-;18477;18545:2;18534:9;18530:18;18521:6;18477:72;:::i;:::-;18559;18627:2;18616:9;18612:18;18603:6;18559:72;:::i;:::-;18641:73;18709:3;18698:9;18694:19;18685:6;18641:73;:::i;:::-;18057:664;;;;;;;;:::o;18727:545::-;18900:4;18938:3;18927:9;18923:19;18915:27;;18952:71;19020:1;19009:9;19005:17;18996:6;18952:71;:::i;:::-;19033:68;19097:2;19086:9;19082:18;19073:6;19033:68;:::i;:::-;19111:72;19179:2;19168:9;19164:18;19155:6;19111:72;:::i;:::-;19193;19261:2;19250:9;19246:18;19237:6;19193:72;:::i;:::-;18727:545;;;;;;;:::o;19278:180::-;19326:77;19323:1;19316:88;19423:4;19420:1;19413:15;19447:4;19444:1;19437:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1673200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "405",
								"eip712Domain()": "infinite",
								"mint()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2938",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferAndCall(address,uint256,bytes)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_checkOnTransferReceived(address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "160"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 364,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 364,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 364,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 306,
									"end": 364,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "48756C696F000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "48756C696F000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4855000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 14,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 19,
									"value": "82"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 19,
									"value": "98"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 19,
									"value": "103"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 19,
									"value": "102"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 19,
									"value": "106"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 19,
									"value": "107"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 19,
									"value": "108"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 19,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 19,
									"value": "109"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 19,
									"value": "105"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 19,
									"value": "113"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 19,
									"value": "115"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 19,
									"value": "117"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 19,
									"value": "119"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 19,
									"value": "118"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "121"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 19,
									"value": "121"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "124"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 19,
									"value": "124"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 19,
									"value": "125"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 19,
									"value": "123"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 19,
									"value": "126"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 19,
									"value": "127"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "129"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "127"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 19,
									"value": "129"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "131"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 19,
									"value": "131"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 19,
									"value": "130"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 19,
									"value": "122"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5305,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5289,
									"end": 5305,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5289,
									"end": 5305,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5234,
									"end": 5311,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5234,
									"end": 5311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "tag",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "134"
								},
								{
									"begin": 5422,
									"end": 5427,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 5404,
									"end": 5428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "tag",
									"source": 19,
									"value": "134"
								},
								{
									"begin": 5404,
									"end": 5428,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5392,
									"end": 5429,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5317,
									"end": 5435,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5317,
									"end": 5435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "136"
								},
								{
									"begin": 5546,
									"end": 5551,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 5528,
									"end": 5552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "tag",
									"source": 19,
									"value": "136"
								},
								{
									"begin": 5528,
									"end": 5552,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5523,
									"end": 5526,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5516,
									"end": 5553,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5441,
									"end": 5559,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5441,
									"end": 5559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "tag",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5602,
									"end": 5609,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5642,
									"end": 5684,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5635,
									"end": 5640,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5631,
									"end": 5685,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 5620,
									"end": 5685,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5620,
									"end": 5685,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5691,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5565,
									"end": 5691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5734,
									"end": 5741,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "139"
								},
								{
									"begin": 5781,
									"end": 5786,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 5763,
									"end": 5787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "tag",
									"source": 19,
									"value": "139"
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5752,
									"end": 5787,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5752,
									"end": 5787,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5697,
									"end": 5793,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5697,
									"end": 5793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "tag",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 5904,
									"end": 5909,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 5886,
									"end": 5910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "tag",
									"source": 19,
									"value": "141"
								},
								{
									"begin": 5886,
									"end": 5910,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5881,
									"end": 5884,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5874,
									"end": 5911,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5799,
									"end": 5917,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5799,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6128,
									"end": 6132,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6166,
									"end": 6169,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 6155,
									"end": 6164,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6151,
									"end": 6170,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6143,
									"end": 6170,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6143,
									"end": 6170,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "143"
								},
								{
									"begin": 6248,
									"end": 6249,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6237,
									"end": 6246,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6233,
									"end": 6250,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6224,
									"end": 6230,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 6180,
									"end": 6251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "tag",
									"source": 19,
									"value": "143"
								},
								{
									"begin": 6180,
									"end": 6251,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "144"
								},
								{
									"begin": 6329,
									"end": 6331,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 6318,
									"end": 6327,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6314,
									"end": 6332,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6305,
									"end": 6311,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 6261,
									"end": 6333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "tag",
									"source": 19,
									"value": "144"
								},
								{
									"begin": 6261,
									"end": 6333,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "145"
								},
								{
									"begin": 6411,
									"end": 6413,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 6400,
									"end": 6409,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6396,
									"end": 6414,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6387,
									"end": 6393,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 6343,
									"end": 6415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "tag",
									"source": 19,
									"value": "145"
								},
								{
									"begin": 6343,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "146"
								},
								{
									"begin": 6493,
									"end": 6495,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 6482,
									"end": 6491,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6478,
									"end": 6496,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6469,
									"end": 6475,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 6425,
									"end": 6497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "tag",
									"source": 19,
									"value": "146"
								},
								{
									"begin": 6425,
									"end": 6497,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "147"
								},
								{
									"begin": 6575,
									"end": 6578,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 6564,
									"end": 6573,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6560,
									"end": 6579,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 6507,
									"end": 6580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "tag",
									"source": 19,
									"value": "147"
								},
								{
									"begin": 6507,
									"end": 6580,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "SWAP7",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5923,
									"end": 6587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "tag",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6677,
									"end": 6688,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6706,
									"end": 6709,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6699,
									"end": 6718,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6751,
									"end": 6755,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6749,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6742,
									"end": 6756,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6727,
									"end": 6756,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6593,
									"end": 6762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6907,
									"name": "tag",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 6768,
									"end": 6907,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6857,
									"end": 6863,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 6852,
									"end": 6855,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 6847,
									"end": 6850,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6841,
									"end": 6864,
									"name": "MCOPY",
									"source": 19
								},
								{
									"begin": 6898,
									"end": 6899,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 6889,
									"end": 6895,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6884,
									"end": 6887,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6880,
									"end": 6896,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6873,
									"end": 6900,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6907,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6907,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6907,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6768,
									"end": 6907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 6913,
									"end": 7015,
									"name": "tag",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 6913,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 6954,
									"end": 6960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7005,
									"end": 7007,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 7001,
									"end": 7008,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 6996,
									"end": 6998,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 6989,
									"end": 6994,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 6985,
									"end": 6999,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 6981,
									"end": 7009,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 6971,
									"end": 7009,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6971,
									"end": 7009,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6913,
									"end": 7015,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 6913,
									"end": 7015,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 6913,
									"end": 7015,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 6913,
									"end": 7015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "tag",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7109,
									"end": 7112,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7137,
									"end": 7176,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "152"
								},
								{
									"begin": 7170,
									"end": 7175,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7137,
									"end": 7176,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 7137,
									"end": 7176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7137,
									"end": 7176,
									"name": "tag",
									"source": 19,
									"value": "152"
								},
								{
									"begin": 7137,
									"end": 7176,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7192,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "153"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7251,
									"end": 7254,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 7192,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 7192,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7192,
									"end": 7263,
									"name": "tag",
									"source": 19,
									"value": "153"
								},
								{
									"begin": 7192,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7185,
									"end": 7263,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 7185,
									"end": 7263,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7272,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "154"
								},
								{
									"begin": 7330,
									"end": 7336,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7325,
									"end": 7328,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 7318,
									"end": 7322,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7311,
									"end": 7316,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 7307,
									"end": 7323,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7272,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 7272,
									"end": 7337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7272,
									"end": 7337,
									"name": "tag",
									"source": 19,
									"value": "154"
								},
								{
									"begin": 7272,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7362,
									"end": 7391,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "155"
								},
								{
									"begin": 7384,
									"end": 7390,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7362,
									"end": 7391,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 7362,
									"end": 7391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7362,
									"end": 7391,
									"name": "tag",
									"source": 19,
									"value": "155"
								},
								{
									"begin": 7362,
									"end": 7391,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7357,
									"end": 7360,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 7353,
									"end": 7392,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7346,
									"end": 7392,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7346,
									"end": 7392,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7113,
									"end": 7398,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7021,
									"end": 7398,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7517,
									"end": 7521,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7555,
									"end": 7557,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7553,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7540,
									"end": 7558,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7532,
									"end": 7558,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7532,
									"end": 7558,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7604,
									"end": 7613,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7598,
									"end": 7602,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7594,
									"end": 7614,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7579,
									"end": 7588,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 7575,
									"end": 7592,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7568,
									"end": 7615,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 7632,
									"end": 7710,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "157"
								},
								{
									"begin": 7705,
									"end": 7709,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7696,
									"end": 7702,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 7632,
									"end": 7710,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 7632,
									"end": 7710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7632,
									"end": 7710,
									"name": "tag",
									"source": 19,
									"value": "157"
								},
								{
									"begin": 7632,
									"end": 7710,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7624,
									"end": 7710,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7624,
									"end": 7710,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7404,
									"end": 7717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7723,
									"end": 7821,
									"name": "tag",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 7723,
									"end": 7821,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7774,
									"end": 7780,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7808,
									"end": 7813,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7802,
									"end": 7814,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 7792,
									"end": 7814,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7792,
									"end": 7814,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7723,
									"end": 7821,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7723,
									"end": 7821,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7723,
									"end": 7821,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7723,
									"end": 7821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7827,
									"end": 7943,
									"name": "tag",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 7827,
									"end": 7943,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7878,
									"end": 7882,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 7901,
									"end": 7904,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 7893,
									"end": 7904,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7893,
									"end": 7904,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7931,
									"end": 7935,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7926,
									"end": 7929,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 7922,
									"end": 7936,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 7914,
									"end": 7936,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7914,
									"end": 7936,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7827,
									"end": 7943,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7827,
									"end": 7943,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7827,
									"end": 7943,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7827,
									"end": 7943,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 7949,
									"end": 8103,
									"name": "tag",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 7949,
									"end": 8103,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 7992,
									"end": 8003,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8028,
									"end": 8057,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "161"
								},
								{
									"begin": 8052,
									"end": 8055,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8046,
									"end": 8056,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 8028,
									"end": 8057,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 8028,
									"end": 8057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8028,
									"end": 8057,
									"name": "tag",
									"source": 19,
									"value": "161"
								},
								{
									"begin": 8028,
									"end": 8057,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8091,
									"end": 8096,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 8067,
									"end": 8096,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 8067,
									"end": 8096,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8004,
									"end": 8103,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7949,
									"end": 8103,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7949,
									"end": 8103,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7949,
									"end": 8103,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7949,
									"end": 8103,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8109,
									"end": 8703,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 8109,
									"end": 8703,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8193,
									"end": 8198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8262,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "163"
								},
								{
									"begin": 8256,
									"end": 8261,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8224,
									"end": 8262,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 8224,
									"end": 8262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8224,
									"end": 8262,
									"name": "tag",
									"source": 19,
									"value": "163"
								},
								{
									"begin": 8224,
									"end": 8262,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8287,
									"end": 8292,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8314,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "164"
								},
								{
									"begin": 8348,
									"end": 8353,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 8314,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 8314,
									"end": 8354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8314,
									"end": 8354,
									"name": "tag",
									"source": 19,
									"value": "164"
								},
								{
									"begin": 8314,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8302,
									"end": 8354,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 8302,
									"end": 8354,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8373,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "165"
								},
								{
									"begin": 8399,
									"end": 8407,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 8373,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "69"
								},
								{
									"begin": 8373,
									"end": 8408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8373,
									"end": 8408,
									"name": "tag",
									"source": 19,
									"value": "165"
								},
								{
									"begin": 8373,
									"end": 8408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8364,
									"end": 8408,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 8364,
									"end": 8408,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8432,
									"end": 8434,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 8424,
									"end": 8430,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 8421,
									"end": 8435,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 8418,
									"end": 8696,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 8418,
									"end": 8696,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "166"
								},
								{
									"begin": 8418,
									"end": 8696,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 8503,
									"end": 8672,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "167"
								},
								{
									"begin": 8588,
									"end": 8654,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8558,
									"end": 8564,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8554,
									"end": 8556,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 8550,
									"end": 8565,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 8547,
									"end": 8548,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 8543,
									"end": 8566,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 8503,
									"end": 8672,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 8503,
									"end": 8672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8503,
									"end": 8672,
									"name": "tag",
									"source": 19,
									"value": "167"
								},
								{
									"begin": 8503,
									"end": 8672,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8480,
									"end": 8485,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 8459,
									"end": 8686,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 8686,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 8450,
									"end": 8686,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8418,
									"end": 8696,
									"name": "tag",
									"source": 19,
									"value": "166"
								},
								{
									"begin": 8418,
									"end": 8696,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 8199,
									"end": 8703,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8199,
									"end": 8703,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8109,
									"end": 8703,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 8109,
									"end": 8703,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 8109,
									"end": 8703,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 8109,
									"end": 8703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "A0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "C0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "120"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "140"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2051"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2048"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2045"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2043"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2041"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2039"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "ASSIGNIMMUTABLE",
									"source": 18,
									"value": "2037"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 1855,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ddafa135386abba5ba78338fda4996acca7096094d4cf3202ceb960f9a8c79b64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "4000AEA0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "A9059CBB"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "D505ACCF"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "DD62ED3E"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "4000AEA0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "7ECEBE00"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "84B0196E"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "18160DDD"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "18160DDD"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "313CE567"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "3644E515"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "1249C58B"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 1855,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 593,
											"end": 661,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 593,
											"end": 661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 593,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 593,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 593,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 593,
											"end": 661,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 593,
											"end": 661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 593,
											"end": 661,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 737,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 737,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 737,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 661,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 593,
											"end": 661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 628,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 634,
											"end": 644,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 18,
											"value": "3B9ACA00"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 628,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 628,
											"end": 654,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 628,
											"end": 654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 593,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 908,
											"end": 910,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 912,
											"end": 917,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 899,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 899,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 899,
											"end": 918,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 899,
											"end": 918,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 894,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 894,
											"end": 984,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 967,
											"end": 972,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH",
											"source": 18,
											"value": "231B03AE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 941,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 973,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 941,
											"end": 973,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 894,
											"end": 984,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 894,
											"end": 984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 1044,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 1044,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1044,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1044,
											"end": 1056,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 1044,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 1019,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 1019,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 737,
											"end": 1103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2523,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 14,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2068,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2017,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2122,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2178,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2258,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2314,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2041"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2039"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2037"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1331,
											"end": 1345,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1345,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1331,
											"end": 1345,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1331,
											"end": 1350,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1327,
											"end": 1383,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1366,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 1327,
											"end": 1383,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1448,
											"end": 1450,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"source": 18,
											"value": "88A7CA5C"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1488,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 1431,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 1431,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 1431,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH",
											"source": 18,
											"value": "373C5C7800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1812,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "tag",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 1836,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 1415,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1642,
											"end": 1686,
											"name": "PUSH",
											"source": 18,
											"value": "88A7CA5C"
										},
										{
											"begin": 1642,
											"end": 1686,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1642,
											"end": 1686,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1638,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1632,
											"end": 1686,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1628,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 1628,
											"end": 1752,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH",
											"source": 18,
											"value": "373C5C7800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1713,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "tag",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1628,
											"end": 1752,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 1628,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1590,
											"end": 1762,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 645,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 538,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2048"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2051"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2043"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2045"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 15,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 13,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 19
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4783,
											"end": 4790,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4817,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 4916,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4941,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4829,
											"end": 4947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "tag",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5150,
											"end": 5167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 5097,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5181,
											"end": 5298,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 5181,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5288,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5304,
											"end": 5421,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 5304,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5403,
											"end": 5415,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5427,
											"end": 5544,
											"name": "tag",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 5427,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5526,
											"end": 5538,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5620,
											"end": 5628,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5665,
											"end": 5671,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5661,
											"end": 5678,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5657,
											"end": 5684,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 5688,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 5688,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5801,
											"end": 5807,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5788,
											"end": 5808,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5778,
											"end": 5808,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5778,
											"end": 5808,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5934,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5817,
											"end": 5934,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5853,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 5853,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 5853,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5853,
											"end": 5932,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 5853,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5817,
											"end": 5934,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5817,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5955,
											"end": 5972,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5943,
											"end": 5972,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5943,
											"end": 5972,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6021,
											"end": 6024,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6013,
											"end": 6017,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6005,
											"end": 6011,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6001,
											"end": 6018,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 5991,
											"end": 5999,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5987,
											"end": 6019,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5984,
											"end": 6025,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5981,
											"end": 6109,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5981,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 5981,
											"end": 6109,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6028,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 6028,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 6028,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6028,
											"end": 6107,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 6028,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5981,
											"end": 6109,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 5981,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5563,
											"end": 6115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6209,
											"end": 6215,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6261,
											"end": 6268,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6257,
											"end": 6280,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6250,
											"end": 6369,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6250,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 6250,
											"end": 6369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6288,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 6288,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 6288,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6288,
											"end": 6367,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 6288,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6250,
											"end": 6369,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 6250,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 6478,
											"end": 6485,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6454,
											"end": 6476,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6433,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 6433,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6433,
											"end": 6486,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 6433,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6423,
											"end": 6486,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6423,
											"end": 6486,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6379,
											"end": 6496,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 6606,
											"end": 6613,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6586,
											"end": 6595,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6561,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 6561,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6561,
											"end": 6614,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 6561,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6614,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6506,
											"end": 6624,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6691,
											"end": 6693,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6680,
											"end": 6689,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6663,
											"end": 6695,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6714,
											"end": 6720,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6711,
											"end": 6741,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6708,
											"end": 6825,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6708,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 6708,
											"end": 6825,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6744,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 6744,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 6744,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6744,
											"end": 6823,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 6744,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6708,
											"end": 6825,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 6708,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6904,
											"end": 6910,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6889,
											"end": 6911,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 6857,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6921,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 6857,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6839,
											"end": 6921,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6839,
											"end": 6921,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6839,
											"end": 6921,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6839,
											"end": 6921,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6634,
											"end": 6931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6121,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7003,
											"end": 7009,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7040,
											"end": 7049,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7031,
											"end": 7038,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7027,
											"end": 7050,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7023,
											"end": 7055,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7020,
											"end": 7139,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7020,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 7020,
											"end": 7139,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7058,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 7058,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 7058,
											"end": 7137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7058,
											"end": 7137,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 7058,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7020,
											"end": 7139,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 7020,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7203,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7239,
											"end": 7245,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7228,
											"end": 7237,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7224,
											"end": 7246,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7203,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 7203,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7203,
											"end": 7256,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 7203,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7193,
											"end": 7256,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7193,
											"end": 7256,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7149,
											"end": 7266,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6944,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7279,
											"end": 7428,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 7279,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7315,
											"end": 7322,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7421,
											"name": "PUSH",
											"source": 19,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7348,
											"end": 7353,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7344,
											"end": 7422,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7333,
											"end": 7422,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7333,
											"end": 7422,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7279,
											"end": 7428,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7279,
											"end": 7428,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7279,
											"end": 7428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7279,
											"end": 7428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7434,
											"end": 7549,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 7434,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7519,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 7536,
											"end": 7541,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7519,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 7519,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7519,
											"end": 7542,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 7519,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7514,
											"end": 7517,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7507,
											"end": 7543,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7434,
											"end": 7549,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7434,
											"end": 7549,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7434,
											"end": 7549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7555,
											"end": 7673,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 7555,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 7660,
											"end": 7665,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 7642,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 7642,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7637,
											"end": 7640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7630,
											"end": 7667,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7555,
											"end": 7673,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7555,
											"end": 7673,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7555,
											"end": 7673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7793,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 7679,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7785,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7774,
											"end": 7786,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7793,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7793,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7898,
											"end": 7909,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7920,
											"end": 7939,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7967,
											"end": 7970,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7963,
											"end": 7977,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7948,
											"end": 7977,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7948,
											"end": 7977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7799,
											"end": 7983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8121,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 7989,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8082,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8071,
											"end": 8082,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8071,
											"end": 8082,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8109,
											"end": 8113,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8104,
											"end": 8107,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8100,
											"end": 8114,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8092,
											"end": 8114,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8092,
											"end": 8114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8121,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8121,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7989,
											"end": 8121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8235,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 8127,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8204,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 8222,
											"end": 8227,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8204,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 8204,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8204,
											"end": 8228,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 8204,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8199,
											"end": 8202,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8192,
											"end": 8229,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8235,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8235,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 8373,
											"end": 8376,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8331,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 8331,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8331,
											"end": 8377,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 8331,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8407,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8400,
											"end": 8414,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8414,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8386,
											"end": 8414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8539,
											"name": "tag",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 8426,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8532,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 8533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8539,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8539,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8694,
											"end": 8697,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 8771,
											"end": 8776,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8723,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 8723,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8723,
											"end": 8777,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 8723,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8793,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 8872,
											"end": 8878,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8867,
											"end": 8870,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8793,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 8793,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8793,
											"end": 8879,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 8793,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8903,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 8953,
											"end": 8958,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8903,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 8903,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8903,
											"end": 8959,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 8903,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8982,
											"end": 8989,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9023,
											"end": 9029,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9099,
											"end": 9105,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9093,
											"end": 9106,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 9185,
											"end": 9188,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9170,
											"end": 9183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 9126,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9126,
											"end": 9189,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 9126,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9119,
											"end": 9189,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 9119,
											"end": 9189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9212,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 9265,
											"end": 9271,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9212,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 9212,
											"end": 9272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9212,
											"end": 9272,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 9212,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9202,
											"end": 9272,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9202,
											"end": 9272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9058,
											"end": 9282,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9038,
											"end": 9047,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9033,
											"end": 9047,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9033,
											"end": 9047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 8998,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9002,
											"end": 9016,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9298,
											"end": 9301,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9291,
											"end": 9301,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9291,
											"end": 9301,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8699,
											"end": 9307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8699,
											"end": 9307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8699,
											"end": 9307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9662,
											"end": 9666,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9700,
											"end": 9703,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 9689,
											"end": 9698,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9685,
											"end": 9704,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9677,
											"end": 9704,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9677,
											"end": 9704,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9714,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9778,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 9714,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 9714,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9714,
											"end": 9783,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 9714,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9830,
											"end": 9839,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9824,
											"end": 9828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9820,
											"end": 9840,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9793,
											"end": 9841,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9922,
											"end": 9928,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 9858,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9936,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 9858,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9850,
											"end": 9936,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9850,
											"end": 9936,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9973,
											"end": 9993,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9968,
											"end": 9970,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9957,
											"end": 9966,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9946,
											"end": 9994,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 10084,
											"end": 10088,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10075,
											"end": 10081,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 10011,
											"end": 10089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10089,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 10011,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10003,
											"end": 10089,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10003,
											"end": 10089,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10099,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 10167,
											"end": 10169,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10143,
											"end": 10149,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 10099,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 10099,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10099,
											"end": 10171,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 10099,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10181,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 10249,
											"end": 10252,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10234,
											"end": 10253,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10181,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 10181,
											"end": 10254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10181,
											"end": 10254,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 10181,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 10332,
											"end": 10335,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10321,
											"end": 10330,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10317,
											"end": 10336,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 10264,
											"end": 10337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10264,
											"end": 10337,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 10264,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10385,
											"end": 10394,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10379,
											"end": 10383,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10375,
											"end": 10395,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10369,
											"end": 10372,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 10358,
											"end": 10367,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10354,
											"end": 10373,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10396,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10413,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 10516,
											"end": 10520,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10507,
											"end": 10513,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10413,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 10413,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10413,
											"end": 10521,
											"name": "tag",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 10413,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10405,
											"end": 10521,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10405,
											"end": 10521,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9313,
											"end": 10528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10534,
											"end": 10652,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 10534,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 10621,
											"end": 10626,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 10605,
											"end": 10627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 10627,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 10605,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10598,
											"end": 10603,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10595,
											"end": 10628,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 10585,
											"end": 10646,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 10585,
											"end": 10646,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10642,
											"end": 10643,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10639,
											"end": 10640,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10632,
											"end": 10644,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10585,
											"end": 10646,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 10585,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10534,
											"end": 10652,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10534,
											"end": 10652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10702,
											"end": 10707,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10727,
											"end": 10747,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10747,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10718,
											"end": 10747,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10756,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 10781,
											"end": 10786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10756,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 10756,
											"end": 10787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10756,
											"end": 10787,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 10756,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10658,
											"end": 10793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10921,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 10799,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10872,
											"end": 10896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 10890,
											"end": 10895,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10872,
											"end": 10896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 10872,
											"end": 10896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10872,
											"end": 10896,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 10872,
											"end": 10896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10865,
											"end": 10870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10862,
											"end": 10897,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 10852,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 10852,
											"end": 10915,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10911,
											"end": 10912,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10908,
											"end": 10909,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10901,
											"end": 10913,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10852,
											"end": 10915,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 10852,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10921,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10973,
											"end": 10978,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11017,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10998,
											"end": 11018,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10989,
											"end": 11018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10989,
											"end": 11018,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11027,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 11054,
											"end": 11059,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11027,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 11027,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11027,
											"end": 11060,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 11027,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10927,
											"end": 11066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "tag",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11197,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11199,
											"end": 11205,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11207,
											"end": 11213,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11221,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11229,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11231,
											"end": 11237,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11283,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 11268,
											"end": 11277,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11255,
											"end": 11278,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11251,
											"end": 11284,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11248,
											"end": 11368,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11248,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 11248,
											"end": 11368,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11287,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 11287,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 11287,
											"end": 11366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11287,
											"end": 11366,
											"name": "tag",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 11287,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11248,
											"end": 11368,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 11248,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11407,
											"end": 11408,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 11477,
											"end": 11484,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11468,
											"end": 11474,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11457,
											"end": 11466,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11475,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11432,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 11432,
											"end": 11485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11432,
											"end": 11485,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 11432,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11422,
											"end": 11485,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 11422,
											"end": 11485,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11378,
											"end": 11495,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11560,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 11605,
											"end": 11612,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11585,
											"end": 11594,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 11581,
											"end": 11603,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11560,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 11560,
											"end": 11613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11560,
											"end": 11613,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 11560,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11550,
											"end": 11613,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 11550,
											"end": 11613,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11505,
											"end": 11623,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 11733,
											"end": 11740,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11730,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11713,
											"end": 11722,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 11731,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11688,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 11688,
											"end": 11741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11688,
											"end": 11741,
											"name": "tag",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 11688,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11678,
											"end": 11741,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11678,
											"end": 11741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11633,
											"end": 11751,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11790,
											"end": 11792,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11816,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 11861,
											"end": 11868,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11852,
											"end": 11858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11841,
											"end": 11850,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 11859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11816,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 11816,
											"end": 11869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11816,
											"end": 11869,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 11816,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11806,
											"end": 11869,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11806,
											"end": 11869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11879,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11918,
											"end": 11921,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11945,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 11988,
											"end": 11995,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 11979,
											"end": 11985,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11968,
											"end": 11977,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 11964,
											"end": 11986,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11945,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 11945,
											"end": 11996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11945,
											"end": 11996,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 11945,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11935,
											"end": 11996,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11935,
											"end": 11996,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11889,
											"end": 12006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 12072,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 12117,
											"end": 12124,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 12093,
											"end": 12115,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12072,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 12072,
											"end": 12125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12072,
											"end": 12125,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 12072,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12062,
											"end": 12125,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12062,
											"end": 12125,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12016,
											"end": 12135,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12174,
											"end": 12177,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 12201,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 12246,
											"end": 12253,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 12237,
											"end": 12243,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12226,
											"end": 12235,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 12222,
											"end": 12244,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12201,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 12201,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12201,
											"end": 12254,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 12201,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12191,
											"end": 12254,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12191,
											"end": 12254,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12264,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 12271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "tag",
											"source": 19,
											"value": "81"
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12402,
											"end": 12404,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12390,
											"end": 12399,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12381,
											"end": 12388,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12377,
											"end": 12400,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12373,
											"end": 12405,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12370,
											"end": 12489,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12370,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 12370,
											"end": 12489,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12408,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 12408,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 12408,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12408,
											"end": 12487,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 12408,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12370,
											"end": 12489,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 12370,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12528,
											"end": 12529,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 12598,
											"end": 12605,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12589,
											"end": 12595,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12578,
											"end": 12587,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12574,
											"end": 12596,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 12553,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12499,
											"end": 12616,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12655,
											"end": 12657,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 12726,
											"end": 12733,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12717,
											"end": 12723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12706,
											"end": 12715,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12702,
											"end": 12724,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12681,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 12681,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12681,
											"end": 12734,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 12681,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12671,
											"end": 12734,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12671,
											"end": 12734,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12626,
											"end": 12744,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12277,
											"end": 12751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12757,
											"end": 12937,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 12757,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12805,
											"end": 12882,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12795,
											"end": 12883,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12902,
											"end": 12906,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 12899,
											"end": 12900,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 12892,
											"end": 12907,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12926,
											"end": 12930,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12916,
											"end": 12931,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "tag",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13024,
											"end": 13025,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 13018,
											"end": 13022,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13014,
											"end": 13026,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 13004,
											"end": 13026,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13004,
											"end": 13026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13061,
											"end": 13073,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13148,
											"end": 13152,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 13140,
											"end": 13146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13136,
											"end": 13153,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13126,
											"end": 13153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13126,
											"end": 13153,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 13082,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13202,
											"end": 13208,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13199,
											"end": 13213,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13176,
											"end": 13214,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 13229,
											"end": 13247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 13173,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12994,
											"end": 13263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12943,
											"end": 13263,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12943,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13390,
											"end": 13394,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13430,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13417,
											"end": 13426,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13405,
											"end": 13431,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13405,
											"end": 13431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 13509,
											"end": 13510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13498,
											"end": 13507,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13494,
											"end": 13511,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13485,
											"end": 13491,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 13441,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13522,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 13590,
											"end": 13592,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13579,
											"end": 13588,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13575,
											"end": 13593,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13566,
											"end": 13572,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13522,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 13522,
											"end": 13594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13522,
											"end": 13594,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 13522,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13269,
											"end": 13601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13607,
											"end": 13787,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 13607,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13655,
											"end": 13732,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13645,
											"end": 13733,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13752,
											"end": 13756,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 13749,
											"end": 13750,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 13742,
											"end": 13757,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13776,
											"end": 13780,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13773,
											"end": 13774,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13781,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "tag",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14026,
											"end": 14030,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14064,
											"end": 14067,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 14053,
											"end": 14062,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14049,
											"end": 14068,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14041,
											"end": 14068,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14041,
											"end": 14068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14078,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 14146,
											"end": 14147,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14144,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14131,
											"end": 14148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14122,
											"end": 14128,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 14078,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 14078,
											"end": 14149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14078,
											"end": 14149,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 14078,
											"end": 14149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14159,
											"end": 14231,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 14227,
											"end": 14229,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14216,
											"end": 14225,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14212,
											"end": 14230,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14203,
											"end": 14209,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 14159,
											"end": 14231,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 14159,
											"end": 14231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14159,
											"end": 14231,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 14159,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14241,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14309,
											"end": 14311,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14285,
											"end": 14291,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 14241,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 14241,
											"end": 14313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14241,
											"end": 14313,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14241,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14323,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 14391,
											"end": 14393,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14380,
											"end": 14389,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14323,
											"end": 14395,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 14323,
											"end": 14395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14323,
											"end": 14395,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 14323,
											"end": 14395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14405,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 14473,
											"end": 14476,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 14462,
											"end": 14471,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14458,
											"end": 14477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14449,
											"end": 14455,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14405,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 14405,
											"end": 14478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14405,
											"end": 14478,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 14405,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14488,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 14556,
											"end": 14559,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 14545,
											"end": 14554,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14541,
											"end": 14560,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14532,
											"end": 14538,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14488,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 14488,
											"end": 14561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14488,
											"end": 14561,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 14488,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 14568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "tag",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14695,
											"end": 14699,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14733,
											"end": 14735,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14722,
											"end": 14731,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14710,
											"end": 14736,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14710,
											"end": 14736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 14814,
											"end": 14815,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14799,
											"end": 14816,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14790,
											"end": 14796,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 14746,
											"end": 14817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 14746,
											"end": 14817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 14895,
											"end": 14897,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 14893,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14880,
											"end": 14898,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14871,
											"end": 14877,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 14827,
											"end": 14899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 14827,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14574,
											"end": 14906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15005,
											"end": 15009,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15043,
											"end": 15045,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15032,
											"end": 15041,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15020,
											"end": 15046,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15020,
											"end": 15046,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15056,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 15124,
											"end": 15125,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15122,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15126,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15100,
											"end": 15106,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15056,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 15056,
											"end": 15127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15056,
											"end": 15127,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 15056,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14912,
											"end": 15134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "tag",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15289,
											"end": 15293,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15327,
											"end": 15329,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 15316,
											"end": 15325,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15312,
											"end": 15330,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15304,
											"end": 15330,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15304,
											"end": 15330,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15340,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 15408,
											"end": 15409,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15397,
											"end": 15406,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15393,
											"end": 15410,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15340,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 15340,
											"end": 15411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15340,
											"end": 15411,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 15340,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15421,
											"end": 15493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 15489,
											"end": 15491,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15487,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15474,
											"end": 15492,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15465,
											"end": 15471,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15421,
											"end": 15493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 15421,
											"end": 15493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15421,
											"end": 15493,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 15421,
											"end": 15493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15503,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 15571,
											"end": 15573,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 15560,
											"end": 15569,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15547,
											"end": 15553,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15503,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 15503,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15503,
											"end": 15575,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 15503,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15140,
											"end": 15582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15588,
											"end": 15686,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 15588,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15639,
											"end": 15645,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15673,
											"end": 15678,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15667,
											"end": 15679,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15657,
											"end": 15679,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15657,
											"end": 15679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15588,
											"end": 15686,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15588,
											"end": 15686,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15588,
											"end": 15686,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15588,
											"end": 15686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15775,
											"end": 15786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15804,
											"end": 15807,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15797,
											"end": 15816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15849,
											"end": 15853,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15844,
											"end": 15847,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15840,
											"end": 15854,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15825,
											"end": 15854,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15825,
											"end": 15854,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15692,
											"end": 15860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15952,
											"end": 15955,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15980,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 16012,
											"end": 16017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15980,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 15980,
											"end": 16018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15980,
											"end": 16018,
											"name": "tag",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 15980,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16034,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 16097,
											"end": 16103,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16092,
											"end": 16095,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16034,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 16034,
											"end": 16104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16034,
											"end": 16104,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 16034,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16027,
											"end": 16104,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16027,
											"end": 16104,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16113,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 16171,
											"end": 16177,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16166,
											"end": 16169,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16159,
											"end": 16163,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16152,
											"end": 16157,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16148,
											"end": 16164,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16113,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 16113,
											"end": 16178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16113,
											"end": 16178,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 16113,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16203,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 16225,
											"end": 16231,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16203,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 16203,
											"end": 16232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16203,
											"end": 16232,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 16203,
											"end": 16232,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16194,
											"end": 16233,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16187,
											"end": 16233,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16187,
											"end": 16233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15956,
											"end": 16239,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15866,
											"end": 16239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16440,
											"end": 16444,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16478,
											"end": 16481,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 16467,
											"end": 16476,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16463,
											"end": 16482,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16455,
											"end": 16482,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16455,
											"end": 16482,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16492,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 16560,
											"end": 16561,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16558,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16545,
											"end": 16562,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16492,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 16492,
											"end": 16563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16492,
											"end": 16563,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 16492,
											"end": 16563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16573,
											"end": 16645,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 16641,
											"end": 16643,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16630,
											"end": 16639,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16626,
											"end": 16644,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16617,
											"end": 16623,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16573,
											"end": 16645,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 16573,
											"end": 16645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16573,
											"end": 16645,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 16573,
											"end": 16645,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 16723,
											"end": 16725,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16712,
											"end": 16721,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16708,
											"end": 16726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16699,
											"end": 16705,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 16655,
											"end": 16727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "tag",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16774,
											"end": 16783,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16768,
											"end": 16772,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16764,
											"end": 16784,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16748,
											"end": 16757,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16744,
											"end": 16762,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16737,
											"end": 16785,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16802,
											"end": 16878,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 16873,
											"end": 16877,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16864,
											"end": 16870,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16802,
											"end": 16878,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 16802,
											"end": 16878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16802,
											"end": 16878,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 16802,
											"end": 16878,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16794,
											"end": 16878,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16794,
											"end": 16878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16245,
											"end": 16885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16891,
											"end": 17040,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 16891,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16927,
											"end": 16934,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16967,
											"end": 17033,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16960,
											"end": 16965,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16956,
											"end": 17034,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 16945,
											"end": 17034,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16945,
											"end": 17034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16891,
											"end": 17040,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16891,
											"end": 17040,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16891,
											"end": 17040,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16891,
											"end": 17040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17118,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 17135,
											"end": 17140,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17118,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 17118,
											"end": 17141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17118,
											"end": 17141,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 17118,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17111,
											"end": 17116,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17108,
											"end": 17142,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 17098,
											"end": 17160,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17156,
											"end": 17157,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17153,
											"end": 17154,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17146,
											"end": 17158,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17160,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 17098,
											"end": 17160,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17046,
											"end": 17166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17228,
											"end": 17233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17259,
											"end": 17265,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17253,
											"end": 17266,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17244,
											"end": 17266,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17244,
											"end": 17266,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17275,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 17301,
											"end": 17306,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17275,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 17275,
											"end": 17307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17275,
											"end": 17307,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 17275,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17172,
											"end": 17313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17388,
											"end": 17394,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17439,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17425,
											"end": 17434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17416,
											"end": 17423,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17412,
											"end": 17435,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17408,
											"end": 17440,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 17405,
											"end": 17524,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17405,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 17405,
											"end": 17524,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17443,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 17443,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 17443,
											"end": 17522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17443,
											"end": 17522,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 17443,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17405,
											"end": 17524,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 17405,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17563,
											"end": 17564,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 17643,
											"end": 17650,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17634,
											"end": 17640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17623,
											"end": 17632,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17619,
											"end": 17641,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 17588,
											"end": 17651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17651,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 17588,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17578,
											"end": 17651,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17578,
											"end": 17651,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17534,
											"end": 17661,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17319,
											"end": 17668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17674,
											"end": 17854,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 17674,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17722,
											"end": 17799,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17712,
											"end": 17800,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17819,
											"end": 17823,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 17816,
											"end": 17817,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 17809,
											"end": 17824,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17843,
											"end": 17847,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17840,
											"end": 17841,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17833,
											"end": 17848,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "tag",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17900,
											"end": 17903,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17919,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 17937,
											"end": 17938,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17919,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 17919,
											"end": 17939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17919,
											"end": 17939,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 17919,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17914,
											"end": 17939,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17914,
											"end": 17939,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17953,
											"end": 17973,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 17971,
											"end": 17972,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17953,
											"end": 17973,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 17953,
											"end": 17973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17953,
											"end": 17973,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 17953,
											"end": 17973,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17948,
											"end": 17973,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17948,
											"end": 17973,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17996,
											"end": 17997,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17993,
											"end": 17994,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 17998,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18017,
											"end": 18020,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 18014,
											"end": 18015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18011,
											"end": 18021,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 18008,
											"end": 18044,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18008,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 18008,
											"end": 18044,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 18024,
											"end": 18042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18008,
											"end": 18044,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 18008,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17860,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18262,
											"end": 18266,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18300,
											"end": 18303,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 18289,
											"end": 18298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18285,
											"end": 18304,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18277,
											"end": 18304,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18277,
											"end": 18304,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18314,
											"end": 18385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 18382,
											"end": 18383,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18380,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18367,
											"end": 18384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18358,
											"end": 18364,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 18314,
											"end": 18385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 18314,
											"end": 18385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18314,
											"end": 18385,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 18314,
											"end": 18385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18395,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 18463,
											"end": 18465,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18452,
											"end": 18461,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18448,
											"end": 18466,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18439,
											"end": 18445,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 18395,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 18395,
											"end": 18467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18395,
											"end": 18467,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 18395,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18477,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 18545,
											"end": 18547,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18534,
											"end": 18543,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18530,
											"end": 18548,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18521,
											"end": 18527,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 18477,
											"end": 18549,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 18477,
											"end": 18549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18477,
											"end": 18549,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 18477,
											"end": 18549,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18559,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 18627,
											"end": 18629,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 18616,
											"end": 18625,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18603,
											"end": 18609,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18559,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 18559,
											"end": 18631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18559,
											"end": 18631,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 18559,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18641,
											"end": 18714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 18709,
											"end": 18712,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 18698,
											"end": 18707,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18694,
											"end": 18713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18685,
											"end": 18691,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18641,
											"end": 18714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 18641,
											"end": 18714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18641,
											"end": 18714,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 18641,
											"end": 18714,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18057,
											"end": 18721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18900,
											"end": 18904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18938,
											"end": 18941,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 18927,
											"end": 18936,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18923,
											"end": 18942,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18915,
											"end": 18942,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18915,
											"end": 18942,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18952,
											"end": 19023,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 19020,
											"end": 19021,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19009,
											"end": 19018,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19005,
											"end": 19022,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18996,
											"end": 19002,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 18952,
											"end": 19023,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 18952,
											"end": 19023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18952,
											"end": 19023,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 18952,
											"end": 19023,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19033,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 19097,
											"end": 19099,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19086,
											"end": 19095,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19082,
											"end": 19100,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19079,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19033,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 19033,
											"end": 19101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19033,
											"end": 19101,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 19033,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19111,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 19179,
											"end": 19181,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 19168,
											"end": 19177,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19164,
											"end": 19182,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19155,
											"end": 19161,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 19111,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 19111,
											"end": 19183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19111,
											"end": 19183,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 19111,
											"end": 19183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 19261,
											"end": 19263,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 19250,
											"end": 19259,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19246,
											"end": 19264,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19237,
											"end": 19243,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 19193,
											"end": 19265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18727,
											"end": 19272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19278,
											"end": 19458,
											"name": "tag",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 19278,
											"end": 19458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19403,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19323,
											"end": 19324,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19316,
											"end": 19404,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19423,
											"end": 19427,
											"name": "PUSH",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 19420,
											"end": 19421,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 19413,
											"end": 19428,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19447,
											"end": 19451,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19444,
											"end": 19445,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19437,
											"end": 19452,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
								"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
								"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"lib/openzeppelin-contracts/contracts/utils/Strings.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
								"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
								"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"src/Hulio.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC1363ReceiveFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"\\u6784\\u9020\\u51fd\\u6570\"},\"mint()\":{\"notice\":\"mint, \\u6682\\u65f6\\u5141\\u8bb8\\u6240\\u6709\\u4eba\\u6316\"},\"transferAndCall(address,uint256,bytes)\":{\"notice\":\"transfer and invoke hook (if to is a contract)\"}},\"notice\":\"erc20\\u4ee3\\u5e01\\u5408\\u7ea6\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Hulio.sol\":\"Hulio\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294\",\"dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/Hulio.sol\":{\"keccak256\":\"0xc82cc998b68850f8a8e295df18e025c8f8cb4778a4278a17b45c32776151cfcb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e45468cfb7e56ea3110bbc76fba6fa5698b7bb87ef3e34c849605ca0a027a6d\",\"dweb:/ipfs/QmdB5kq9D94nWKd6dUg6ogJuXcJ6K4WN9r6v3Hzewt5Yvr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 202,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 208,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 210,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 212,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 214,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2053,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2055,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1032,
								"contract": "src/Hulio.sol:Hulio",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "构造函数"
							},
							"mint()": {
								"notice": "mint, 暂时允许所有人挖"
							},
							"transferAndCall(address,uint256,bytes)": {
								"notice": "transfer and invoke hook (if to is a contract)"
							}
						},
						"notice": "erc20代币合约",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Hulio.sol:73:18:\n   |\n73 |         } catch (bytes memory reason) {\n   |                  ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused try/catch parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1789,
					"file": "src/Hulio.sol",
					"start": 1770
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
					"exportedSymbols": {
						"IERC1363Receiver": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1363Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "141:160:0",
								"text": " @dev Interface for any contract that wants to support {IERC1363-transferAndCall}\n or {IERC1363-transferFromAndCall} from {ERC1363} token contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC1363Receiver",
							"nameLocation": "312:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "514:825:0",
										"text": " @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param from address The address which are token transferred from\n @param amount uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
									},
									"functionSelector": "88a7ca5c",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onTransferReceived",
									"nameLocation": "1353:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1381:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1407:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1437:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1466:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1453:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:105:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1495:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:8:0"
									},
									"scope": 17,
									"src": "1344:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "302:1203:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:1391:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IERC5267",
							"nameLocation": "143:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:1",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 22,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"src": "247:28:1"
								},
								{
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:1",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 25,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "537:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "569:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "604:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "633:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "672:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 35,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "698:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 37,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 38,
													"nodeType": "ArrayTypeName",
													"src": "698:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:1"
									},
									"scope": 42,
									"src": "426:310:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "133:605:1",
							"usedErrors": [],
							"usedEvents": [
								22
							]
						}
					],
					"src": "107:632:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							179
						],
						"IERC20Errors": [
							84
						],
						"IERC721Errors": [
							132
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 45,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 54,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 59,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 64,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 73,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 78,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 83,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 180,
							"src": "278:1764:2",
							"usedErrors": [
								54,
								59,
								64,
								73,
								78,
								83
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 85,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 90,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 95,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 104,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 109,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 114,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 121,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 126,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 131,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 180,
							"src": "2186:2092:2",
							"usedErrors": [
								90,
								95,
								104,
								109,
								114,
								121,
								126,
								131
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 133,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 179,
							"linearizedBaseContracts": [
								179
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 144,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 149,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 154,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 161,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 166,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 171,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 178,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 180,
							"src": "4424:2107:2",
							"usedErrors": [
								144,
								149,
								154,
								161,
								166,
								171,
								178
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1018
						],
						"ERC20": [
							694
						],
						"IERC20": [
							772
						],
						"IERC20Errors": [
							84
						],
						"IERC20Metadata": [
							952
						]
					},
					"id": 695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 773,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 182,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 772,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 953,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 952,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 1019,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 186,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1018,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 180,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 188,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 84,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 191,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "1428:7:3"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "1437:6:3"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 952,
										"src": "1445:14:3"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 197,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 84,
										"src": "1461:12:3"
									},
									"id": 198,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 694,
							"linearizedBaseContracts": [
								694,
								84,
								952,
								772,
								1018
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 201,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 207,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 203,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 206,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 204,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 205,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 212,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 211,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 213,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 231,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 694,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										939
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 237,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 212,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 694,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										945
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 214,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 694,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										951
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 254,
												"id": 256,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 694,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 264,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 694,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										729
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 275,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 277,
													"indexExpression": {
														"id": 276,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 278,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 694,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 290,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 292,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 289,
												"id": 302,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 694,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										749
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 314,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 316,
														"indexExpression": {
															"id": 315,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 318,
													"indexExpression": {
														"id": 317,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 319,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 694,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										759
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 331,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 333,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															585,
															645
														],
														"referencedDeclaration": 585,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 330,
												"id": 343,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 694,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 357,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 359,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 356,
												"id": 375,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 694,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 387,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 388,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 401,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 400,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 394,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 393,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 399,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 402,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 403,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 414,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 694,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 435,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																446
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 446,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 471,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 445,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 450,
															"initialValue": {
																"baseExpression": {
																	"id": 447,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 449,
																"indexExpression": {
																	"id": 448,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 451,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 452,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 461,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 460,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 455,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 456,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 457,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 454,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 54,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 459,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 470,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 462,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 464,
																			"indexExpression": {
																				"id": 463,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 465,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 466,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 469,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 440,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 443,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 474,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 491,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 485,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 487,
																			"indexExpression": {
																				"id": 486,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 429,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 490,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 483,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 479,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 480,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 482,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 694,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 509,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 510,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 516,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 515,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 521,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 694,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 543,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 556,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 549,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 548,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 554,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 559,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 694,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 577,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															585,
															645
														],
														"referencedDeclaration": 645,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 694,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 612,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 619,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 618,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 624,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 627,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 630,
															"indexExpression": {
																"id": 628,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 631,
														"indexExpression": {
															"id": 629,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 632,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 635,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 594,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 694,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 658,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 657,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 663,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 669,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 670,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 679,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 673,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 674,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 675,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 672,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 677,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 689,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 681,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 682,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 683,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 684,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 680,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				585,
																				645
																			],
																			"referencedDeclaration": 645,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 688,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 694,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 695,
							"src": "1401:9741:3",
							"usedErrors": [
								54,
								59,
								64,
								73,
								78,
								83
							],
							"usedEvents": [
								706,
								715
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							772
						]
					},
					"id": 773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 697,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 772,
							"linearizedBaseContracts": [
								772
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 706,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 715,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 772,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 772,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 772,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 772,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 772,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 772,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 773,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								706,
								715
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2016
						],
						"EIP712": [
							2243
						],
						"ERC20": [
							694
						],
						"ERC20Permit": [
							926
						],
						"IERC20Permit": [
							988
						],
						"Nonces": [
							1086
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 989,
							"src": "148:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 775,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 988,
										"src": "156:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 695,
							"src": "197:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 777,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 694,
										"src": "205:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 2017,
							"src": "233:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 779,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2016,
										"src": "241:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 2244,
							"src": "294:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 781,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2243,
										"src": "302:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1087,
							"src": "357:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 783,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "365:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 786,
										"name": "ERC20",
										"nameLocations": [
											"929:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 694,
										"src": "929:5:5"
									},
									"id": 787,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:5"
								},
								{
									"baseName": {
										"id": 788,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "936:12:5"
									},
									"id": 789,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:5"
								},
								{
									"baseName": {
										"id": 790,
										"name": "EIP712",
										"nameLocations": [
											"950:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "950:6:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:5"
								},
								{
									"baseName": {
										"id": 792,
										"name": "Nonces",
										"nameLocations": [
											"958:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "958:6:5"
									},
									"id": 793,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:5"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 785,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:5",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1086,
								2243,
								42,
								988,
								694,
								84,
								952,
								772,
								1018
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "971:146:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 794,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 796,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 795,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:5",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 803,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1211:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:5"
									},
									"src": "1181:48:5"
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:5",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 810,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1312:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1328:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:5"
									},
									"src": "1285:58:5"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1624:2:5",
										"statements": []
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:5",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 821,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 816,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 813,
													"src": "1613:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 818,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 815,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2243,
												"src": "1606:6:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1586:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:5"
									},
									"scope": 926,
									"src": "1574:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										973
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1869:483:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 839,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 841,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1901:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 848,
												"nodeType": "IfStatement",
												"src": "1879:97:5",
												"trueBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "1911:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 844,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "1956:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 843,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "1932:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 846,
															"nodeType": "RevertStatement",
															"src": "1925:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "1986:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 849,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 854,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "2028:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 855,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "2045:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 856,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "2052:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "2061:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 859,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 824,
																			"src": "2078:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 858,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "2068:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 861,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "2086:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 852,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 851,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:5"
											},
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "2107:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 865,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "2139:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 867,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "2122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:5"
											},
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "2161:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 871,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"id": 875,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "2192:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 876,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2198:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 877,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "2201:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 878,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "2204:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 873,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "2178:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2016_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:5",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1966,
														"src": "2178:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2220:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 882,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2230:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "2216:88:5",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "2237:67:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 885,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "2279:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 886,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "2287:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2258:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "2251:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "2323:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2330:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "2339:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 891,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															585,
															645
														],
														"referencedDeclaration": 585,
														"src": "2314:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1705:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1728:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1753:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1776:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1802:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 831,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1819:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 833,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1838:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:5"
									},
									"scope": 926,
									"src": "1680:672:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981,
										1045
									],
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2506:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2536:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 909,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$926_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1045,
														"src": "2523:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 908,
												"id": 913,
												"nodeType": "Return",
												"src": "2516:26:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 905,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 903,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 988,
												"src": "2466:12:5"
											},
											{
												"id": 904,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1086,
												"src": "2480:6:5"
											}
										],
										"src": "2457:30:5"
									},
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2422:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:5"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2497:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:5"
									},
									"scope": 926,
									"src": "2406:143:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										987
									],
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "2724:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 921,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "2741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 920,
												"id": 923,
												"nodeType": "Return",
												"src": "2734:27:5"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2715:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:5"
									},
									"scope": 926,
									"src": "2656:112:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 927,
							"src": "896:1874:5",
							"usedErrors": [
								54,
								59,
								64,
								73,
								78,
								83,
								803,
								810,
								1028,
								1100,
								1102,
								1679,
								1684,
								1689
							],
							"usedEvents": [
								22,
								706,
								715
							]
						}
					],
					"src": "122:2649:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							772
						],
						"IERC20Metadata": [
							952
						]
					},
					"id": 953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 773,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 929,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 772,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 932,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "305:6:6"
									},
									"id": 933,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 931,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								772
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 952,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 952,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 952,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 953,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								706,
								715
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 955,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 988,
							"linearizedBaseContracts": [
								988
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:7",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3022:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3045:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3070:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3093:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3119:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 965,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3155:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 969,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:7"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:7"
									},
									"scope": 988,
									"src": "2997:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3501:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:7"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3539:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:7"
									},
									"scope": 988,
									"src": "3485:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:7"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "3791:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:7"
									},
									"scope": 988,
									"src": "3740:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 989,
							"src": "2113:1689:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1018
						]
					},
					"id": 1019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 991,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 996,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 995,
												"id": 998,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1018,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1005,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1007,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1018,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1013,
												"id": 1015,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1018,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1019,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1086
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:9",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1086,
							"linearizedBaseContracts": [
								1086
							],
							"name": "Nonces",
							"nameLocation": "227:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:9",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1028,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "361:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "378:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:9"
									},
									"src": "335:65:9"
								},
								{
									"constant": false,
									"id": 1032,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1086,
									"src": "406:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1031,
										"keyName": "account",
										"keyNameLocation": "422:7:9",
										"keyType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1030,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "607:38:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1040,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "624:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1042,
													"indexExpression": {
														"id": 1041,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "632:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1043,
												"nodeType": "Return",
												"src": "617:21:9"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:9",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "554:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:9"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "598:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:9"
									},
									"scope": 1086,
									"src": "538:107:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "828:326:9",
										"statements": [
											{
												"id": 1058,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:9",
												"statements": [
													{
														"expression": {
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:9",
															"subExpression": {
																"baseExpression": {
																	"id": 1053,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "1121:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1055,
																"indexExpression": {
																	"id": 1054,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "1129:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1052,
														"id": 1057,
														"nodeType": "Return",
														"src": "1114:23:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:9",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "778:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:9"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "819:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:9"
									},
									"scope": 1086,
									"src": "759:395:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "1338:149:9",
										"statements": [
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "1348:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"id": 1071,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "1376:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1070,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1366:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1396:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1075,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1405:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "1392:89:9",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "1414:67:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "1455:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1079,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "1462:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1077,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "1435:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1081,
															"nodeType": "RevertStatement",
															"src": "1428:42:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:9",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1291:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1306:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:9"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:9"
									},
									"scope": 1086,
									"src": "1265:222:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1087,
							"src": "209:1280:9",
							"usedErrors": [
								1028
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:9"
				},
				"id": 9
			},
			"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1092
						],
						"ShortStrings": [
							1303
						],
						"StorageSlot": [
							1413
						]
					},
					"id": 1304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1304,
							"sourceUnit": 1414,
							"src": "132:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1089,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1413,
										"src": "140:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1092,
							"name": "ShortString",
							"nameLocation": "353:11:10",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:10",
							"underlyingType": {
								"id": 1091,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1093,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:10",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1303,
							"linearizedBaseContracts": [
								1303
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1096,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "1345:111:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1094,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1100,
									"name": "StringTooLong",
									"nameLocation": "1469:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1097,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:10"
									},
									"src": "1463:32:10"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1102,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:10"
									},
									"src": "1500:27:10"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "1786:208:10",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "1796:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1111,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "1822:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1113,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1118,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1840:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "1836:72:10",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "1858:50:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "1893:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1122,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "1879:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "1872:25:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1136,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1112,
																						"src": "1965:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1134,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1132,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1139,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "1974:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1128,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1924:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1092_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:10",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1092_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1110,
												"id": 1144,
												"nodeType": "Return",
												"src": "1917:70:10"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:10",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1731:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:10"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1773:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1108,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1107,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "1773:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "1773:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:10"
									},
									"scope": 1303,
									"src": "1708:286:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "2152:331:10",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "2162:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"id": 1158,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "2187:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																"typeString": "ShortString"
															}
														],
														"id": 1157,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "2176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:10"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "2280:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1161,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1163,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:10"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:10",
													"nodeType": "YulBlock",
													"src": "2376:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:10"
																},
																"nativeSrc": "2390:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:10"
															},
															"nativeSrc": "2390:16:10",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:10"
																		},
																		"nativeSrc": "2426:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:10"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:10"
																},
																"nativeSrc": "2419:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:10"
															},
															"nativeSrc": "2419:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:10"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1162,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1162,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:10",
														"valueSize": 1
													}
												],
												"id": 1168,
												"nodeType": "InlineAssembly",
												"src": "2367:90:10"
											},
											{
												"expression": {
													"id": 1169,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "2473:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1170,
												"nodeType": "Return",
												"src": "2466:10:10"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:10",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2096:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1148,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "2096:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "2096:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:10"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2137:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:10"
									},
									"scope": 1303,
									"src": "2078:405:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "2625:175:10",
										"statements": [
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "2635:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1187,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "2679:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1185,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "2660:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1092_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:10",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1183,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1193,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "2706:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "2702:69:10",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "2719:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1196,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "2740:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1198,
															"nodeType": "RevertStatement",
															"src": "2733:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1201,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1182,
													"src": "2787:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1202,
												"nodeType": "Return",
												"src": "2780:13:10"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:10",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2575:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1174,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "2575:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "2575:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:10"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2616:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:10"
									},
									"scope": 1303,
									"src": "2555:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "3023:231:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1217,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "3043:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1215,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "3121:127:10",
													"statements": [
														{
															"expression": {
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1230,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1209,
																				"src": "3161:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1227,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "3135:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1413_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:10",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1390,
																			"src": "3135:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1321_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1321_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1320,
																	"src": "3135:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "3176:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1238,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "3219:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1236,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "3202:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1092_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:10",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1092_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1214,
															"id": 1240,
															"nodeType": "Return",
															"src": "3195:42:10"
														}
													]
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "3033:215:10",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "3063:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "3098:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1222,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "3084:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1092_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1214,
															"id": 1225,
															"nodeType": "Return",
															"src": "3077:27:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:10",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2949:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2970:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:10"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "3010:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "3010:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "3010:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:10"
									},
									"scope": 1303,
									"src": "2914:340:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "3494:158:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "3527:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1255,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "3508:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1092_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1259,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "3537:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "3609:37:10",
													"statements": [
														{
															"expression": {
																"id": 1266,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "3630:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1254,
															"id": 1267,
															"nodeType": "Return",
															"src": "3623:12:10"
														}
													]
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "3504:142:10",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "3556:47:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1262,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "3586:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1261,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "3577:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1254,
															"id": 1264,
															"nodeType": "Return",
															"src": "3570:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:10",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "3415:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1246,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "3415:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "3415:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "3434:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:10"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "3479:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:10"
									},
									"scope": 1303,
									"src": "3385:267:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "4132:174:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "4165:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1282,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "4146:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1092_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1286,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "4175:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "4249:51:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1295,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "4276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1293,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1281,
															"id": 1298,
															"nodeType": "Return",
															"src": "4263:26:10"
														}
													]
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "4142:158:10",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "4194:49:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1289,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "4226:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1288,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "4215:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1092_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1281,
															"id": 1291,
															"nodeType": "Return",
															"src": "4208:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:10",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4059:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1273,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "4059:11:10"
													},
													"referencedDeclaration": 1092,
													"src": "4059:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4078:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:10"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4123:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:10"
									},
									"scope": 1303,
									"src": "4027:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1304,
							"src": "1255:3053:10",
							"usedErrors": [
								1100,
								1102
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:10"
				},
				"id": 10
			},
			"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1413
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1306,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1309,
									"members": [
										{
											"constant": false,
											"id": 1308,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1309,
											"src": "1300:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1307,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1271:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1312,
									"members": [
										{
											"constant": false,
											"id": 1311,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1312,
											"src": "1355:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1310,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1326:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1315,
									"members": [
										{
											"constant": false,
											"id": 1314,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "1407:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1313,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1378:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1318,
									"members": [
										{
											"constant": false,
											"id": 1317,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1318,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1321,
									"members": [
										{
											"constant": false,
											"id": 1320,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1321,
											"src": "1516:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1319,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1488:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1324,
									"members": [
										{
											"constant": false,
											"id": 1323,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1324,
											"src": "1568:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1322,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:11",
									"nodeType": "StructDefinition",
									"scope": 1413,
									"src": "1541:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "1768:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:11",
													"nodeType": "YulBlock",
													"src": "1830:38:11",
													"statements": [
														{
															"nativeSrc": "1844:14:11",
															"nodeType": "YulAssignment",
															"src": "1844:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:11",
																"nodeType": "YulIdentifier",
																"src": "1854:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1331,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:11",
														"valueSize": 1
													}
												],
												"id": 1333,
												"nodeType": "InlineAssembly",
												"src": "1821:47:11"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1708:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:11"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1745:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1309_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1329,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1309,
														"src": "1745:11:11"
													},
													"referencedDeclaration": 1309,
													"src": "1745:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1309_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:11"
									},
									"scope": 1413,
									"src": "1684:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "2056:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:11",
													"nodeType": "YulBlock",
													"src": "2118:38:11",
													"statements": [
														{
															"nativeSrc": "2132:14:11",
															"nodeType": "YulAssignment",
															"src": "2132:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:11",
																"nodeType": "YulIdentifier",
																"src": "2142:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1342,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:11",
														"valueSize": 1
													}
												],
												"id": 1344,
												"nodeType": "InlineAssembly",
												"src": "2109:47:11"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1996:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:11"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "2033:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1312_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1340,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1312,
														"src": "2033:11:11"
													},
													"referencedDeclaration": 1312,
													"src": "2033:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1312_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:11"
									},
									"scope": 1413,
									"src": "1972:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "2344:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:11",
													"nodeType": "YulBlock",
													"src": "2406:38:11",
													"statements": [
														{
															"nativeSrc": "2420:14:11",
															"nodeType": "YulAssignment",
															"src": "2420:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:11",
																"nodeType": "YulIdentifier",
																"src": "2430:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1353,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:11",
														"valueSize": 1
													}
												],
												"id": 1355,
												"nodeType": "InlineAssembly",
												"src": "2397:47:11"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2284:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:11"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2321:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1315_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1351,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1315,
														"src": "2321:11:11"
													},
													"referencedDeclaration": 1315,
													"src": "2321:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1315_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:11"
									},
									"scope": 1413,
									"src": "2260:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "2632:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:11",
													"nodeType": "YulBlock",
													"src": "2694:38:11",
													"statements": [
														{
															"nativeSrc": "2708:14:11",
															"nodeType": "YulAssignment",
															"src": "2708:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:11",
																"nodeType": "YulIdentifier",
																"src": "2718:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:11",
														"valueSize": 1
													}
												],
												"id": 1366,
												"nodeType": "InlineAssembly",
												"src": "2685:47:11"
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2572:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:11"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2609:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1318_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1362,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1318,
														"src": "2609:11:11"
													},
													"referencedDeclaration": 1318,
													"src": "2609:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1318_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:11"
									},
									"scope": 1413,
									"src": "2548:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2917:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:11",
													"nodeType": "YulBlock",
													"src": "2979:38:11",
													"statements": [
														{
															"nativeSrc": "2993:14:11",
															"nodeType": "YulAssignment",
															"src": "2993:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:11",
																"nodeType": "YulIdentifier",
																"src": "3003:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1375,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:11",
														"valueSize": 1
													}
												],
												"id": 1377,
												"nodeType": "InlineAssembly",
												"src": "2970:47:11"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:11",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:11"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2895:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1321_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1373,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1321,
														"src": "2895:10:11"
													},
													"referencedDeclaration": 1321,
													"src": "2895:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1321_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:11"
									},
									"scope": 1413,
									"src": "2835:188:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "3225:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:11",
													"nodeType": "YulBlock",
													"src": "3287:44:11",
													"statements": [
														{
															"nativeSrc": "3301:20:11",
															"nodeType": "YulAssignment",
															"src": "3301:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:11",
																"nodeType": "YulIdentifier",
																"src": "3311:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1386,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1388,
												"nodeType": "InlineAssembly",
												"src": "3278:53:11"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3158:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:11"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3203:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1321_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1384,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1321,
														"src": "3203:10:11"
													},
													"referencedDeclaration": 1321,
													"src": "3203:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1321_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:11"
									},
									"scope": 1413,
									"src": "3135:202:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "3513:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:11",
													"nodeType": "YulBlock",
													"src": "3575:38:11",
													"statements": [
														{
															"nativeSrc": "3589:14:11",
															"nodeType": "YulAssignment",
															"src": "3589:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:11",
																"nodeType": "YulIdentifier",
																"src": "3599:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:11",
														"valueSize": 1
													}
												],
												"id": 1399,
												"nodeType": "InlineAssembly",
												"src": "3566:47:11"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:11",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "3455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:11"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "3492:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1324_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1324,
														"src": "3492:9:11"
													},
													"referencedDeclaration": 1324,
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1324_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:11"
									},
									"scope": 1413,
									"src": "3433:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "3816:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:11",
													"nodeType": "YulBlock",
													"src": "3878:44:11",
													"statements": [
														{
															"nativeSrc": "3892:20:11",
															"nodeType": "YulAssignment",
															"src": "3892:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:11",
																"nodeType": "YulIdentifier",
																"src": "3902:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1410,
												"nodeType": "InlineAssembly",
												"src": "3869:53:11"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "3751:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:11"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "3795:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1324_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1406,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1324,
														"src": "3795:9:11"
													},
													"referencedDeclaration": 1324,
													"src": "3795:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1324_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:11"
									},
									"scope": 1413,
									"src": "3729:199:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "1245:2685:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:11"
				},
				"id": 11
			},
			"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3371
						],
						"SignedMath": [
							3476
						],
						"Strings": [
							1668
						]
					},
					"id": 1669,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1669,
							"sourceUnit": 3372,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1416,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3371,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1669,
							"sourceUnit": 3477,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1418,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3476,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1668,
							"linearizedBaseContracts": [
								1668
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1423,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1668,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1421,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1426,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1668,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1424,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1425,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1433,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1479,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1442
														],
														"declarations": [
															{
																"constant": false,
																"id": 1442,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1479,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1449,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1445,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1443,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3371,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3371_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3191,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1451
														],
														"declarations": [
															{
																"constant": false,
																"id": 1451,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1479,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1450,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1456,
														"initialValue": {
															"arguments": [
																{
																	"id": 1454,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1452,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1458
														],
														"declarations": [
															{
																"constant": false,
																"id": 1458,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1479,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1459,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1442,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1458,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1460,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1475,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1462,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1464,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1423,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1458,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1436,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1465,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1469,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1474,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1473,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1476,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1477,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1440,
														"id": 1478,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1668,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1499,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3476,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3476_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3475,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1498,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1489,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1505,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1668,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1525,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1516,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1519,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1517,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3371,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3371_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3313,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1515,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1527,
																	1610,
																	1630
																],
																"referencedDeclaration": 1610,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1514,
														"id": 1524,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1668,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"id": 1539,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1530,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1541,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1546,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1552,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1554,
														"indexExpression": {
															"hexValue": "30",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1558,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1560,
														"indexExpression": {
															"hexValue": "31",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1592,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1578,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"id": 1579,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1581,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1585,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1582,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1588,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1591,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1572,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1593,
												"initializationExpression": {
													"assignments": [
														1565
													],
													"declarations": [
														{
															"constant": false,
															"id": 1565,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1593,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1564,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1571,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1567,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1575,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1577,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1594,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1603,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1602,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1599,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1597,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1601,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1604,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1608,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1668,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1623,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1621,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1619,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1626,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1618,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1527,
															1610,
															1630
														],
														"referencedDeclaration": 1610,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1617,
												"id": 1628,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1668,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1642,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1640,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1647,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1654,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1652,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1651,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1660,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1658,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1657,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1665,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1668,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1669,
							"src": "251:2847:12",
							"usedErrors": [
								1433
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2016
						]
					},
					"id": 2017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1670,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1671,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:13",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2016,
							"linearizedBaseContracts": [
								2016
							],
							"name": "ECDSA",
							"nameLocation": "352:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1676,
									"members": [
										{
											"id": 1672,
											"name": "NoError",
											"nameLocation": "392:7:13",
											"nodeType": "EnumValue",
											"src": "392:7:13"
										},
										{
											"id": 1673,
											"name": "InvalidSignature",
											"nameLocation": "409:16:13",
											"nodeType": "EnumValue",
											"src": "409:16:13"
										},
										{
											"id": 1674,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:13",
											"nodeType": "EnumValue",
											"src": "435:22:13"
										},
										{
											"id": 1675,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:13",
											"nodeType": "EnumValue",
											"src": "467:17:13"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:13",
									"nodeType": "EnumDefinition",
									"src": "364:126:13"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:13",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1679,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:13"
									},
									"src": "564:30:13"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:13",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1684,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "699:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:13"
									},
									"src": "665:50:13"
								},
								{
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:13",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1689,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "840:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:13"
									},
									"src": "811:40:13"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "2242:653:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1704,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "2256:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1739,
													"nodeType": "Block",
													"src": "2781:108:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1726,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1730,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "2815:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:13",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1674,
																		"src": "2815:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1676",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1734,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1694,
																					"src": "2860:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:13",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1732,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1737,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1703,
															"id": 1738,
															"nodeType": "Return",
															"src": "2795:83:13"
														}
													]
												},
												"id": 1740,
												"nodeType": "IfStatement",
												"src": "2252:637:13",
												"trueBody": {
													"id": 1725,
													"nodeType": "Block",
													"src": "2280:495:13",
													"statements": [
														{
															"assignments": [
																1709
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1709,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2294:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1708,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1710,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:13"
														},
														{
															"assignments": [
																1712
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1712,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2317:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1711,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1713,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:13"
														},
														{
															"assignments": [
																1715
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1715,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2340:7:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1714,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1716,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:13"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:13",
																"nodeType": "YulBlock",
																"src": "2548:171:13",
																"statements": [
																	{
																		"nativeSrc": "2566:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:13"
																					},
																					"nativeSrc": "2577:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:13"
																			},
																			"nativeSrc": "2571:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:13",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:13"
																					},
																					"nativeSrc": "2626:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:13"
																			},
																			"nativeSrc": "2620:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:13",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:13",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:13",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:13"
																							},
																							"nativeSrc": "2683:20:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:13"
																					},
																					"nativeSrc": "2677:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:13"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:13"
																			},
																			"nativeSrc": "2669:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:13"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:13"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1709,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1712,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1694,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1694,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1694,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1715,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:13",
																	"valueSize": 1
																}
															],
															"id": 1717,
															"nodeType": "InlineAssembly",
															"src": "2539:180:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1719,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "2750:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "2756:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "2759:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2762:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1718,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1742,
																		1822,
																		1930
																	],
																	"referencedDeclaration": 1930,
																	"src": "2739:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1703,
															"id": 1724,
															"nodeType": "Return",
															"src": "2732:32:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2149:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2163:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:13"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2219:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1676",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1698,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "2219:12:13"
													},
													"referencedDeclaration": 1676,
													"src": "2219:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1676",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2233:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:13"
									},
									"scope": 2016,
									"src": "2129:766:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "3789:168:13",
										"statements": [
											{
												"assignments": [
													1753,
													1756,
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "3800:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1752,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "3819:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1755,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1754,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1676,
																"src": "3819:12:13"
															},
															"referencedDeclaration": 1676,
															"src": "3819:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "3839:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1757,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"arguments": [
														{
															"id": 1760,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "3870:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1761,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "3876:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1759,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1742,
															1822,
															1930
														],
														"referencedDeclaration": 1742,
														"src": "3859:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1765,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "3908:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1766,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "3915:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1764,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "3896:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1676_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:13"
											},
											{
												"expression": {
													"id": 1769,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1753,
													"src": "3941:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1770,
												"nodeType": "Return",
												"src": "3934:16:13"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "3719:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "3733:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:13"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "3780:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:13"
									},
									"scope": 2016,
									"src": "3702:255:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "4285:342:13",
										"statements": [
											{
												"id": 1820,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:13",
												"statements": [
													{
														"assignments": [
															1790
														],
														"declarations": [
															{
																"constant": false,
																"id": 1790,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "4319:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1789,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1797,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1791,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "4331:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1792,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:13"
													},
													{
														"assignments": [
															1799
														],
														"declarations": [
															{
																"constant": false,
																"id": 1799,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "4522:7:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1798,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1812,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1804,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1779,
																							"src": "4547:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1803,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1802,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:13",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1808,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1814,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "4596:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1815,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "4602:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1816,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "4605:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1817,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "4608:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1813,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1742,
																	1822,
																	1930
																],
																"referencedDeclaration": 1930,
																"src": "4585:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1788,
														"id": 1819,
														"nodeType": "Return",
														"src": "4578:32:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4193:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4207:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1776,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4218:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:13"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4253:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4262:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1676",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "4262:12:13"
													},
													"referencedDeclaration": 1676,
													"src": "4262:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1676",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "4276:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:13"
									},
									"scope": 2016,
									"src": "4173:454:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "4840:164:13",
										"statements": [
											{
												"assignments": [
													1835,
													1838,
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "4851:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1834,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1838,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "4870:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1837,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1836,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1676,
																"src": "4870:12:13"
															},
															"referencedDeclaration": 1676,
															"src": "4870:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "4890:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1839,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"id": 1842,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "4921:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1843,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "4927:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1844,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "4930:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1841,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1742,
															1822,
															1930
														],
														"referencedDeclaration": 1822,
														"src": "4910:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "4955:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1849,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "4962:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1847,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "4943:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1676_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:13"
											},
											{
												"expression": {
													"id": 1852,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1835,
													"src": "4988:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1853,
												"nodeType": "Return",
												"src": "4981:16:13"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4771:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4785:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1826,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4796:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:13"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4831:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:13"
									},
									"scope": 2016,
									"src": "4754:250:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "5298:1372:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1876,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "6194:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1874,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1890,
												"nodeType": "IfStatement",
												"src": "6182:164:13",
												"trueBody": {
													"id": 1889,
													"nodeType": "Block",
													"src": "6267:79:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1880,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1884,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "6301:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:13",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1675,
																		"src": "6301:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1676",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1886,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "6333:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1887,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1873,
															"id": 1888,
															"nodeType": "Return",
															"src": "6281:54:13"
														}
													]
												}
											},
											{
												"assignments": [
													1892
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "6440:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1891,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"arguments": [
														{
															"id": 1894,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "6467:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1895,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "6473:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1896,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "6476:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1897,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "6479:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1893,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "6495:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1901,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1919,
												"nodeType": "IfStatement",
												"src": "6491:113:13",
												"trueBody": {
													"id": 1918,
													"nodeType": "Block",
													"src": "6517:87:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1906,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1910,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "6551:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:13",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1673,
																		"src": "6551:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1676",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1912,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1916,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1873,
															"id": 1917,
															"nodeType": "Return",
															"src": "6531:62:13"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1920,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "6622:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1921,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "6630:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:13",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "6630:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1923,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1927,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1928,
												"nodeType": "Return",
												"src": "6614:49:13"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5169:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5191:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5208:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5227:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:13"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5266:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5275:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1676",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1868,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "5275:12:13"
													},
													"referencedDeclaration": 1676,
													"src": "5275:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1676",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5289:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:13"
									},
									"scope": 2016,
									"src": "5140:1530:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "6897:166:13",
										"statements": [
											{
												"assignments": [
													1945,
													1948,
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1945,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "6908:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1944,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "6927:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1947,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1946,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1676,
																"src": "6927:12:13"
															},
															"referencedDeclaration": 1676,
															"src": "6927:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "6947:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1949,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1957,
												"initialValue": {
													"arguments": [
														{
															"id": 1952,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "6978:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1953,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "6984:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1954,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "6987:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1955,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "6990:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1951,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1742,
															1822,
															1930
														],
														"referencedDeclaration": 1930,
														"src": "6967:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1676_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "7014:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1960,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "7021:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1958,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "7002:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1676_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:13"
											},
											{
												"expression": {
													"id": 1963,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1945,
													"src": "7047:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1964,
												"nodeType": "Return",
												"src": "7040:16:13"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6820:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6834:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1934,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6843:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1936,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6854:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:13"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "6888:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:13"
									},
									"scope": 2016,
									"src": "6803:260:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "7268:460:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1676",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1975,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "7282:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1976,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "7291:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:13",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1672,
														"src": "7291:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1676",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1981,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "7378:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1982,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "7387:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:13",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "7387:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1676",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1989,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "7483:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1676",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1990,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "7492:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:13",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1674,
																"src": "7492:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1676",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1676",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2001,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1970,
																	"src": "7617:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1676",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2002,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "7626:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1676_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:13",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1675,
																	"src": "7626:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1676",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2010,
															"nodeType": "IfStatement",
															"src": "7613:109:13",
															"trueBody": {
																"id": 2009,
																"nodeType": "Block",
																"src": "7658:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2006,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "7702:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2005,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "7679:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2008,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:13"
																	}
																]
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "7479:243:13",
														"trueBody": {
															"id": 2000,
															"nodeType": "Block",
															"src": "7529:78:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1996,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1972,
																						"src": "7586:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1994,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1993,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1684,
																			"src": "7550:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1999,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:13"
																}
															]
														}
													},
													"id": 2012,
													"nodeType": "IfStatement",
													"src": "7374:348:13",
													"trueBody": {
														"id": 1988,
														"nodeType": "Block",
														"src": "7418:55:13",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1985,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1679,
																		"src": "7439:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1987,
																"nodeType": "RevertStatement",
																"src": "7432:30:13"
															}
														]
													}
												},
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "7278:444:13",
												"trueBody": {
													"id": 1980,
													"nodeType": "Block",
													"src": "7313:55:13",
													"statements": [
														{
															"functionReturnParameters": 1974,
															"id": 1979,
															"nodeType": "Return",
															"src": "7327:7:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:13",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "7217:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1676",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1968,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "7217:12:13"
													},
													"referencedDeclaration": 1676,
													"src": "7217:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1676",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "7237:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1971,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:13"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:13"
									},
									"scope": 2016,
									"src": "7196:532:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2017,
							"src": "344:7386:13",
							"usedErrors": [
								1679,
								1684,
								1689
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:13"
				},
				"id": 13
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2243
						],
						"IERC5267": [
							42
						],
						"MessageHashUtils": [
							2317
						],
						"ShortString": [
							1092
						],
						"ShortStrings": [
							1303
						]
					},
					"id": 2244,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:14"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2020,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2244,
							"sourceUnit": 2318,
							"src": "139:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2019,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2317,
										"src": "147:16:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2244,
							"sourceUnit": 1304,
							"src": "196:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2021,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1303,
										"src": "204:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2022,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1092,
										"src": "218:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2244,
							"sourceUnit": 43,
							"src": "259:55:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2024,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "267:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2027,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 42,
										"src": "1988:8:14"
									},
									"id": 2028,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:14"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2026,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:14",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2243,
							"linearizedBaseContracts": [
								2243,
								42
							],
							"name": "EIP712",
							"nameLocation": "1978:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2030,
									"libraryName": {
										"id": 2029,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1303,
										"src": "2009:12:14"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:14"
								},
								{
									"constant": true,
									"id": 2035,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2034:140:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2031,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2033,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2032,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2034,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2037,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2373:48:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2036,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2039,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2427:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2038,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2041,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2473:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2040,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2043,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2517:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2042,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2045,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2560:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2044,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2048,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2607:35:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2047,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2046,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1092,
											"src": "2607:11:14"
										},
										"referencedDeclaration": 1092,
										"src": "2607:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2051,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2648:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2050,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2049,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1092,
											"src": "2648:11:14"
										},
										"referencedDeclaration": 1092,
										"src": "2648:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2053,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2692:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2052,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2055,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 2243,
									"src": "2726:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2054,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "3383:376:14",
										"statements": [
											{
												"expression": {
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2063,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2066,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "3432:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2064,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "3401:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1244,
															"src": "3401:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1092_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:14"
											},
											{
												"expression": {
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2070,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "3456:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2073,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "3501:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2071,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "3467:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1244,
															"src": "3467:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1092_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
														"typeString": "ShortString"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:14"
											},
											{
												"expression": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2077,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "3528:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2081,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "3558:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2079,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2078,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:14"
											},
											{
												"expression": {
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2086,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "3574:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2090,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2060,
																		"src": "3607:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2088,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2087,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:14"
											},
											{
												"expression": {
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2095,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "3627:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2096,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:14",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:14"
											},
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2100,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "3667:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2101,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "3692:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:14"
											},
											{
												"expression": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2105,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "3725:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2108,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2243",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2243",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2106,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:14"
											}
										]
									},
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:14",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3340:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3360:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2059,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:14"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:14"
									},
									"scope": 2243,
									"src": "3328:431:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "3907:200:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2243",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2243",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2123,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "3938:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2125,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2127,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "3970:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2136,
													"nodeType": "Block",
													"src": "4046:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2133,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "4067:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2118,
															"id": 2135,
															"nodeType": "Return",
															"src": "4060:30:14"
														}
													]
												},
												"id": 2137,
												"nodeType": "IfStatement",
												"src": "3917:184:14",
												"trueBody": {
													"id": 2132,
													"nodeType": "Block",
													"src": "3986:54:14",
													"statements": [
														{
															"expression": {
																"id": 2130,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "4007:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2118,
															"id": 2131,
															"nodeType": "Return",
															"src": "4000:29:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:14",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:14"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "3898:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:14"
									},
									"scope": 2243,
									"src": "3845:262:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "4177:115:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2147,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "4215:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2148,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2043,
																	"src": "4226:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2149,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "4239:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2150,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:14",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2154,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2243",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2243",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2152,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2145,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2144,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2158,
												"nodeType": "Return",
												"src": "4187:98:14"
											}
										]
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:14"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "4168:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:14"
									},
									"scope": 2243,
									"src": "4113:179:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "5003:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2170,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "5053:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2172,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "5075:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2168,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "5020:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2317_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:14",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2316,
														"src": "5020:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2167,
												"id": 2174,
												"nodeType": "Return",
												"src": "5013:73:14"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:14",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "4943:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:14"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "4994:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:14"
									},
									"scope": 2243,
									"src": "4917:176:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "5472:229:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2196,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "5533:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2198,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "5560:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2200,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2204,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2243",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2243",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2206,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2210,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2211,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2215,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2216,
												"nodeType": "Return",
												"src": "5482:212:14"
											}
										]
									},
									"documentation": {
										"id": 2177,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:14",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:14"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5242:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5269:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5301:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5336:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5365:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5404:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "5430:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2191,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2192,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:14"
									},
									"scope": 2243,
									"src": "5144:557:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "6082:65:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2226,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "6126:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2224,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "6099:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																"typeString": "ShortString"
															}
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1271,
														"src": "6099:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1092_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1092_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2228,
												"nodeType": "Return",
												"src": "6092:48:14"
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:14",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:14"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "6067:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:14"
									},
									"scope": 2243,
									"src": "6021:126:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "6537:71:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2238,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "6584:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2236,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "6554:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1092",
																"typeString": "ShortString"
															}
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1271,
														"src": "6554:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1092_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1092_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2235,
												"id": 2240,
												"nodeType": "Return",
												"src": "6547:54:14"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:14",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:14"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "6522:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:14"
									},
									"scope": 2243,
									"src": "6473:135:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2244,
							"src": "1960:4650:14",
							"usedErrors": [
								1100,
								1102
							],
							"usedEvents": [
								22
							]
						}
					],
					"src": "113:6498:14"
				},
				"id": 14
			},
			"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2317
						],
						"Strings": [
							1668
						]
					},
					"id": 2318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2245,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:15"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2247,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2318,
							"sourceUnit": 1669,
							"src": "149:39:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2246,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1668,
										"src": "157:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2248,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:15",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2317,
							"linearizedBaseContracts": [
								2317
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "1314:368:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:15",
													"nodeType": "YulBlock",
													"src": "1376:300:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:15",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:15",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:15"
																},
																"nativeSrc": "1390:48:15",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:15"
															},
															"nativeSrc": "1390:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:15",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:15"
																},
																"nativeSrc": "1492:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:15"
															},
															"nativeSrc": "1492:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:15"
														},
														{
															"nativeSrc": "1571:31:15",
															"nodeType": "YulAssignment",
															"src": "1571:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:15",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:15"
																},
																"nativeSrc": "1581:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2254,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2251,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:15",
														"valueSize": 1
													}
												],
												"id": 2256,
												"nodeType": "InlineAssembly",
												"src": "1367:309:15"
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1254:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2250,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:15"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "1298:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:15"
									},
									"scope": 2317,
									"src": "1222:460:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "2234:143:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2275,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2261,
																						"src": "2343:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:15",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2273,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1668,
																					"src": "2326:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1668_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:15",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1481,
																				"src": "2326:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2271,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2279,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "2361:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2267,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:15",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2266,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2282,
												"nodeType": "Return",
												"src": "2244:126:15"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "2180:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:15"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "2225:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:15"
									},
									"scope": 2317,
									"src": "2148:229:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "2831:80:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2298,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2287,
																	"src": "2887:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2299,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2289,
																	"src": "2898:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2295,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2294,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2302,
												"nodeType": "Return",
												"src": "2841:63:15"
											}
										]
									},
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:15",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2761:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2780:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:15"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2822:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:15"
									},
									"scope": 2317,
									"src": "2720:191:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "3462:292:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:15",
													"nodeType": "YulBlock",
													"src": "3524:224:15",
													"statements": [
														{
															"nativeSrc": "3538:22:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:15",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:15"
																},
																"nativeSrc": "3549:11:15",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:15"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:15"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:15",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:15",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:15"
																},
																"nativeSrc": "3573:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:15"
															},
															"nativeSrc": "3573:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:15",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:15"
																		},
																		"nativeSrc": "3616:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:15"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:15",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:15"
																},
																"nativeSrc": "3609:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:15"
															},
															"nativeSrc": "3609:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:15",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:15"
																		},
																		"nativeSrc": "3668:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:15"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:15"
																},
																"nativeSrc": "3661:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:15"
															},
															"nativeSrc": "3661:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:15"
														},
														{
															"nativeSrc": "3708:30:15",
															"nodeType": "YulAssignment",
															"src": "3708:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:15",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:15"
																},
																"nativeSrc": "3718:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2312,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2307,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:15",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:15",
														"valueSize": 1
													}
												],
												"id": 2314,
												"nodeType": "InlineAssembly",
												"src": "3515:233:15"
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:15",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "3378:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "3403:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:15"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "3446:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:15"
									},
									"scope": 2317,
									"src": "3353:401:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2318,
							"src": "521:3235:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:15"
				},
				"id": 15
			},
			"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3371
						]
					},
					"id": 3372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2320,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3371,
							"linearizedBaseContracts": [
								3371
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2323,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2328,
									"members": [
										{
											"id": 2324,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2325,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2326,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2327,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2358,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2341
														],
														"declarations": [
															{
																"constant": false,
																"id": 2341,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2358,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2340,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2345,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2343,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2353,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2339,
															"id": 2352,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2356,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2339,
														"id": 2357,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2329,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3371,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2386,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2372,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2365,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2373,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2371,
															"id": 2378,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2381,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2382,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2365,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2384,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2371,
														"id": 2385,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3371,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2428,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2400,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2407,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2405,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2399,
															"id": 2406,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2409
														],
														"declarations": [
															{
																"constant": false,
																"id": 2409,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2428,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2413,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2414,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2415,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2417,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2423,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2399,
															"id": 2422,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2425,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2426,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2399,
														"id": 2427,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3371,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2456,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2442,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2435,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2449,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2447,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2441,
															"id": 2448,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2451,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2433,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2452,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2435,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2454,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2441,
														"id": 2455,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3371,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2484,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2470,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2463,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2477,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2475,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2469,
															"id": 2476,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2479,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2461,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2480,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2463,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2482,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2469,
														"id": 2483,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3371,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2496,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2497,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2500,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2499,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2502,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3371,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2514,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2515,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2518,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2517,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2513,
												"id": 2520,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3371,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2544,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2533,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2527,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2535,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2536,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2537,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2527,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2539,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2531,
												"id": 2543,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3371,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2555,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2563,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2562,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2558,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2548,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2559,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2554,
															"id": 2561,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2564,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2568,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2548,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2554,
												"id": 2577,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3371,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2703,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2592
														],
														"declarations": [
															{
																"constant": false,
																"id": 2592,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2703,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2596,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2593,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2582,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2594,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2584,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2598
														],
														"declarations": [
															{
																"constant": false,
																"id": 2598,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2703,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2597,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2599,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2598,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2582,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2584,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2600,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2601,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2608,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2604,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2592,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2605,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2590,
																	"id": 2607,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2610,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2611,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2617,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2616,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2613,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2615,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2619
														],
														"declarations": [
															{
																"constant": false,
																"id": 2619,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2703,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2620,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2586,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2598,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2598,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2619,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2619,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2619,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2582,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2584,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2621,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2623
														],
														"declarations": [
															{
																"constant": false,
																"id": 2623,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2703,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2626,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2586,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2586,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2592,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2623,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2623,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2623,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2623,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2623,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2631,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2632,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2592,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2633,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2634,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2637,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2639
														],
														"declarations": [
															{
																"constant": false,
																"id": 2639,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2703,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2638,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2646,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2641,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2647,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2649,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2650,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2654,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2655,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2657,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2658,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2662,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2663,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2665,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2666,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2670,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2671,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2673,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2674,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2678,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2679,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2681,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2682,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2686,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2687,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2689,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2690,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2694,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2696,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2592,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2697,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2700,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2701,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2590,
														"id": 2702,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3371,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2721
												],
												"declarations": [
													{
														"constant": false,
														"id": 2721,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2747,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2727,
												"initialValue": {
													"arguments": [
														{
															"id": 2723,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2724,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2725,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2722,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2705,
															2748
														],
														"referencedDeclaration": 2705,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2729,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2328",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2328",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2728,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3370,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2328_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2732,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2733,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2710,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2734,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2712,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2731,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2744,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2743,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2739,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2721,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2742,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2745,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2721,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2719,
												"id": 2746,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2713,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3371,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2762,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2761,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2755,
															"id": 2760,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2764
												],
												"declarations": [
													{
														"constant": false,
														"id": 2764,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2859,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2773,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2767,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2751,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2766,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3027,
																			3062
																		],
																		"referencedDeclaration": 3027,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2771,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2858,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2774,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2775,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2776,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2777,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2780,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2784,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2785,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2786,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2787,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2788,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2791,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2795,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2796,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2797,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2798,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2799,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2802,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2806,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2807,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2808,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2809,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2810,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2813,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2817,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2818,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2819,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2820,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2821,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2824,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2828,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2829,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2830,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2831,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2832,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2835,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2839,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2840,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2841,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2764,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2842,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2751,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2843,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2846,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2850,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2852,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2764,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2853,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2751,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2854,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2764,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2851,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2755,
														"id": 2857,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2749,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3371,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2893,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2872
														],
														"declarations": [
															{
																"constant": false,
																"id": 2872,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2893,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2876,
														"initialValue": {
															"arguments": [
																{
																	"id": 2874,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2863,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2873,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2860,
																	2895
																],
																"referencedDeclaration": 2860,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2879,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2866,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2878,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3370,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2328_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2881,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2872,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2882,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2872,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2884,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2863,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2870,
														"id": 2892,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2864,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3371,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2904
												],
												"declarations": [
													{
														"constant": false,
														"id": 2904,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3026,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2906,
												"initialValue": {
													"hexValue": "30",
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3023,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2921,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2920,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2912,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2915,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2916,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2919,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2936,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2935,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2927,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2930,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2931,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2934,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2951,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2950,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2942,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2945,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2946,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2949,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2952,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2957,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2960,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2981,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2980,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2975,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2976,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2979,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2996,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2995,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2987,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2990,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2991,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2994,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2997,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3011,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3010,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3002,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2898,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3005,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3006,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3009,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3024,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2904,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2902,
												"id": 3025,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3371,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3061,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3060,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3039
														],
														"declarations": [
															{
																"constant": false,
																"id": 3039,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3060,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3043,
														"initialValue": {
															"arguments": [
																{
																	"id": 3041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3030,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3040,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3027,
																	3062
																],
																"referencedDeclaration": 3027,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3044,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3039,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3046,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3033,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3045,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3370,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2328_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3048,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3049,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3039,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3051,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3030,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3057,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3037,
														"id": 3059,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3028,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3031,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3371,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3190,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3071
												],
												"declarations": [
													{
														"constant": false,
														"id": 3071,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3190,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3070,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3073,
												"initialValue": {
													"hexValue": "30",
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3187,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3074,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3090,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3089,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3079,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3084,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3085,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3088,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3091,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3107,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3106,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3101,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3102,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3105,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3124,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3123,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3118,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3119,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3122,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3125,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3141,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3140,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3135,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3136,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3139,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3158,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3157,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3156,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3159,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3175,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3174,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3065,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3169,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3173,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3176,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3186,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3185,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3071,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3184,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3188,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3071,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3069,
												"id": 3189,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3063,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3371,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3225,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3224,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3203
														],
														"declarations": [
															{
																"constant": false,
																"id": 3203,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3224,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3207,
														"initialValue": {
															"arguments": [
																{
																	"id": 3205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3194,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3204,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3191,
																	3226
																],
																"referencedDeclaration": 3191,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3210,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3197,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3209,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3370,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2328_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3212,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3213,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3203,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3215,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3194,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3201,
														"id": 3223,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3192,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3197,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3195,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3371,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3312,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3235
												],
												"declarations": [
													{
														"constant": false,
														"id": 3235,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3312,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3237,
												"initialValue": {
													"hexValue": "30",
													"id": 3236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3309,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3252,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3251,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3246,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3250,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3267,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3266,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3258,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3261,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3262,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3265,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3282,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3281,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3273,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3276,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3280,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3283,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3297,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3296,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3291,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3292,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3295,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3298,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3308,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3307,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3235,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3306,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3310,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3235,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3233,
												"id": 3311,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3227,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3313,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3313,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3371,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3350,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3349,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3325
														],
														"declarations": [
															{
																"constant": false,
																"id": 3325,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3349,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3324,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3329,
														"initialValue": {
															"arguments": [
																{
																	"id": 3327,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3316,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3326,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3313,
																	3351
																],
																"referencedDeclaration": 3313,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3330,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3332,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3319,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2328",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3331,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3370,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2328_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3337,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3335,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3325,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3336,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3338,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3340,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3316,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3323,
														"id": 3348,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3314,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3317,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3371,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3369,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3362,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3355,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2328",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2328",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3360,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3359,
												"id": 3368,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3352,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2328",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3353,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2328,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2328,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2328",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3371,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3372,
							"src": "203:14914:16",
							"usedErrors": [
								2323
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3476
						]
					},
					"id": 3477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3374,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3476,
							"linearizedBaseContracts": [
								3476
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3391,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3384,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3385,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3379,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3379,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3387,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3383,
												"id": 3390,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3376,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3379,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3476,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3409,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3402,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3395,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3403,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3397,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3406,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3397,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3405,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3395,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3401,
												"id": 3408,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3393,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3410,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3394,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3410,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3410,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3399,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3476,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3453,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3421
												],
												"declarations": [
													{
														"constant": false,
														"id": 3421,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3453,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3420,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3434,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3422,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3413,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3423,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3415,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3425,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3426,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3413,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3427,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3415,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3429,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3432,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3435,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3421,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3440,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3421,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3438,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3436,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3445,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3413,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3446,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3415,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3450,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3419,
												"id": 3452,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3411,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3412,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3414,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3417,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3476,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3474,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3473,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3464,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3457,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3468,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3457,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3467,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3457,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3461,
														"id": 3472,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3455,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3476,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3477,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"src/Hulio.sol": {
				"ast": {
					"absolutePath": "src/Hulio.sol",
					"exportedSymbols": {
						"ECDSA": [
							2016
						],
						"EIP712": [
							2243
						],
						"ERC20": [
							694
						],
						"ERC20Permit": [
							926
						],
						"Hulio": [
							3611
						],
						"IERC1363Receiver": [
							17
						],
						"IERC20Permit": [
							988
						],
						"Nonces": [
							1086
						]
					},
					"id": 3612,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:18"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 927,
							"src": "65:72:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
							"id": 3480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 18,
							"src": "138:65:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3482,
										"name": "ERC20Permit",
										"nameLocations": [
											"251:11:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "251:11:18"
									},
									"id": 3483,
									"nodeType": "InheritanceSpecifier",
									"src": "251:11:18"
								}
							],
							"canonicalName": "Hulio",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3481,
								"nodeType": "StructuredDocumentation",
								"src": "204:28:18",
								"text": " erc20代币合约"
							},
							"fullyImplemented": true,
							"id": 3611,
							"linearizedBaseContracts": [
								3611,
								926,
								1086,
								2243,
								42,
								988,
								694,
								84,
								952,
								772,
								1018
							],
							"name": "Hulio",
							"nameLocation": "242:5:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3494,
										"nodeType": "Block",
										"src": "362:2:18",
										"statements": []
									},
									"documentation": {
										"id": 3484,
										"nodeType": "StructuredDocumentation",
										"src": "270:31:18",
										"text": " 构造函数"
									},
									"id": 3495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "48756c696f",
													"id": 3487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "326:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c112fe65f53648bf23856243374cc1c0696bf78cd6a546c1f10240fb2750e383",
														"typeString": "literal_string \"Hulio\""
													},
													"value": "Hulio"
												},
												{
													"hexValue": "4855",
													"id": 3488,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "335:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a9dbbefc6f5623fc44707c7a17bdd047ff565ab358e396dce914f70a9e5c6a5a",
														"typeString": "literal_string \"HU\""
													},
													"value": "HU"
												}
											],
											"id": 3489,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3486,
												"name": "ERC20",
												"nameLocations": [
													"320:5:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 694,
												"src": "320:5:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "320:20:18"
										},
										{
											"arguments": [
												{
													"hexValue": "48756c696f",
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "353:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c112fe65f53648bf23856243374cc1c0696bf78cd6a546c1f10240fb2750e383",
														"typeString": "literal_string \"Hulio\""
													},
													"value": "Hulio"
												}
											],
											"id": 3492,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3490,
												"name": "ERC20Permit",
												"nameLocations": [
													"341:11:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "341:11:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "341:20:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:18"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:18"
									},
									"scope": 3611,
									"src": "306:58:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"errorSelector": "231b03ae",
									"id": 3501,
									"name": "ERC1363TransferFailed",
									"nameLocation": "403:21:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "433:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "425:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "445:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "437:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:27:18"
									},
									"src": "397:55:18"
								},
								{
									"errorSelector": "373c5c78",
									"id": 3505,
									"name": "ERC1363ReceiveFailed",
									"nameLocation": "500:20:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "529:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3505,
												"src": "521:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:12:18"
									},
									"src": "494:39:18"
								},
								{
									"body": {
										"id": 3517,
										"nodeType": "Block",
										"src": "618:43:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "634:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "638:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "634:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 3514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "646:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "39",
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "652:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "646:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														],
														"id": 3509,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "628:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "628:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3516,
												"nodeType": "ExpressionStatement",
												"src": "628:26:18"
											}
										]
									},
									"documentation": {
										"id": 3506,
										"nodeType": "StructuredDocumentation",
										"src": "539:49:18",
										"text": " mint, 暂时允许所有人挖"
									},
									"functionSelector": "1249c58b",
									"id": 3518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "602:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:18"
									},
									"returnParameters": {
										"id": 3508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:0:18"
									},
									"scope": 3611,
									"src": "593:68:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3552,
										"nodeType": "Block",
										"src": "862:241:18",
										"statements": [
											{
												"condition": {
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "898:20:18",
													"subExpression": {
														"arguments": [
															{
																"id": 3531,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3521,
																"src": "908:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3532,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3523,
																"src": "912:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3530,
															"name": "transfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "899:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) returns (bool)"
															}
														},
														"id": 3533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "899:19:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3541,
												"nodeType": "IfStatement",
												"src": "894:90:18",
												"trueBody": {
													"id": 3540,
													"nodeType": "Block",
													"src": "920:64:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3536,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3521,
																		"src": "963:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3537,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3523,
																		"src": "967:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3535,
																	"name": "ERC1363TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3501,
																	"src": "941:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 3538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "941:32:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3539,
															"nodeType": "RevertStatement",
															"src": "934:39:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3543,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "1044:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1044:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3521,
															"src": "1058:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "1062:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3525,
															"src": "1069:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 3542,
														"name": "_checkOnTransferReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3610,
														"src": "1019:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:55:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3549,
												"nodeType": "ExpressionStatement",
												"src": "1019:55:18"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1092:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3529,
												"id": 3551,
												"nodeType": "Return",
												"src": "1085:11:18"
											}
										]
									},
									"documentation": {
										"id": 3519,
										"nodeType": "StructuredDocumentation",
										"src": "667:65:18",
										"text": " transfer and invoke hook (if to is a contract)"
									},
									"functionSelector": "4000aea0",
									"id": 3553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "746:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "779:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "771:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "799:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "791:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "829:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "814:19:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "814:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:78:18"
									},
									"returnParameters": {
										"id": 3529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "856:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "856:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:6:18"
									},
									"scope": 3611,
									"src": "737:366:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "1284:569:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3565,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3558,
																"src": "1331:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1334:4:18",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1331:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:6:18",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1331:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1349:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1331:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3572,
												"nodeType": "IfStatement",
												"src": "1327:56:18",
												"trueBody": {
													"id": 3571,
													"nodeType": "Block",
													"src": "1352:31:18",
													"statements": [
														{
															"functionReturnParameters": 3564,
															"id": 3570,
															"nodeType": "Return",
															"src": "1366:7:18"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 3597,
															"nodeType": "Block",
															"src": "1614:148:18",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 3590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3586,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3584,
																			"src": "1632:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"id": 3587,
																					"name": "IERC1363Receiver",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 17,
																					"src": "1642:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$17_$",
																						"typeString": "type(contract IERC1363Receiver)"
																					}
																				},
																				"id": 3588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1659:18:18",
																				"memberName": "onTransferReceived",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "1642:35:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes memory) returns (bytes4)"
																				}
																			},
																			"id": 3589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1678:8:18",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "1642:44:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "1632:54:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3596,
																	"nodeType": "IfStatement",
																	"src": "1628:124:18",
																	"trueBody": {
																		"id": 3595,
																		"nodeType": "Block",
																		"src": "1688:64:18",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 3592,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3558,
																							"src": "1734:2:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3591,
																						"name": "ERC1363ReceiveFailed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3505,
																						"src": "1713:20:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																							"typeString": "function (address) pure returns (error)"
																						}
																					},
																					"id": 3593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1713:24:18",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 3594,
																				"nodeType": "RevertStatement",
																				"src": "1706:31:18"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 3598,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3585,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3584,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "1606:6:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 3598,
																	"src": "1599:13:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 3583,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "1599:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "1598:15:18"
														},
														"src": "1590:172:18"
													},
													{
														"block": {
															"id": 3606,
															"nodeType": "Block",
															"src": "1791:56:18",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 3603,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3558,
																				"src": "1833:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3602,
																			"name": "ERC1363ReceiveFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3505,
																			"src": "1812:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 3604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1812:24:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 3605,
																	"nodeType": "RevertStatement",
																	"src": "1805:31:18"
																}
															]
														},
														"errorName": "",
														"id": 3607,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3601,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3600,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "1783:6:18",
																	"nodeType": "VariableDeclaration",
																	"scope": 3607,
																	"src": "1770:19:18",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 3599,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1770:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "1769:21:18"
														},
														"src": "1763:84:18"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3577,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "1488:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1488:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3579,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3556,
															"src": "1518:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3560,
															"src": "1540:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3581,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3562,
															"src": "1563:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3574,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3558,
																	"src": "1448:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3573,
																"name": "IERC1363Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1431:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$17_$",
																	"typeString": "type(contract IERC1363Receiver)"
																}
															},
															"id": 3575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1431:20:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1363Receiver_$17",
																"typeString": "contract IERC1363Receiver"
															}
														},
														"id": 3576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1452:18:18",
														"memberName": "onTransferReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "1431:39:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 3582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1431:150:18",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 3608,
												"nodeType": "TryStatement",
												"src": "1415:432:18"
											}
										]
									},
									"documentation": {
										"id": 3554,
										"nodeType": "StructuredDocumentation",
										"src": "1109:30:18",
										"text": " invoke hook"
									},
									"id": 3610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnTransferReceived",
									"nameLocation": "1153:24:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1195:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "1187:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1217:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "1209:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1237:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "1229:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1265:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "1252:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:98:18"
									},
									"returnParameters": {
										"id": 3564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:18"
									},
									"scope": 3611,
									"src": "1144:709:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3612,
							"src": "233:1622:18",
							"usedErrors": [
								54,
								59,
								64,
								73,
								78,
								83,
								803,
								810,
								1028,
								1100,
								1102,
								1679,
								1684,
								1689,
								3501,
								3505
							],
							"usedEvents": [
								22,
								706,
								715
							]
						}
					],
					"src": "39:1817:18"
				},
				"id": 18
			}
		}
	}
}